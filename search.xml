<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/xuanyao/4a17b156.html</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
      <categories>
        <category>测试</category>
      </categories>
      <tags>
        <tag>测试</tag>
        <tag>你好世界</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL语句</title>
    <url>/xuanyao/b51e1490.html</url>
    <content><![CDATA[<h1 id="SQL语句复习"><a href="#SQL语句复习" class="headerlink" title="SQL语句复习"></a>SQL语句复习</h1><h2 id="1-创建数据库"><a href="#1-创建数据库" class="headerlink" title="1.创建数据库"></a>1.创建数据库</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> database 数据库名称</span><br><span class="line"><span class="keyword">on</span></span><br><span class="line">(</span><br><span class="line">    name<span class="operator">=</span>数据文件逻辑名称,</span><br><span class="line">    filename<span class="operator">=</span><span class="string">&#x27;路径+数据文件名&#x27;</span>,</span><br><span class="line">    size<span class="operator">=</span>数据文件初始大小,</span><br><span class="line">    maxsize<span class="operator">=</span>数据文件最大容量,</span><br><span class="line">    filegrowth<span class="operator">=</span>数据文件自动增长容量</span><br><span class="line">)</span><br><span class="line">log <span class="keyword">on</span></span><br><span class="line">(</span><br><span class="line">    name<span class="operator">=</span>日志文件逻辑名称,</span><br><span class="line">    filename<span class="operator">=</span><span class="string">&#x27;路径+日志文件名&#x27;</span>,</span><br><span class="line">    size<span class="operator">=</span>日志文件初始大小,</span><br><span class="line">    maxsize<span class="operator">=</span> 日志文件最大容量,</span><br><span class="line">    filegrowth<span class="operator">=</span>日志文件自动增长容量</span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<p><strong>（1）</strong> <em><strong>name:</strong></em>  数据文件名称一般为  (<em>name</em>)  _Data ，日志文件名称一般为（<em>name</em>）_Log 。</p>
<p><strong>（2）</strong>  <em><strong>filename：</strong></em> 数据文件名后缀为 .mdf ，日志文件名后缀为 .ldf 。</p>
<p><strong>（3）</strong> <em><strong>maxsize:</strong></em>  设置为 unlimited 时，表示文件最大大小无限制。</p>
<p><strong>（4）</strong> <em><strong>filegrowth:</strong></em>  可以设置为具体值（—M）或者百分比（—%），设置为 unlimited 时，表示文件无限制增长。</p>
<p><strong>（5）</strong>  某些属性不设置时，创建数据库时会按默认值创建，例如，如果只用 <em>“ create database 数据库名称 ”</em>  创建数据库时，DBMS会按照默认的 “逻辑名称” ”文件组“ ”初始大小“ ”自动增长“ 和 “路径” 等属性创建数据库。</p>
<h3 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h3><p>        创建一个名为“SM”的数据库，初始大小为10MB，最大为50MB，数据库自动增长，增长方式按10%；日志文件初始大小为2MB，最大大小不受限制，按1MB增长。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> database SM</span><br><span class="line"><span class="keyword">ON</span></span><br><span class="line">(</span><br><span class="line">name<span class="operator">=</span>SM_Data,</span><br><span class="line">filename<span class="operator">=</span><span class="string">&#x27;D:\SM.mdf&#x27;</span>,</span><br><span class="line">size<span class="operator">=</span><span class="number">10</span>,</span><br><span class="line">maxsize<span class="operator">=</span><span class="number">50</span>,</span><br><span class="line">filegrowth<span class="operator">=</span><span class="number">10</span><span class="operator">%</span></span><br><span class="line">)</span><br><span class="line">LOG <span class="keyword">ON</span></span><br><span class="line">(</span><br><span class="line">name<span class="operator">=</span>SM_Log,</span><br><span class="line">filename<span class="operator">=</span><span class="string">&#x27;D:\SM.ldf&#x27;</span>,</span><br><span class="line">size<span class="operator">=</span><span class="number">2</span>,</span><br><span class="line">maxsize<span class="operator">=</span>unlimited,</span><br><span class="line">filegrowth<span class="operator">=</span><span class="number">1</span>MB</span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<h2 id="2-在数据库中创建表"><a href="#2-在数据库中创建表" class="headerlink" title="2.在数据库中创建表"></a>2.在数据库中创建表</h2><h3 id="创建数据表"><a href="#创建数据表" class="headerlink" title="创建数据表"></a>创建数据表</h3><p><strong>sql语句如下</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名</span><br><span class="line">(</span><br><span class="line">    列名 数据类型和字段长度,</span><br><span class="line">    ......</span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<p><strong>常用数据类型及长度范围：</strong> </p>
<p>: <em><strong>char:</strong></em> 定长的非Unicode字符，char(n)</p>
<p>: <em><strong>nchar：</strong></em> 定长的Unicode字符，nchar(n)</p>
<p>: <em><strong>varchar:</strong></em> 非定长的非Unicode字符，varchar(n)</p>
<p>: <em><strong>nvarchar:</strong></em> 非定长的Unicode字符，nvarchar(n)</p>
<p>: <em><strong>numeric：</strong></em> 精确数值型，numeric(精确长度，小数位)</p>
<p>: <em><strong>decimal：</strong></em> 精确数值型，decimal(精确长度，小数位)</p>
<h3 id="定义数据表的约束"><a href="#定义数据表的约束" class="headerlink" title="定义数据表的约束"></a>定义数据表的约束</h3><p>约束是自动强制数据完整性的方式，约束定义了列中允许的取值。</p>
<p>基本语法格式为:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">列名 数据类型 约束名 约束类型</span><br></pre></td></tr></table></figure>

<p><strong>约束名：</strong> 约束不指定名称时，系统会给定一个名称。</p>
<p><strong>约束类型：</strong> 在定义完整性约束是必须指定完整性约束的类型，以下介绍五种完整性类型的完整性约束。</p>
<h4 id="（1）NULL-x2F-NOT-NULL-约束"><a href="#（1）NULL-x2F-NOT-NULL-约束" class="headerlink" title="（1）NULL &#x2F; NOT NULL 约束"></a>（1）NULL &#x2F; NOT NULL 约束</h4><p>当某一字段的值一定要输入值才有意义的时候，则可设置为NOT NULL。当字段允许出现空值时，可设置为 NULL。其语法如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">constraint</span> <span class="operator">&lt;</span>约束名<span class="operator">&gt;</span> [<span class="keyword">NULL</span> <span class="operator">|</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>]</span><br></pre></td></tr></table></figure>

<p><strong>例如</strong></p>
<p>建立一个S表，对SNo字段进行 NOT NULL 约束</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> S</span><br><span class="line">(</span><br><span class="line">    SNo <span class="type">varchar</span>(<span class="number">6</span>) <span class="keyword">constraint</span> S_CONS <span class="keyword">NOT</span> <span class="keyword">NULL</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<h4 id="（2）唯一约束（UNIQUE约束）"><a href="#（2）唯一约束（UNIQUE约束）" class="headerlink" title="（2）唯一约束（UNIQUE约束）"></a>（2）唯一约束（UNIQUE约束）</h4><p>唯一约束用于指明基本表在某一列或多个列的组合上的取值必须唯一。唯一键允许为空，但为保证其唯一性，最多只可以出现一个NULL值。其语法如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">constraint</span> <span class="operator">&lt;</span>约束名<span class="operator">&gt;</span> <span class="keyword">unique</span></span><br></pre></td></tr></table></figure>

<p>在建立唯一约束时，需考虑以下几个因素：</p>
<ul>
<li><p>使用唯一约束的字段允许为NULL值</p>
</li>
<li><p>一个表可以有多个唯一约束</p>
</li>
<li><p>可以把唯一约束定义在多个字段上</p>
</li>
</ul>
<p><strong>例如</strong></p>
<p>建立一个S表，定义SN为唯一键</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> S</span><br><span class="line">(</span><br><span class="line">   SN <span class="type">char</span>(<span class="number">8</span>) <span class="keyword">constraint</span> S_UNIQ <span class="keyword">unique</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<h4 id="（3）主键约束（PRIMARY-KEY-约束）"><a href="#（3）主键约束（PRIMARY-KEY-约束）" class="headerlink" title="（3）主键约束（PRIMARY KEY 约束）"></a>（3）主键约束（PRIMARY KEY 约束）</h4><p>主键约束用于定义基本表的主键，起唯一标识作用，其值不能为NULL，也不能重复，以此来保证实体的完整性。其语法如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">constraint</span> <span class="operator">&lt;</span>约束名<span class="operator">&gt;</span> <span class="keyword">primary</span> key</span><br></pre></td></tr></table></figure>

<p>在建立主键约束时，需考虑以下几个因素：</p>
<ul>
<li><p>一个表只能定义一个主键约束</p>
</li>
<li><p>使用主键约束的字段不允许出现NULL值</p>
</li>
<li><p>不能对同一个字段既定义唯一约束又定义主键约束</p>
</li>
</ul>
<p><strong>例如</strong></p>
<p>建立一个S表，定义SNo为S的主键</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> S</span><br><span class="line">(</span><br><span class="line">    SNo <span class="type">char</span>(<span class="number">8</span>) <span class="keyword">constraint</span> S_Prim <span class="keyword">primary</span> key</span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<h4 id="（4）外键约束（FOREIGN-KEY-约束）"><a href="#（4）外键约束（FOREIGN-KEY-约束）" class="headerlink" title="（4）外键约束（FOREIGN KEY 约束）"></a>（4）外键约束（FOREIGN KEY 约束）</h4><p>外键约束指定某一列或几列作为外部键。包含外部键的表称为从表，包含外部键所引用的主键或唯一键的表称为主表。其语法如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">constraint</span> <span class="operator">&lt;</span>约束名<span class="operator">&gt;</span> <span class="keyword">foreign</span> key <span class="keyword">references</span> <span class="operator">&lt;</span>主表名(列名)<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>例如</strong></p>
<p>建立一个SC表，定义SNo为SC的外部键</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> SC</span><br><span class="line">(</span><br><span class="line">    SNo <span class="type">char</span>(<span class="number">8</span>) <span class="keyword">constraint</span> S_Fore <span class="keyword">foreign</span> key <span class="keyword">references</span> S(SNo)</span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<h4 id="（5）CHECK-约束"><a href="#（5）CHECK-约束" class="headerlink" title="（5）CHECK 约束"></a>（5）CHECK 约束</h4><p>check约束用来检查字段值所允许的范围。其语法如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">constraint</span> <span class="operator">&lt;</span>约束名<span class="operator">&gt;</span> <span class="keyword">check</span> <span class="operator">&lt;</span>条件<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure>

<p>在建立CHECK约束时，需考虑以下几个因素：</p>
<ul>
<li><p>一个表中可以定义多个CHECK约束</p>
</li>
<li><p>每个字段只能定义一个CHECK约束</p>
</li>
</ul>
<p><strong>例如</strong></p>
<p>建立一个S表，定义Score的取值范围为0~100之间，Sex取值为男或女</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> S</span><br><span class="line">(</span><br><span class="line">    Score <span class="type">numeric</span>(<span class="number">4.1</span>) <span class="keyword">constraint</span> Score_SHK <span class="keyword">check</span>(Score <span class="operator">&gt;=</span> <span class="number">0</span> <span class="keyword">and</span> Score <span class="operator">&lt;=</span> <span class="number">100</span>),</span><br><span class="line">    Sex <span class="type">char</span>(<span class="number">2</span>) <span class="keyword">constraint</span> Sex_SHK <span class="keyword">check</span>((Sex<span class="operator">=</span><span class="string">&#x27;男&#x27;</span>) <span class="keyword">or</span> (Sex<span class="operator">=</span><span class="string">&#x27;女&#x27;</span>))</span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<h2 id="3-对数据表的修改"><a href="#3-对数据表的修改" class="headerlink" title="3.对数据表的修改"></a>3.对数据表的修改</h2><h3 id="用SQL命令修改数据表"><a href="#用SQL命令修改数据表" class="headerlink" title="用SQL命令修改数据表"></a>用SQL命令修改数据表</h3><p>SQL 使用 <em><strong>ALTER TABLE</strong></em>  命令来完成这一功能，有一下三种修改方式</p>
<h4 id="（1）ADD-方式"><a href="#（1）ADD-方式" class="headerlink" title="（1）ADD 方式"></a>（1）ADD 方式</h4><p>ADD方式用于增加新列和完整性约束，其语法格式为：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">add</span> <span class="operator">&lt;</span>列定义<span class="operator">&gt;</span> <span class="operator">|</span> <span class="operator">&lt;</span>完整性约束定义<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>例如</strong></p>
<p>在S表中增加 email 列，且要求输入的 email 必须包括”@”</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> S <span class="keyword">add</span> email <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">constraint</span> S_Chk <span class="keyword">check</span>(email <span class="keyword">like</span> <span class="string">&#x27;%@%&#x27;</span>)</span><br></pre></td></tr></table></figure>

<h4 id="（2）ALTER-方式"><a href="#（2）ALTER-方式" class="headerlink" title="（2）ALTER 方式"></a>（2）ALTER 方式</h4><p>ALTER 方式用于修改某些列，其语法格式为</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">alter</span> <span class="keyword">column</span> <span class="operator">&lt;</span>列名<span class="operator">&gt;</span> <span class="operator">&lt;</span>数据列名<span class="operator">&gt;</span> [<span class="keyword">null</span> <span class="operator">|</span><span class="keyword">not</span> <span class="keyword">null</span>]</span><br></pre></td></tr></table></figure>

<p><strong>注意：</strong></p>
<ul>
<li><p>不能改变列名</p>
</li>
<li><p>不能将含有空值的列的定义修改为 NOT NULL 约束</p>
</li>
<li><p>若列中已有数据，则不能减少该列的宽度，也不能改变其数据类型</p>
</li>
<li><p>只能修改 null &#x2F; not null 约束，其他类型的约束在修改之前必须先将约束删除，然后再重新添加修改过的约束定义</p>
</li>
</ul>
<p><strong>例如</strong></p>
<p>把 S 表的 SN 列加宽到12个字符并不允许空值</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> S <span class="keyword">alter</span> <span class="keyword">column</span> SN <span class="type">char</span>(<span class="number">12</span>) <span class="keyword">not</span> <span class="keyword">null</span></span><br></pre></td></tr></table></figure>

<h4 id="（3）DROP方式"><a href="#（3）DROP方式" class="headerlink" title="（3）DROP方式"></a>（3）DROP方式</h4><p>DROP方式只用于删除完整性约束定义或删除表，其语法格式为：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">drop</span> <span class="keyword">constraint</span> <span class="operator">&lt;</span>约束名<span class="operator">&gt;</span>    <span class="operator">/</span><span class="operator">/</span>删除约束</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span>    <span class="operator">/</span><span class="operator">/</span>删除表</span><br></pre></td></tr></table></figure>

<p><strong>例如</strong></p>
<p>删除S表中的主键</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> S <span class="keyword">drop</span> <span class="keyword">constraint</span> S_Prim</span><br></pre></td></tr></table></figure>

<h2 id="4-对表的简单查询"><a href="#4-对表的简单查询" class="headerlink" title="4.对表的简单查询"></a>4.对表的简单查询</h2><h3 id="SQL命令对表进行查询"><a href="#SQL命令对表进行查询" class="headerlink" title="SQL命令对表进行查询"></a>SQL命令对表进行查询</h3><h4 id="（1）-无条件查询"><a href="#（1）-无条件查询" class="headerlink" title="（1） 无条件查询"></a>（1） 无条件查询</h4><p>无条件查询指只包含 <em><strong>SELECT…FROM</strong></em> 的查询，这种查询最简单，例如：</p>
<p>在S表中查询所有学生的学号SNo，姓名SN</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> SNo , SN <span class="keyword">from</span> S</span><br></pre></td></tr></table></figure>

<h4 id="（2）条件查询"><a href="#（2）条件查询" class="headerlink" title="（2）条件查询"></a>（2）条件查询</h4><p>当在表中查询满足某些条件的行时，则需要使用 <em><strong>WHERE</strong></em> 子句指定查询条件。<em><strong>WHERE</strong></em> 一般由以下三部分组成：</p>
<ul>
<li><p>列名</p>
</li>
<li><p>比较运算符</p>
</li>
<li><p>列名、常数</p>
</li>
</ul>
<p><strong>常用比较运算符如下</strong></p>
<table>
<thead>
<tr>
<th align="center">运算符</th>
<th align="center">含义</th>
</tr>
</thead>
<tbody><tr>
<td align="center">&#x3D; 、&gt; 、&lt; 、&gt;&#x3D; 、&lt;&#x3D; 、!&#x3D; 、&lt;&gt;</td>
<td align="center">比较大小</td>
</tr>
<tr>
<td align="center">AND 、OR 、NOT</td>
<td align="center">多重条件</td>
</tr>
<tr>
<td align="center">IN</td>
<td align="center">确定集合</td>
</tr>
<tr>
<td align="center">BETWEEN AND</td>
<td align="center">确定范围</td>
</tr>
<tr>
<td align="center">LIKE</td>
<td align="center">字符匹配</td>
</tr>
<tr>
<td align="center">IS NULL</td>
<td align="center">空值</td>
</tr>
</tbody></table>
<ul>
<li><strong>比较大小</strong></li>
</ul>
<p><strong>例</strong>  查询分数不低于85分的学生的学号与姓名</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> SNo , SN <span class="keyword">from</span> S <span class="keyword">where</span> Score <span class="operator">&gt;=</span> <span class="number">85</span></span><br></pre></td></tr></table></figure>

<ul>
<li><strong>多重条件</strong></li>
</ul>
<p>当 where 子句需要指定一个以上的查询条件时，需要使用逻辑运算符 and 、or 、not 将其连接成复合的逻辑表达式。期<strong>优先级</strong> 由高到低为： <em><strong>not、and、or</strong></em>  ，用户可使用括号改变优先级。</p>
<p><strong>例</strong> 查询分数不低于85分的女学生的学号与姓名</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> SNo , SN <span class="keyword">from</span> S <span class="keyword">where</span> (Sex <span class="operator">=</span> <span class="string">&#x27;女&#x27;</span>) <span class="keyword">and</span> (Score <span class="operator">&gt;=</span> <span class="number">85</span>)</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>确定集合</strong></li>
</ul>
<p>利用 <strong>in</strong>  可以查询属性值属于指定集合的元组；利用 <strong>not in</strong> 可以查询指定集合外的元组</p>
<p><strong>例</strong> 查询选了选修课程号为 C1 或 C2的学生的学号与姓名</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> SNo , SN <span class="keyword">from</span> S <span class="keyword">where</span> CNo <span class="keyword">in</span> (<span class="string">&#x27;C1&#x27;</span> , <span class="string">&#x27;C2&#x27;</span>)</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>确定范围</strong></li>
</ul>
<p><strong>例</strong> 查询分数在60分~85分的学生的学号与姓名</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> SNo , SN <span class="keyword">from</span> S <span class="keyword">where</span> Score <span class="keyword">between</span> <span class="number">60</span> <span class="keyword">and</span> <span class="number">85</span></span><br></pre></td></tr></table></figure>

<ul>
<li><strong>字符匹配</strong></li>
</ul>
<p>利用 <strong>like</strong> 进行 <strong>模糊查询</strong> ，一般格式为：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">&lt;</span>属性名<span class="operator">&gt;</span> <span class="keyword">like</span> <span class="operator">&lt;</span>字符串常量<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure>

<p>属性名必须为字符型，字符串常量中的字符可以包含通配符，利用这些通配符，可以进行模糊查询，字符串中的通配符及功能如下表：</p>
<table>
<thead>
<tr>
<th align="center">通配符</th>
<th align="center">功能</th>
<th align="center">实例</th>
</tr>
</thead>
<tbody><tr>
<td align="center">%</td>
<td align="center">代表0个或多个字符</td>
<td align="center">‘ab%’，ab后可接任意字符串</td>
</tr>
<tr>
<td align="center">_</td>
<td align="center">代表一个字符</td>
<td align="center">‘a_b’，a与b之间有一个字符</td>
</tr>
<tr>
<td align="center">[]</td>
<td align="center">表示在某一范围的字符</td>
<td align="center">[0-9]，0~9之间的字符</td>
</tr>
<tr>
<td align="center">[^ ]</td>
<td align="center">表示不在某一范围的字符</td>
<td align="center">[^0-9]，不在0~9之间的字符</td>
</tr>
</tbody></table>
<p><strong>例</strong> 查询姓张的同学的学号与姓名</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> SNo , SN <span class="keyword">from</span> S <span class="keyword">where</span> SN <span class="keyword">like</span> <span class="string">&#x27;张%&#x27;</span></span><br></pre></td></tr></table></figure>

<ul>
<li><strong>空值查询</strong></li>
</ul>
<p>某个字段没有值称为具有空值（ NULL）。通常没有为一个列输入值时，该列的值就是空值，空值不同于0和空格，它不占任何储存空间。</p>
<p><strong>例</strong> 查询没有考试成绩的学生的学号与姓名</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> SNo , SN <span class="keyword">from</span> S <span class="keyword">where</span> Score <span class="keyword">is</span> <span class="keyword">null</span></span><br></pre></td></tr></table></figure>

<p><strong>注意空值条件为 ” is null “ 不能写为“ &#x3D; null “</strong> </p>
<h4 id="（3）统计汇总查询"><a href="#（3）统计汇总查询" class="headerlink" title="（3）统计汇总查询"></a>（3）统计汇总查询</h4><p>SQL提供了许多库函数，增强了基本检索能力。常用的库函数如下：</p>
<table>
<thead>
<tr>
<th align="center">函数名称</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">avg</td>
<td align="center">按列计算平均值</td>
</tr>
<tr>
<td align="center">sum</td>
<td align="center">按列计算值的总和</td>
</tr>
<tr>
<td align="center">max</td>
<td align="center">求一列的最大值</td>
</tr>
<tr>
<td align="center">min</td>
<td align="center">求一列的最小值</td>
</tr>
<tr>
<td align="center">count</td>
<td align="center">按列值统计个数</td>
</tr>
</tbody></table>
<ul>
<li><strong>例1</strong></li>
</ul>
<p>求选 C1 课程的学生考试成绩的总分，平均分，最高分，最低分</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">sum</span>(Score) <span class="keyword">as</span> TotalScore, <span class="built_in">avg</span>(Score) <span class="keyword">as</span> AvgScore, <span class="built_in">max</span>(Score) <span class="keyword">as</span> MaxScore, <span class="built_in">min</span>(Score) <span class="keyword">as</span> MinScore</span><br><span class="line">form SC</span><br><span class="line"><span class="keyword">where</span> (CNo <span class="operator">=</span> <span class="string">&#x27;C1&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p><strong>注意函数 sum 与 avg 只能对数值型字段进行计算</strong></p>
<ul>
<li><strong>例2</strong></li>
</ul>
<p>求计算机系学生的总数</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(SNo) <span class="keyword">from</span> S <span class="keyword">where</span> Dept<span class="operator">=</span> <span class="string">&#x27;计算机&#x27;</span></span><br><span class="line">或</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> S <span class="keyword">where</span> Dept<span class="operator">=</span> <span class="string">&#x27;计算机&#x27;</span></span><br></pre></td></tr></table></figure>

<p><strong>count(*)用来统计元组的个数，不消除重复行</strong></p>
<ul>
<li><strong>例3</strong></li>
</ul>
<p>求学校中共有多少个系</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="keyword">distinct</span> Dept) <span class="keyword">from</span> S</span><br></pre></td></tr></table></figure>

<p><strong>加入关键字</strong> <em><strong>distinct</strong></em> <strong>后表示消去重复行</strong></p>
<h4 id="（4）分组查询"><a href="#（4）分组查询" class="headerlink" title="（4）分组查询"></a>（4）分组查询</h4><p><strong>group by</strong> 子句可以将查询结果按属性列或属性列组合在行的方向上进行分组，每组在属性列或属性列组合上具有相同的值。若在分组后按照一定的条件进行筛选，则需要使用<strong>having</strong> 子句。</p>
<ul>
<li><strong>例</strong></li>
</ul>
<p>查询选修两门及以上的课程的学生的学号和选课门数</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> SNo，<span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> SC <span class="keyword">group</span> <span class="keyword">by</span> SNo <span class="keyword">having</span>(<span class="built_in">count</span>(<span class="operator">*</span>) <span class="operator">&gt;=</span><span class="number">2</span>)</span><br></pre></td></tr></table></figure>

<p><strong>注</strong>  当一个查询中同时使用 <strong>where</strong> 子句，<strong>group by</strong> 子句，<strong>having</strong> 子句时，其顺序是 <strong>where，group by，having 。</strong> </p>
<h4 id="（5）对查询结果排序"><a href="#（5）对查询结果排序" class="headerlink" title="（5）对查询结果排序"></a>（5）对查询结果排序</h4><p>当要对查询结果进行排序时，使用 <strong>order by</strong> 子句，<strong>order by</strong> 子句必须出现在其他子句之后。排序方式可以指定，<strong>desc</strong> 为降序，<strong>asc</strong> 为升序，缺省时为升序。</p>
<ul>
<li><strong>例</strong></li>
</ul>
<p>查询选修C1课程的学生的学号和成绩，并按成绩降序排列</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> SNo，Score <span class="keyword">from</span> SC <span class="keyword">where</span> (CNo <span class="operator">=</span> <span class="string">&#x27;C1&#x27;</span>) <span class="keyword">order</span> <span class="keyword">by</span> score <span class="keyword">desc</span></span><br></pre></td></tr></table></figure>

<h2 id="5-对表的复杂查询"><a href="#5-对表的复杂查询" class="headerlink" title="5.对表的复杂查询"></a>5.对表的复杂查询</h2><h3 id="（1）连接查询"><a href="#（1）连接查询" class="headerlink" title="（1）连接查询"></a>（1）连接查询</h3><p>数据库中的各个表中存放着不同的数据，用户往往需要用多个表中的数据来组合、提炼出所需要的信息。如果一个查询需要对多个表进行操作，就称为<strong>连接查询</strong> 。</p>
<p><strong>例</strong> </p>
<p>对student(sno,clno,sname,ssex,sage)，course(cno,cname)，sc(sno,cno,score)三张表进行操作</p>
<ul>
<li>查询体育课成绩不及格的男生名单</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> sname <span class="keyword">from</span> sc,student ,course <span class="keyword">where</span> sc.cno<span class="operator">=</span>course.cno <span class="keyword">and</span> student.sno<span class="operator">=</span>sc.sno <span class="keyword">and</span> ssex<span class="operator">=</span><span class="string">&#x27;男&#x27;</span><span class="keyword">and</span> score<span class="operator">&lt;</span><span class="number">60</span> <span class="keyword">and</span> cname<span class="operator">=</span><span class="string">&#x27;体育&#x27;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>查询有多少名学生的物理课成绩不及格</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(sno) <span class="keyword">from</span> sc,course  <span class="keyword">where</span> sc.cno<span class="operator">=</span>course.cno <span class="keyword">and</span> cname<span class="operator">=</span><span class="string">&#x27;物理&#x27;</span> <span class="keyword">and</span> score<span class="operator">&lt;</span><span class="number">60</span></span><br></pre></td></tr></table></figure>

<p><strong>当两个表中的列名相同时，引用列名要加上表名前缀，说明所指列属于哪个表，避免二义性。如果列名唯一则不需要加前缀。</strong></p>
<h3 id="（2）子查询"><a href="#（2）子查询" class="headerlink" title="（2）子查询"></a>（2）子查询</h3><p>在 where 子句中包含另一个查询块，该查询块称为 <strong>子查询</strong> 或 <strong>嵌套查询</strong> ，包含子查询的语句称为父查询或外部查询。</p>
<ul>
<li><p>当子查询的返回值只有一个时，可以使用比较运算符( &#x3D;、&gt;、&lt;、&gt;&#x3D;、&lt;&#x3D;、!&#x3D;)将父查询和子查询连接起来。</p>
</li>
<li><p>如果子查询的返回值不止一个，而是一个集合时，则不能直接使用比较运算符，可以在比较运算符和子查询之间插入 <strong>ANY</strong> 或 <strong>ALL</strong> 。</p>
</li>
</ul>
<p>: ANY 含义为任何一个</p>
<p>: IN 可以代替 “&#x3D;ANY”</p>
<p>: ALL 的含义是全部</p>
<p>: &lt;&gt;ALL 的含义为不等于子查询结果中的任何一个值</p>
<p>: NOT IN 可以替代“ &lt;&gt;ALL ”</p>
<p>: EXISTS 的含义是存在的量词，其子查询不返回任何实际数据，它只返回逻辑值“真”或“假”</p>
<p><strong>例</strong></p>
<ol>
<li>将 A 班全体学生的成绩置 0</li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">update</span> sc <span class="keyword">set</span> score<span class="operator">=</span><span class="number">0</span> <span class="keyword">where</span> sno <span class="keyword">in</span>(<span class="keyword">select</span> sno <span class="keyword">from</span> student <span class="keyword">where</span> clno<span class="operator">=</span><span class="string">&#x27;A&#x27;</span>)</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>删除 B 班全体学生的选课记录</li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> sc <span class="keyword">where</span> sno <span class="keyword">in</span>(<span class="keyword">select</span> sno <span class="keyword">from</span> student <span class="keyword">where</span> clno<span class="operator">=</span><span class="string">&#x27;B&#x27;</span>)</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>使用 exists关键字查询所有选修了 C1 号课程的学生的姓名</li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">selec sname <span class="keyword">from</span> student <span class="keyword">where</span> <span class="keyword">exists</span> (<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> sc <span class="keyword">where</span> cno<span class="operator">=</span><span class="string">&#x27;C1&#x27;</span><span class="keyword">and</span> sc.sno<span class="operator">=</span>student.sno)</span><br></pre></td></tr></table></figure>

<ol start="4">
<li> 查询其他班中比A班所有学生年龄都小的学生，并按年龄的降序输出</li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> student <span class="keyword">where</span> sage <span class="operator">&lt;</span> <span class="keyword">all</span>(<span class="keyword">select</span> sage <span class="keyword">from</span> student <span class="keyword">where</span> clno<span class="operator">=</span><span class="string">&#x27;04001&#x27;</span>)</span><br><span class="line"><span class="keyword">and</span> clno<span class="operator">&lt;&gt;</span><span class="string">&#x27;04001&#x27;</span> </span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> sage <span class="keyword">desc</span></span><br></pre></td></tr></table></figure>

<h2 id="6-数据表中数据的操纵"><a href="#6-数据表中数据的操纵" class="headerlink" title="6.数据表中数据的操纵"></a>6.数据表中数据的操纵</h2>]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>sql</tag>
      </tags>
  </entry>
</search>
