<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/xuanyao/4a17b156.html</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
      <categories>
        <category>测试</category>
      </categories>
      <tags>
        <tag>测试</tag>
        <tag>你好世界</tag>
      </tags>
  </entry>
  <entry>
    <title>sql语句对数据库的一写操作</title>
    <url>/xuanyao/e0cd2bf7.html</url>
    <content><![CDATA[<h1 id="SQL语句复习"><a href="#SQL语句复习" class="headerlink" title="SQL语句复习"></a>SQL语句复习</h1><h2 id="1-创建数据库"><a href="#1-创建数据库" class="headerlink" title="1.创建数据库"></a>1.创建数据库</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> database 数据库名称</span><br><span class="line"><span class="keyword">on</span></span><br><span class="line">(</span><br><span class="line">    name<span class="operator">=</span>数据文件逻辑名称,</span><br><span class="line">    filename<span class="operator">=</span><span class="string">&#x27;路径+数据文件名&#x27;</span>,</span><br><span class="line">    size<span class="operator">=</span>数据文件初始大小,</span><br><span class="line">    maxsize<span class="operator">=</span>数据文件最大容量,</span><br><span class="line">    filegrowth<span class="operator">=</span>数据文件自动增长容量</span><br><span class="line">)</span><br><span class="line">log <span class="keyword">on</span></span><br><span class="line">(</span><br><span class="line">    name<span class="operator">=</span>日志文件逻辑名称,</span><br><span class="line">    filename<span class="operator">=</span><span class="string">&#x27;路径+日志文件名&#x27;</span>,</span><br><span class="line">    size<span class="operator">=</span>日志文件初始大小,</span><br><span class="line">    maxsize<span class="operator">=</span> 日志文件最大容量,</span><br><span class="line">    filegrowth<span class="operator">=</span>日志文件自动增长容量</span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<p><strong>（1）</strong> <em><strong>name:</strong></em>  数据文件名称一般为  (<em>name</em>)  _Data ，日志文件名称一般为（<em>name</em>）_Log 。</p>
<p><strong>（2）</strong>  <em><strong>filename：</strong></em> 数据文件名后缀为 .mdf ，日志文件名后缀为 .ldf 。</p>
<p><strong>（3）</strong> <em><strong>maxsize:</strong></em>  设置为 unlimited 时，表示文件最大大小无限制。</p>
<p><strong>（4）</strong> <em><strong>filegrowth:</strong></em>  可以设置为具体值（—M）或者百分比（—%），设置为 unlimited 时，表示文件无限制增长。</p>
<p><strong>（5）</strong>  某些属性不设置时，创建数据库时会按默认值创建，例如，如果只用 <em>“ create database 数据库名称 ”</em>  创建数据库时，DBMS会按照默认的 “逻辑名称” ”文件组“ ”初始大小“ ”自动增长“ 和 “路径” 等属性创建数据库。</p>
<h3 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h3><p>        创建一个名为“SM”的数据库，初始大小为10MB，最大为50MB，数据库自动增长，增长方式按10%；日志文件初始大小为2MB，最大大小不受限制，按1MB增长。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> database SM</span><br><span class="line"><span class="keyword">ON</span></span><br><span class="line">(</span><br><span class="line">name<span class="operator">=</span>SM_Data,</span><br><span class="line">filename<span class="operator">=</span><span class="string">&#x27;D:\SM.mdf&#x27;</span>,</span><br><span class="line">size<span class="operator">=</span><span class="number">10</span>,</span><br><span class="line">maxsize<span class="operator">=</span><span class="number">50</span>,</span><br><span class="line">filegrowth<span class="operator">=</span><span class="number">10</span><span class="operator">%</span></span><br><span class="line">)</span><br><span class="line">LOG <span class="keyword">ON</span></span><br><span class="line">(</span><br><span class="line">name<span class="operator">=</span>SM_Log,</span><br><span class="line">filename<span class="operator">=</span><span class="string">&#x27;D:\SM.ldf&#x27;</span>,</span><br><span class="line">size<span class="operator">=</span><span class="number">2</span>,</span><br><span class="line">maxsize<span class="operator">=</span>unlimited,</span><br><span class="line">filegrowth<span class="operator">=</span><span class="number">1</span>MB</span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<h2 id="2-在数据库中创建表"><a href="#2-在数据库中创建表" class="headerlink" title="2.在数据库中创建表"></a>2.在数据库中创建表</h2><h3 id="创建数据表"><a href="#创建数据表" class="headerlink" title="创建数据表"></a>创建数据表</h3><p><strong>sql语句如下</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名</span><br><span class="line">(</span><br><span class="line">    列名 数据类型和字段长度,</span><br><span class="line">    ......</span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<p><strong>常用数据类型及长度范围：</strong> </p>
<p>: <em><strong>char:</strong></em> 定长的非Unicode字符，char(n)</p>
<p>: <em><strong>nchar：</strong></em> 定长的Unicode字符，nchar(n)</p>
<p>: <em><strong>varchar:</strong></em> 非定长的非Unicode字符，varchar(n)</p>
<p>: <em><strong>nvarchar:</strong></em> 非定长的Unicode字符，nvarchar(n)</p>
<p>: <em><strong>numeric：</strong></em> 精确数值型，numeric(精确长度，小数位)</p>
<p>: <em><strong>decimal：</strong></em> 精确数值型，decimal(精确长度，小数位)</p>
<h3 id="定义数据表的约束"><a href="#定义数据表的约束" class="headerlink" title="定义数据表的约束"></a>定义数据表的约束</h3><p>约束是自动强制数据完整性的方式，约束定义了列中允许的取值。</p>
<p>基本语法格式为:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">列名 数据类型 约束名 约束类型</span><br></pre></td></tr></table></figure>

<p><strong>约束名：</strong> 约束不指定名称时，系统会给定一个名称。</p>
<p><strong>约束类型：</strong> 在定义完整性约束是必须指定完整性约束的类型，以下介绍五种完整性类型的完整性约束。</p>
<h4 id="（1）NULL-x2F-NOT-NULL-约束"><a href="#（1）NULL-x2F-NOT-NULL-约束" class="headerlink" title="（1）NULL &#x2F; NOT NULL 约束"></a>（1）NULL &#x2F; NOT NULL 约束</h4><p>当某一字段的值一定要输入值才有意义的时候，则可设置为NOT NULL。当字段允许出现空值时，可设置为 NULL。其语法如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">constraint</span> <span class="operator">&lt;</span>约束名<span class="operator">&gt;</span> [<span class="keyword">NULL</span> <span class="operator">|</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>]</span><br></pre></td></tr></table></figure>

<p><strong>例如</strong></p>
<p>建立一个S表，对SNo字段进行 NOT NULL 约束</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> S</span><br><span class="line">(</span><br><span class="line">    SNo <span class="type">varchar</span>(<span class="number">6</span>) <span class="keyword">constraint</span> S_CONS <span class="keyword">NOT</span> <span class="keyword">NULL</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<h4 id="（2）唯一约束（UNIQUE约束）"><a href="#（2）唯一约束（UNIQUE约束）" class="headerlink" title="（2）唯一约束（UNIQUE约束）"></a>（2）唯一约束（UNIQUE约束）</h4><p>唯一约束用于指明基本表在某一列或多个列的组合上的取值必须唯一。唯一键允许为空，但为保证其唯一性，最多只可以出现一个NULL值。其语法如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">constraint</span> <span class="operator">&lt;</span>约束名<span class="operator">&gt;</span> <span class="keyword">unique</span></span><br></pre></td></tr></table></figure>

<p>在建立唯一约束时，需考虑以下几个因素：</p>
<ul>
<li><p>使用唯一约束的字段允许为NULL值</p>
</li>
<li><p>一个表可以有多个唯一约束</p>
</li>
<li><p>可以把唯一约束定义在多个字段上</p>
</li>
</ul>
<p><strong>例如</strong></p>
<p>建立一个S表，定义SN为唯一键</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> S</span><br><span class="line">(</span><br><span class="line">   SN <span class="type">char</span>(<span class="number">8</span>) <span class="keyword">constraint</span> S_UNIQ <span class="keyword">unique</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<h4 id="（3）主键约束（PRIMARY-KEY-约束）"><a href="#（3）主键约束（PRIMARY-KEY-约束）" class="headerlink" title="（3）主键约束（PRIMARY KEY 约束）"></a>（3）主键约束（PRIMARY KEY 约束）</h4><p>主键约束用于定义基本表的主键，起唯一标识作用，其值不能为NULL，也不能重复，以此来保证实体的完整性。其语法如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">constraint</span> <span class="operator">&lt;</span>约束名<span class="operator">&gt;</span> <span class="keyword">primary</span> key</span><br></pre></td></tr></table></figure>

<p>在建立主键约束时，需考虑以下几个因素：</p>
<ul>
<li><p>一个表只能定义一个主键约束</p>
</li>
<li><p>使用主键约束的字段不允许出现NULL值</p>
</li>
<li><p>不能对同一个字段既定义唯一约束又定义主键约束</p>
</li>
</ul>
<p><strong>例如</strong></p>
<p>建立一个S表，定义SNo为S的主键</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> S</span><br><span class="line">(</span><br><span class="line">    SNo <span class="type">char</span>(<span class="number">8</span>) <span class="keyword">constraint</span> S_Prim <span class="keyword">primary</span> key</span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<h4 id="（4）外键约束（FOREIGN-KEY-约束）"><a href="#（4）外键约束（FOREIGN-KEY-约束）" class="headerlink" title="（4）外键约束（FOREIGN KEY 约束）"></a>（4）外键约束（FOREIGN KEY 约束）</h4><p>外键约束指定某一列或几列作为外部键。包含外部键的表称为从表，包含外部键所引用的主键或唯一键的表称为主表。其语法如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">constraint</span> <span class="operator">&lt;</span>约束名<span class="operator">&gt;</span> <span class="keyword">foreign</span> key <span class="keyword">references</span> <span class="operator">&lt;</span>主表名(列名)<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>例如</strong></p>
<p>建立一个SC表，定义SNo为SC的外部键</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> SC</span><br><span class="line">(</span><br><span class="line">    SNo <span class="type">char</span>(<span class="number">8</span>) <span class="keyword">constraint</span> S_Fore <span class="keyword">foreign</span> key <span class="keyword">references</span> S(SNo)</span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<h4 id="（5）CHECK-约束"><a href="#（5）CHECK-约束" class="headerlink" title="（5）CHECK 约束"></a>（5）CHECK 约束</h4><p>check约束用来检查字段值所允许的范围。其语法如下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">constraint</span> <span class="operator">&lt;</span>约束名<span class="operator">&gt;</span> <span class="keyword">check</span> <span class="operator">&lt;</span>条件<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure>

<p>在建立CHECK约束时，需考虑以下几个因素：</p>
<ul>
<li><p>一个表中可以定义多个CHECK约束</p>
</li>
<li><p>每个字段只能定义一个CHECK约束</p>
</li>
</ul>
<p><strong>例如</strong></p>
<p>建立一个S表，定义Score的取值范围为0~100之间，Sex取值为男或女</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> S</span><br><span class="line">(</span><br><span class="line">    Score <span class="type">numeric</span>(<span class="number">4.1</span>) <span class="keyword">constraint</span> Score_SHK <span class="keyword">check</span>(Score <span class="operator">&gt;=</span> <span class="number">0</span> <span class="keyword">and</span> Score <span class="operator">&lt;=</span> <span class="number">100</span>),</span><br><span class="line">    Sex <span class="type">char</span>(<span class="number">2</span>) <span class="keyword">constraint</span> Sex_SHK <span class="keyword">check</span>((Sex<span class="operator">=</span><span class="string">&#x27;男&#x27;</span>) <span class="keyword">or</span> (Sex<span class="operator">=</span><span class="string">&#x27;女&#x27;</span>))</span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<h2 id="3-对数据表的修改"><a href="#3-对数据表的修改" class="headerlink" title="3.对数据表的修改"></a>3.对数据表的修改</h2><h3 id="用SQL命令修改数据表"><a href="#用SQL命令修改数据表" class="headerlink" title="用SQL命令修改数据表"></a>用SQL命令修改数据表</h3><p>SQL 使用 <em><strong>ALTER TABLE</strong></em>  命令来完成这一功能，有一下三种修改方式</p>
<h4 id="（1）ADD-方式"><a href="#（1）ADD-方式" class="headerlink" title="（1）ADD 方式"></a>（1）ADD 方式</h4><p>ADD方式用于增加新列和完整性约束，其语法格式为：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">add</span> <span class="operator">&lt;</span>列定义<span class="operator">&gt;</span> <span class="operator">|</span> <span class="operator">&lt;</span>完整性约束定义<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>例如</strong></p>
<p>在S表中增加 email 列，且要求输入的 email 必须包括”@”</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> S <span class="keyword">add</span> email <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">constraint</span> S_Chk <span class="keyword">check</span>(email <span class="keyword">like</span> <span class="string">&#x27;%@%&#x27;</span>)</span><br></pre></td></tr></table></figure>

<h4 id="（2）ALTER-方式"><a href="#（2）ALTER-方式" class="headerlink" title="（2）ALTER 方式"></a>（2）ALTER 方式</h4><p>ALTER 方式用于修改某些列，其语法格式为</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">alter</span> <span class="keyword">column</span> <span class="operator">&lt;</span>列名<span class="operator">&gt;</span> <span class="operator">&lt;</span>数据列名<span class="operator">&gt;</span> [<span class="keyword">null</span> <span class="operator">|</span><span class="keyword">not</span> <span class="keyword">null</span>]</span><br></pre></td></tr></table></figure>

<p><strong>注意：</strong></p>
<ul>
<li><p>不能改变列名</p>
</li>
<li><p>不能将含有空值的列的定义修改为 NOT NULL 约束</p>
</li>
<li><p>若列中已有数据，则不能减少该列的宽度，也不能改变其数据类型</p>
</li>
<li><p>只能修改 null &#x2F; not null 约束，其他类型的约束在修改之前必须先将约束删除，然后再重新添加修改过的约束定义</p>
</li>
</ul>
<p><strong>例如</strong></p>
<p>把 S 表的 SN 列加宽到12个字符并不允许空值</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> S <span class="keyword">alter</span> <span class="keyword">column</span> SN <span class="type">char</span>(<span class="number">12</span>) <span class="keyword">not</span> <span class="keyword">null</span></span><br></pre></td></tr></table></figure>

<h4 id="（3）DROP方式"><a href="#（3）DROP方式" class="headerlink" title="（3）DROP方式"></a>（3）DROP方式</h4><p>DROP方式只用于删除完整性约束定义或删除表，其语法格式为：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span> <span class="keyword">drop</span> <span class="keyword">constraint</span> <span class="operator">&lt;</span>约束名<span class="operator">&gt;</span>    <span class="operator">/</span><span class="operator">/</span>删除约束</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span>    <span class="operator">/</span><span class="operator">/</span>删除表</span><br></pre></td></tr></table></figure>

<p><strong>例如</strong></p>
<p>删除S表中的主键</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> S <span class="keyword">drop</span> <span class="keyword">constraint</span> S_Prim</span><br></pre></td></tr></table></figure>

<h2 id="4-对表的简单查询"><a href="#4-对表的简单查询" class="headerlink" title="4.对表的简单查询"></a>4.对表的简单查询</h2><h3 id="SQL命令对表进行查询"><a href="#SQL命令对表进行查询" class="headerlink" title="SQL命令对表进行查询"></a>SQL命令对表进行查询</h3><h4 id="（1）-无条件查询"><a href="#（1）-无条件查询" class="headerlink" title="（1） 无条件查询"></a>（1） 无条件查询</h4><p>无条件查询指只包含 <em><strong>SELECT…FROM</strong></em> 的查询，这种查询最简单，例如：</p>
<p>在S表中查询所有学生的学号SNo，姓名SN</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> SNo , SN <span class="keyword">from</span> S</span><br></pre></td></tr></table></figure>

<h4 id="（2）条件查询"><a href="#（2）条件查询" class="headerlink" title="（2）条件查询"></a>（2）条件查询</h4><p>当在表中查询满足某些条件的行时，则需要使用 <em><strong>WHERE</strong></em> 子句指定查询条件。<em><strong>WHERE</strong></em> 一般由以下三部分组成：</p>
<ul>
<li><p>列名</p>
</li>
<li><p>比较运算符</p>
</li>
<li><p>列名、常数</p>
</li>
</ul>
<p><strong>常用比较运算符如下</strong></p>
<table>
<thead>
<tr>
<th align="center">运算符</th>
<th align="center">含义</th>
</tr>
</thead>
<tbody><tr>
<td align="center">&#x3D; 、&gt; 、&lt; 、&gt;&#x3D; 、&lt;&#x3D; 、!&#x3D; 、&lt;&gt;</td>
<td align="center">比较大小</td>
</tr>
<tr>
<td align="center">AND 、OR 、NOT</td>
<td align="center">多重条件</td>
</tr>
<tr>
<td align="center">IN</td>
<td align="center">确定集合</td>
</tr>
<tr>
<td align="center">BETWEEN AND</td>
<td align="center">确定范围</td>
</tr>
<tr>
<td align="center">LIKE</td>
<td align="center">字符匹配</td>
</tr>
<tr>
<td align="center">IS NULL</td>
<td align="center">空值</td>
</tr>
</tbody></table>
<ul>
<li><strong>比较大小</strong></li>
</ul>
<p><strong>例</strong>  查询分数不低于85分的学生的学号与姓名</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> SNo , SN <span class="keyword">from</span> S <span class="keyword">where</span> Score <span class="operator">&gt;=</span> <span class="number">85</span></span><br></pre></td></tr></table></figure>

<ul>
<li><strong>多重条件</strong></li>
</ul>
<p>当 where 子句需要指定一个以上的查询条件时，需要使用逻辑运算符 and 、or 、not 将其连接成复合的逻辑表达式。期<strong>优先级</strong> 由高到低为： <em><strong>not、and、or</strong></em>  ，用户可使用括号改变优先级。</p>
<p><strong>例</strong> 查询分数不低于85分的女学生的学号与姓名</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> SNo , SN <span class="keyword">from</span> S <span class="keyword">where</span> (Sex <span class="operator">=</span> <span class="string">&#x27;女&#x27;</span>) <span class="keyword">and</span> (Score <span class="operator">&gt;=</span> <span class="number">85</span>)</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>确定集合</strong></li>
</ul>
<p>利用 <strong>in</strong>  可以查询属性值属于指定集合的元组；利用 <strong>not in</strong> 可以查询指定集合外的元组</p>
<p><strong>例</strong> 查询选了选修课程号为 C1 或 C2的学生的学号与姓名</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> SNo , SN <span class="keyword">from</span> S <span class="keyword">where</span> CNo <span class="keyword">in</span> (<span class="string">&#x27;C1&#x27;</span> , <span class="string">&#x27;C2&#x27;</span>)</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>确定范围</strong></li>
</ul>
<p><strong>例</strong> 查询分数在60分~85分的学生的学号与姓名</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> SNo , SN <span class="keyword">from</span> S <span class="keyword">where</span> Score <span class="keyword">between</span> <span class="number">60</span> <span class="keyword">and</span> <span class="number">85</span></span><br></pre></td></tr></table></figure>

<ul>
<li><strong>字符匹配</strong></li>
</ul>
<p>利用 <strong>like</strong> 进行 <strong>模糊查询</strong> ，一般格式为：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">&lt;</span>属性名<span class="operator">&gt;</span> <span class="keyword">like</span> <span class="operator">&lt;</span>字符串常量<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure>

<p>属性名必须为字符型，字符串常量中的字符可以包含通配符，利用这些通配符，可以进行模糊查询，字符串中的通配符及功能如下表：</p>
<table>
<thead>
<tr>
<th align="center">通配符</th>
<th align="center">功能</th>
<th align="center">实例</th>
</tr>
</thead>
<tbody><tr>
<td align="center">%</td>
<td align="center">代表0个或多个字符</td>
<td align="center">‘ab%’，ab后可接任意字符串</td>
</tr>
<tr>
<td align="center">_</td>
<td align="center">代表一个字符</td>
<td align="center">‘a_b’，a与b之间有一个字符</td>
</tr>
<tr>
<td align="center">[]</td>
<td align="center">表示在某一范围的字符</td>
<td align="center">[0-9]，0~9之间的字符</td>
</tr>
<tr>
<td align="center">[^ ]</td>
<td align="center">表示不在某一范围的字符</td>
<td align="center">[^0-9]，不在0~9之间的字符</td>
</tr>
</tbody></table>
<p><strong>例</strong> 查询姓张的同学的学号与姓名</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> SNo , SN <span class="keyword">from</span> S <span class="keyword">where</span> SN <span class="keyword">like</span> <span class="string">&#x27;张%&#x27;</span></span><br></pre></td></tr></table></figure>

<ul>
<li><strong>空值查询</strong></li>
</ul>
<p>某个字段没有值称为具有空值（ NULL）。通常没有为一个列输入值时，该列的值就是空值，空值不同于0和空格，它不占任何储存空间。</p>
<p><strong>例</strong> 查询没有考试成绩的学生的学号与姓名</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> SNo , SN <span class="keyword">from</span> S <span class="keyword">where</span> Score <span class="keyword">is</span> <span class="keyword">null</span></span><br></pre></td></tr></table></figure>

<p><strong>注意空值条件为 ” is null “ 不能写为“ &#x3D; null “</strong> </p>
<h4 id="（3）统计汇总查询"><a href="#（3）统计汇总查询" class="headerlink" title="（3）统计汇总查询"></a>（3）统计汇总查询</h4><p>SQL提供了许多库函数，增强了基本检索能力。常用的库函数如下：</p>
<table>
<thead>
<tr>
<th align="center">函数名称</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">avg</td>
<td align="center">按列计算平均值</td>
</tr>
<tr>
<td align="center">sum</td>
<td align="center">按列计算值的总和</td>
</tr>
<tr>
<td align="center">max</td>
<td align="center">求一列的最大值</td>
</tr>
<tr>
<td align="center">min</td>
<td align="center">求一列的最小值</td>
</tr>
<tr>
<td align="center">count</td>
<td align="center">按列值统计个数</td>
</tr>
</tbody></table>
<ul>
<li><strong>例1</strong></li>
</ul>
<p>求选 C1 课程的学生考试成绩的总分，平均分，最高分，最低分</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">sum</span>(Score) <span class="keyword">as</span> TotalScore, <span class="built_in">avg</span>(Score) <span class="keyword">as</span> AvgScore, <span class="built_in">max</span>(Score) <span class="keyword">as</span> MaxScore, <span class="built_in">min</span>(Score) <span class="keyword">as</span> MinScore</span><br><span class="line">form SC</span><br><span class="line"><span class="keyword">where</span> (CNo <span class="operator">=</span> <span class="string">&#x27;C1&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p><strong>注意函数 sum 与 avg 只能对数值型字段进行计算</strong></p>
<ul>
<li><strong>例2</strong></li>
</ul>
<p>求计算机系学生的总数</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(SNo) <span class="keyword">from</span> S <span class="keyword">where</span> Dept<span class="operator">=</span> <span class="string">&#x27;计算机&#x27;</span></span><br><span class="line">或</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> S <span class="keyword">where</span> Dept<span class="operator">=</span> <span class="string">&#x27;计算机&#x27;</span></span><br></pre></td></tr></table></figure>

<p><strong>count(*)用来统计元组的个数，不消除重复行</strong></p>
<ul>
<li><strong>例3</strong></li>
</ul>
<p>求学校中共有多少个系</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="keyword">distinct</span> Dept) <span class="keyword">from</span> S</span><br></pre></td></tr></table></figure>

<p><strong>加入关键字</strong> <em><strong>distinct</strong></em> <strong>后表示消去重复行</strong></p>
<h4 id="（4）分组查询"><a href="#（4）分组查询" class="headerlink" title="（4）分组查询"></a>（4）分组查询</h4><p><strong>group by</strong> 子句可以将查询结果按属性列或属性列组合在行的方向上进行分组，每组在属性列或属性列组合上具有相同的值。若在分组后按照一定的条件进行筛选，则需要使用<strong>having</strong> 子句。</p>
<ul>
<li><strong>例</strong></li>
</ul>
<p>查询选修两门及以上的课程的学生的学号和选课门数</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> SNo，<span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> SC <span class="keyword">group</span> <span class="keyword">by</span> SNo <span class="keyword">having</span>(<span class="built_in">count</span>(<span class="operator">*</span>) <span class="operator">&gt;=</span><span class="number">2</span>)</span><br></pre></td></tr></table></figure>

<p><strong>注</strong>  当一个查询中同时使用 <strong>where</strong> 子句，<strong>group by</strong> 子句，<strong>having</strong> 子句时，其顺序是 <strong>where，group by，having 。</strong> </p>
<h4 id="（5）对查询结果排序"><a href="#（5）对查询结果排序" class="headerlink" title="（5）对查询结果排序"></a>（5）对查询结果排序</h4><p>当要对查询结果进行排序时，使用 <strong>order by</strong> 子句，<strong>order by</strong> 子句必须出现在其他子句之后。排序方式可以指定，<strong>desc</strong> 为降序，<strong>asc</strong> 为升序，缺省时为升序。</p>
<ul>
<li><strong>例</strong></li>
</ul>
<p>查询选修C1课程的学生的学号和成绩，并按成绩降序排列</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> SNo，Score <span class="keyword">from</span> SC <span class="keyword">where</span> (CNo <span class="operator">=</span> <span class="string">&#x27;C1&#x27;</span>) <span class="keyword">order</span> <span class="keyword">by</span> score <span class="keyword">desc</span></span><br></pre></td></tr></table></figure>

<h2 id="5-对表的复杂查询"><a href="#5-对表的复杂查询" class="headerlink" title="5.对表的复杂查询"></a>5.对表的复杂查询</h2><h3 id="（1）连接查询"><a href="#（1）连接查询" class="headerlink" title="（1）连接查询"></a>（1）连接查询</h3><p>数据库中的各个表中存放着不同的数据，用户往往需要用多个表中的数据来组合、提炼出所需要的信息。如果一个查询需要对多个表进行操作，就称为<strong>连接查询</strong> 。</p>
<p><strong>例</strong> </p>
<p>对student(sno,clno,sname,ssex,sage)，course(cno,cname)，sc(sno,cno,score)三张表进行操作</p>
<ul>
<li>查询体育课成绩不及格的男生名单</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> sname <span class="keyword">from</span> sc,student ,course <span class="keyword">where</span> sc.cno<span class="operator">=</span>course.cno <span class="keyword">and</span> student.sno<span class="operator">=</span>sc.sno <span class="keyword">and</span> ssex<span class="operator">=</span><span class="string">&#x27;男&#x27;</span><span class="keyword">and</span> score<span class="operator">&lt;</span><span class="number">60</span> <span class="keyword">and</span> cname<span class="operator">=</span><span class="string">&#x27;体育&#x27;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>查询有多少名学生的物理课成绩不及格</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(sno) <span class="keyword">from</span> sc,course  <span class="keyword">where</span> sc.cno<span class="operator">=</span>course.cno <span class="keyword">and</span> cname<span class="operator">=</span><span class="string">&#x27;物理&#x27;</span> <span class="keyword">and</span> score<span class="operator">&lt;</span><span class="number">60</span></span><br></pre></td></tr></table></figure>

<p><strong>当两个表中的列名相同时，引用列名要加上表名前缀，说明所指列属于哪个表，避免二义性。如果列名唯一则不需要加前缀。</strong></p>
<h3 id="（2）子查询"><a href="#（2）子查询" class="headerlink" title="（2）子查询"></a>（2）子查询</h3><p>在 where 子句中包含另一个查询块，该查询块称为 <strong>子查询</strong> 或 <strong>嵌套查询</strong> ，包含子查询的语句称为父查询或外部查询。</p>
<ul>
<li><p>当子查询的返回值只有一个时，可以使用比较运算符( &#x3D;、&gt;、&lt;、&gt;&#x3D;、&lt;&#x3D;、!&#x3D;)将父查询和子查询连接起来。</p>
</li>
<li><p>如果子查询的返回值不止一个，而是一个集合时，则不能直接使用比较运算符，可以在比较运算符和子查询之间插入 <strong>ANY</strong> 或 <strong>ALL</strong> 。</p>
</li>
</ul>
<p>: ANY 含义为任何一个</p>
<p>: IN 可以代替 “&#x3D;ANY”</p>
<p>: ALL 的含义是全部</p>
<p>: &lt;&gt;ALL 的含义为不等于子查询结果中的任何一个值</p>
<p>: NOT IN 可以替代“ &lt;&gt;ALL ”</p>
<p>: EXISTS 的含义是存在的量词，其子查询不返回任何实际数据，它只返回逻辑值“真”或“假”</p>
<p><strong>例</strong></p>
<ol>
<li>将 A 班全体学生的成绩置 0</li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">update</span> sc <span class="keyword">set</span> score<span class="operator">=</span><span class="number">0</span> <span class="keyword">where</span> sno <span class="keyword">in</span>(<span class="keyword">select</span> sno <span class="keyword">from</span> student <span class="keyword">where</span> clno<span class="operator">=</span><span class="string">&#x27;A&#x27;</span>)</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>删除 B 班全体学生的选课记录</li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> sc <span class="keyword">where</span> sno <span class="keyword">in</span>(<span class="keyword">select</span> sno <span class="keyword">from</span> student <span class="keyword">where</span> clno<span class="operator">=</span><span class="string">&#x27;B&#x27;</span>)</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>使用 exists关键字查询所有选修了 C1 号课程的学生的姓名</li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">selec sname <span class="keyword">from</span> student <span class="keyword">where</span> <span class="keyword">exists</span> (<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> sc <span class="keyword">where</span> cno<span class="operator">=</span><span class="string">&#x27;C1&#x27;</span><span class="keyword">and</span> sc.sno<span class="operator">=</span>student.sno)</span><br></pre></td></tr></table></figure>

<ol start="4">
<li> 查询其他班中比A班所有学生年龄都小的学生，并按年龄的降序输出</li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> student <span class="keyword">where</span> sage <span class="operator">&lt;</span> <span class="keyword">all</span>(<span class="keyword">select</span> sage <span class="keyword">from</span> student <span class="keyword">where</span> clno<span class="operator">=</span><span class="string">&#x27;04001&#x27;</span>)</span><br><span class="line"><span class="keyword">and</span> clno<span class="operator">&lt;&gt;</span><span class="string">&#x27;04001&#x27;</span> </span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> sage <span class="keyword">desc</span></span><br></pre></td></tr></table></figure>

<h2 id="6-数据表中数据的操纵"><a href="#6-数据表中数据的操纵" class="headerlink" title="6.数据表中数据的操纵"></a>6.数据表中数据的操纵</h2>]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>sql</tag>
      </tags>
  </entry>
  <entry>
    <title>sql语句</title>
    <url>/xuanyao/124cdf9.html</url>
    <content><![CDATA[<h1 id="SQL语句"><a href="#SQL语句" class="headerlink" title="SQL语句"></a>SQL语句</h1><h2 id="一、数据库"><a href="#一、数据库" class="headerlink" title="一、数据库"></a>一、数据库</h2><h3 id="1、创建数据库（CREATE）"><a href="#1、创建数据库（CREATE）" class="headerlink" title="1、创建数据库（CREATE）"></a>1、创建数据库（CREATE）</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*语法格式*/</span></span><br><span class="line"><span class="keyword">CREATE</span> DATABASE 数据库名称</span><br><span class="line"><span class="keyword">ON</span></span><br><span class="line">(</span><br><span class="line">    NAME<span class="operator">=</span>数据文件逻辑名称,</span><br><span class="line">    FILENAME<span class="operator">=</span><span class="string">&#x27;PATH&#x27;</span>,</span><br><span class="line">    SIZE<span class="operator">=</span>数据文件初始大小,</span><br><span class="line">    MAXSIZE<span class="operator">=</span>数据文件最大容量,</span><br><span class="line">    FILEGROWTH<span class="operator">=</span>数据文件自动增长容量<span class="comment">/*UNLIMITED:无限制增长*/</span></span><br><span class="line">)</span><br><span class="line">LOG <span class="keyword">ON</span></span><br><span class="line">(</span><br><span class="line">    NAME<span class="operator">=</span>日志逻辑名称,</span><br><span class="line">    FILENAME<span class="operator">=</span>PATH,</span><br><span class="line">    SIZE<span class="operator">=</span>日志文件初始大小,</span><br><span class="line">    MAXSIZE<span class="operator">=</span>日志文件最大容量,</span><br><span class="line">    FILEGROWTH<span class="operator">=</span>日志自动增长容量</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*例*/</span></span><br><span class="line"><span class="keyword">CREATE</span> DATABASE T</span><br><span class="line"><span class="keyword">ON</span></span><br><span class="line">(</span><br><span class="line">    NAME<span class="operator">=</span>T,</span><br><span class="line">    FILENAME<span class="operator">=</span><span class="string">&#x27;E:\Database\TData.mdf&#x27;</span>,</span><br><span class="line">    SIZE<span class="operator">=</span><span class="number">10</span>,</span><br><span class="line">    MAXSIZE<span class="operator">=</span><span class="number">500</span>,</span><br><span class="line">    FILEGROWTH<span class="operator">=</span><span class="number">10</span></span><br><span class="line">)</span><br><span class="line">LOG <span class="keyword">ON</span></span><br><span class="line">(</span><br><span class="line">    NAME<span class="operator">=</span>T_Log,</span><br><span class="line">    FILENAME<span class="operator">=</span><span class="string">&#x27;E:\Database\TData.ldf&#x27;</span>,</span><br><span class="line">    SIZE<span class="operator">=</span><span class="number">5</span>,</span><br><span class="line">    MAXSIZE<span class="operator">=</span><span class="number">500</span>,</span><br><span class="line">    FILEGROWTH<span class="operator">=</span><span class="number">5</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<h3 id="2、修改数据库（ALTER）"><a href="#2、修改数据库（ALTER）" class="headerlink" title="2、修改数据库（ALTER）"></a>2、修改数据库（ALTER）</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*语法格式*/</span></span><br><span class="line"><span class="keyword">ALTER</span> DATABASE 数据库名称</span><br><span class="line"><span class="keyword">ADD</span> FILE(            <span class="comment">/*向数据库中添加数据文件*/</span></span><br><span class="line">    NAME<span class="operator">=</span>文件逻辑名称, <span class="comment">/*必选*/</span></span><br><span class="line">    [NEWNAME<span class="operator">=</span>新文件逻辑名称,]<span class="comment">/*任选*/</span></span><br><span class="line">    [SIZE<span class="operator">=</span>初始文件大小,]</span><br><span class="line">    [MAXSIZE<span class="operator">=</span>文件最大容量,]</span><br><span class="line">    [FILEGROWTH<span class="operator">=</span>文件自动增长容量]</span><br><span class="line">)</span><br><span class="line">[,...n]<span class="comment">/*可添加多个*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ADD</span> LOG FILE(       <span class="comment">/*向数据库中添加日志文件*/</span></span><br><span class="line">    NAME<span class="operator">=</span>文件逻辑名称,</span><br><span class="line">    [NEWNAME<span class="operator">=</span>新文件逻辑名称,]</span><br><span class="line">    [SIZE<span class="operator">=</span>初始文件大小,]</span><br><span class="line">    [MAXSIZE<span class="operator">=</span>文件最大容量,]</span><br><span class="line">    [FILEGROWTH<span class="operator">=</span>文件自动增长容量]</span><br><span class="line">)</span><br><span class="line">[,...n]<span class="comment">/*可添加多个*/</span></span><br><span class="line"></span><br><span class="line">REMOVE FILE 文件逻辑名称<span class="comment">/*从数据库中删除逻辑文件，并删除物理文件；</span></span><br><span class="line"><span class="comment">                       若文件不为空，则无法删除*/</span></span><br><span class="line">MODIFY FILE(        <span class="comment">/*指定要修改的文件*/</span></span><br><span class="line">    NAME<span class="operator">=</span>文件逻辑名称,</span><br><span class="line">    [NEWNAME<span class="operator">=</span>新文件逻辑名称,]</span><br><span class="line">    [SIZE<span class="operator">=</span>初始文件大小,]</span><br><span class="line">    [MAXSIZE<span class="operator">=</span>文件最大容量,]</span><br><span class="line">    [FILEGROWTH<span class="operator">=</span>文件自动增长容量]</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*关于文件组的修改*/</span></span><br><span class="line"><span class="keyword">ADD</span> FILEGROUP 文件组名</span><br><span class="line">REMOVE FILEGROUP 文件组名</span><br><span class="line">MODIFY FILEGROUP 文件组名&#123;        <span class="comment">/*属性*/</span></span><br><span class="line">    READ_ONLY <span class="operator">|</span> READ_WRITE,   <span class="comment">/*只读 / 读写*/</span></span><br><span class="line">    <span class="operator">|</span> <span class="keyword">DEFAULT</span>,                <span class="comment">/*默认文件组*/</span></span><br><span class="line">    <span class="operator">|</span> NAME <span class="operator">=</span> 新文件组名&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="3、删除数据库（DROP）"><a href="#3、删除数据库（DROP）" class="headerlink" title="3、删除数据库（DROP）"></a>3、删除数据库（DROP）</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*语法格式*/</span></span><br><span class="line"><span class="keyword">DROP</span> DATABASE 数据库名称[,...n]<span class="comment">/*可一次删除多个*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*例*/</span></span><br><span class="line"><span class="keyword">DROP</span> DATABASE T</span><br></pre></td></tr></table></figure>

<h2 id="二、数据表"><a href="#二、数据表" class="headerlink" title="二、数据表"></a>二、数据表</h2><h3 id="1、创建表（CREATE）"><a href="#1、创建表（CREATE）" class="headerlink" title="1、创建表（CREATE）"></a>1、创建表（CREATE）</h3><h4 id="1-基本格式"><a href="#1-基本格式" class="headerlink" title="(1)    基本格式"></a>(1)    基本格式</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> S</span><br><span class="line">(</span><br><span class="line">    <span class="comment">/*name 类型 约束*/</span></span><br><span class="line">    SNO <span class="type">VARCHAR</span>(<span class="number">6</span>),</span><br><span class="line">    SN NVARCHAR(<span class="number">10</span>),</span><br><span class="line">    Sex <span class="type">NCHAR</span>(<span class="number">1</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;男&#x27;</span>,</span><br><span class="line">    Age <span class="type">INT</span>,</span><br><span class="line">    Dept NVARCHAR(<span class="number">20</span>),</span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<h4 id="2-约束"><a href="#2-约束" class="headerlink" title="(2)    约束"></a>(2)    约束</h4><p>    <mark><strong>语法格式：[CONSTRAINT &lt;约束名&gt;]  &lt;约束类型&gt;</strong></mark></p>
<h5 id="a-NULL-x2F-NOT-NULL-约束"><a href="#a-NULL-x2F-NOT-NULL-约束" class="headerlink" title="a. NULL &#x2F; NOT NULL 约束"></a>a. NULL &#x2F; NOT NULL 约束</h5><p>        NULL 不是0，也不是空白，指不确定、没有数据，只用于定义列约束</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> S</span><br><span class="line">(</span><br><span class="line">    SNO <span class="type">VARCHAR</span>(<span class="number">6</span>) <span class="keyword">CONSTRAINT</span> S_CON <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    CNO <span class="type">VARCHAR</span>(<span class="number">6</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>          <span class="comment">/*省略约束名称*/</span> </span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<h5 id="b-UNIQUE-唯一约束"><a href="#b-UNIQUE-唯一约束" class="headerlink" title="b.  UNIQUE (唯一约束)"></a>b.  UNIQUE (唯一约束)</h5><p>        <strong>UNIQUE</strong> 约束用于指明某一列或多个列组合上取值必须唯一，被约束的列称为<strong>唯一键</strong> </p>
<p>        <strong>考虑因素：</strong></p>
<p>         UNIQUE约束字段允许为NULL</p>
<p>         一个表中允许存在多个空值</p>
<p>         可以把UNIQUE约束在多个字段上</p>
<p>          UNIQUE约束用于强制在指定字段上创建一个UNIQUE索引，缺省为非聚集索引</p>
<p>            </p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> T</span><br><span class="line">(</span><br><span class="line">    SN NVARCHAR(<span class="number">10</span>) <span class="keyword">CONSTRAINT</span> SN_UNIQ <span class="keyword">UNIQUE</span>,</span><br><span class="line">    CNO NVARCHAR(<span class="number">10</span>) <span class="keyword">UNIQUE</span>  <span class="comment">/*省略约束名称*/</span></span><br><span class="line">    <span class="keyword">CONSTRAINT</span> S_C_UNIQ <span class="keyword">UNIQUE</span>(SN,CNO)  <span class="comment">/*同时约束多列*/</span></span><br><span class="line">)           </span><br></pre></td></tr></table></figure>

<p>    </p>
<h5 id="c-PRIMARY-KEY-主键约束"><a href="#c-PRIMARY-KEY-主键约束" class="headerlink" title="c. PRIMARY KEY (主键约束)"></a>c. PRIMARY KEY (主键约束)</h5><p>       <strong>PRIMARY KEY</strong> 约束用于定义基本表的主键，起唯一标识作用，<strong>不能为NULL，也不能重复</strong> ，以此保证实体完整性</p>
<p>        <strong>PRIMARY KEY 与 UNIQUE 区别：</strong></p>
<p>         -  一个基本表中只能有一个PRIMARY KEY ,但可以有多个UNIQUE</p>
<p>         - 被<strong>PRIMARY KEY</strong>约束的列或列组合都<strong>不能为NULL</strong>，UNIQUE允许为NULL</p>
<p>         - <strong>不能为同一列或列组，同时定义PRIMARY KEY 和 UNIQUE约束</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> S</span><br><span class="line">(</span><br><span class="line">    SNO <span class="type">VARCHAR</span>(<span class="number">6</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">CONSTRAINT</span> S_Prim <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">    S  <span class="type">CHAR</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    C  <span class="type">CHAR</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span></span><br><span class="line">    <span class="keyword">CONSTRAINT</span> SC_Prim <span class="keyword">PRIMARY</span> KEY(S,C)<span class="comment">/*约束多列,S,N不允许为NULL*/</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<h5 id="d-FOREIGN-KEY-外键约束"><a href="#d-FOREIGN-KEY-外键约束" class="headerlink" title="d. FOREIGN KEY (外键约束)"></a>d. FOREIGN KEY (外键约束)</h5><p>       <strong>FOREIGN KEY</strong> 约束指定某一列或几列作为外部键。</p>
<p>        包含外部键的表为从表，包含外部键引用的主键或唯一键为主表；从表外部键上的取值是主表中某一个主键或唯一键的值，或为NULL，以保证两表间的参照完整性。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">[<span class="keyword">CONSTRAINT</span> 约束名] <span class="keyword">FOREIGN</span> KEY <span class="keyword">REFERENCES</span> 主表名（列名）</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> SC</span><br><span class="line">(</span><br><span class="line">    SNO <span class="type">VARCHAR</span>(<span class="number">6</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">CONSTRAINT</span> S_Froe <span class="keyword">FOREIGN</span> <span class="keyword">REFERENCES</span> S(SNO),</span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<h5 id="e-CHECK-约束"><a href="#e-CHECK-约束" class="headerlink" title="e. CHECK 约束"></a>e. CHECK 约束</h5><p>       <strong>CHECK</strong> 约束用来检查字段值所允许的范围，以此来保证域的完整性，既可用于表约束，也可用于列约束。</p>
<p>       <strong>考虑因素：</strong></p>
<ol>
<li><p>一个表中可以定义多个CHECK约束</p>
</li>
<li><p>每个字段只能定义一个CHECK约束</p>
</li>
<li><p>在多个字段上定义的CHECK约束为表约束</p>
</li>
<li><p>当执行INSERT、UPDATE语句时，CHECK约束将验证数据</p>
</li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">[<span class="keyword">CONSTRAINT</span> 约束名] <span class="keyword">CHECK</span>(条件)</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> SC</span><br><span class="line">(</span><br><span class="line">    Score <span class="type">NUMERIC</span>(<span class="number">4</span>,<span class="number">1</span>) <span class="keyword">CONSTRAINT</span> S_CHK <span class="keyword">CHECK</span>(Score<span class="operator">&gt;=</span><span class="number">0</span> <span class="keyword">AND</span> Score <span class="operator">&lt;=</span><span class="number">100</span>)</span><br><span class="line">    email <span class="type">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">CONSTRAINT</span> E_CHK <span class="keyword">CHECK</span>(email <span class="keyword">LIKE</span> <span class="string">&#x27;%@%&#x27;</span>)</span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<h3 id="2、修改表（ALTER）"><a href="#2、修改表（ALTER）" class="headerlink" title="2、修改表（ALTER）"></a>2、修改表（ALTER）</h3><h4 id="1-ADD-方式"><a href="#1-ADD-方式" class="headerlink" title="(1)    ADD 方式"></a>(1)    ADD 方式</h4><p>      <strong>ADD</strong> 用于增加新列和完整性约束</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名</span><br><span class="line"><span class="keyword">ADD</span></span><br><span class="line">定义列 <span class="operator">|</span> 完整性约束</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> SC</span><br><span class="line"><span class="keyword">ADD</span></span><br><span class="line">CL <span class="type">VARCHAR</span>(<span class="number">6</span>),<span class="comment">/*定义列*/</span></span><br><span class="line"><span class="keyword">CONSTRAINT</span> S_CHK <span class="keyword">CHECK</span>(Score<span class="operator">&lt;=</span><span class="number">0</span> <span class="keyword">AND</span> Score<span class="operator">&gt;=</span><span class="number">100</span>) <span class="comment">/*完整性约束*/</span></span><br></pre></td></tr></table></figure>

<h4 id="2-ALTER-方式"><a href="#2-ALTER-方式" class="headerlink" title="(2)    ALTER 方式"></a>(2)    ALTER 方式</h4><p>      <strong>ALTER</strong> 用于修改某些列</p>
<p>      <strong>限制：</strong></p>
<ul>
<li><p>不能改变列名</p>
</li>
<li><p>不能将含有NULL值的列修改为NOT NULL约束</p>
</li>
<li><p>若列中已有数据，则不能减少该列的宽度，也不能改变其数据类型 <strong>(当数据长度小于宽度时，<mark>NVARCHAR除外</mark>)</strong> </p>
</li>
<li><p>只能修改NULL&#x2F;NOT NULL约束，<mark><u>其他类型约束在修改前必修先删除约束，然后在重新添加修改过的约束定义</u> </mark></p>
</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">COLUMN</span></span><br><span class="line">列名 数据类型 [<span class="keyword">NULL</span> <span class="operator">|</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> SC</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">COLUMN</span></span><br><span class="line">SN NVARCHAR(<span class="number">20</span>)</span><br></pre></td></tr></table></figure>

<h4 id="3-DROP-方式"><a href="#3-DROP-方式" class="headerlink" title="(3)    DROP 方式"></a>(3)    DROP 方式</h4><p>      <strong>DROP</strong> 只用于删除完整性约束定义</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">CONSTRAINT</span> 约束名</span><br></pre></td></tr></table></figure>

<h3 id="3、删除表（DROP）"><a href="#3、删除表（DROP）" class="headerlink" title="3、删除表（DROP）"></a>3、删除表（DROP）</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> 表名</span><br></pre></td></tr></table></figure>

<h3 id="4、查询表（SELECT）"><a href="#4、查询表（SELECT）" class="headerlink" title="4、查询表（SELECT）"></a>4、查询表（SELECT）</h3><h4 id="1-单表查询"><a href="#1-单表查询" class="headerlink" title="(1)    单表查询"></a>(1)    单表查询</h4><h5 id="a-无条件查询"><a href="#a-无条件查询" class="headerlink" title="a.    无条件查询"></a>a.    无条件查询</h5><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> 列名,[....]  <span class="keyword">FROM</span> 表名</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> 表名<span class="comment">/* 查询表中全部数据 */</span> </span><br></pre></td></tr></table></figure>

<h5 id="b-条件查询"><a href="#b-条件查询" class="headerlink" title="b.    条件查询"></a>b.    条件查询</h5><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> 列名,[...] <span class="keyword">FROM</span> 表名 <span class="keyword">WHERE</span> 条件</span><br></pre></td></tr></table></figure>

<p><strong>常用运算符</strong></p>
<table>
<thead>
<tr>
<th align="center">运算符</th>
<th align="center">含义</th>
</tr>
</thead>
<tbody><tr>
<td align="center">&#x3D;、&gt;、&lt;、&gt;&#x3D;、&lt;&#x3D;、!&#x3D;、&lt;&gt;(不等于)</td>
<td align="center">比较大小</td>
</tr>
<tr>
<td align="center">AND、OR、NOT</td>
<td align="center">多重条件</td>
</tr>
<tr>
<td align="center">BETWEEN AND</td>
<td align="center">确定范围</td>
</tr>
<tr>
<td align="center">IN</td>
<td align="center">确定集合</td>
</tr>
<tr>
<td align="center">LIKE</td>
<td align="center">字符匹配</td>
</tr>
<tr>
<td align="center">IS NULL</td>
<td align="center">空值</td>
</tr>
</tbody></table>
<h6 id="1）比较大小"><a href="#1）比较大小" class="headerlink" title="1）比较大小"></a>1）比较大小</h6><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> SNO,Score <span class="keyword">FROM</span> SC <span class="keyword">WHERE</span> Score<span class="operator">&gt;</span><span class="number">85</span></span><br></pre></td></tr></table></figure>

<h6 id="2）多重条件查询"><a href="#2）多重条件查询" class="headerlink" title="2）多重条件查询"></a>2）多重条件查询</h6><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> SNO,CNO,Score</span><br><span class="line"><span class="keyword">FROM</span> SC</span><br><span class="line"><span class="keyword">WHERE</span> (CNO <span class="operator">=</span> <span class="string">&#x27;&#x27;</span>C1 <span class="keyword">OR</span> CNO <span class="operator">=</span> <span class="string">&#x27;C2&#x27;</span>) <span class="keyword">AND</span> (Score <span class="operator">&gt;=</span> <span class="number">85</span>)</span><br></pre></td></tr></table></figure>

<h6 id="3）确定范围"><a href="#3）确定范围" class="headerlink" title="3）确定范围"></a>3）确定范围</h6><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> TNO,CNO,SAL</span><br><span class="line"><span class="keyword">FROM</span> T</span><br><span class="line"><span class="keyword">WHERE</span> SAL <span class="keyword">BETWEEN</span> <span class="number">1000</span> <span class="keyword">AND</span> <span class="number">2000</span></span><br><span class="line">(SAL <span class="operator">&gt;=</span> <span class="number">1000</span> <span class="keyword">AND</span> SAL <span class="operator">&lt;=</span> <span class="number">2000</span>)</span><br></pre></td></tr></table></figure>

<h6 id="4）确定集合"><a href="#4）确定集合" class="headerlink" title="4）确定集合"></a>4）确定集合</h6><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> SNO,CNO,Score</span><br><span class="line"><span class="keyword">FROM</span> SC</span><br><span class="line"><span class="keyword">WHERE</span> CNO <span class="keyword">IN</span> (<span class="string">&#x27;C1&#x27;</span>,<span class="string">&#x27;C2&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> SNO,CNO,Score</span><br><span class="line"><span class="keyword">FROM</span> SC</span><br><span class="line"><span class="keyword">WHERE</span> CNO <span class="keyword">NOT</span> <span class="keyword">IN</span> (<span class="string">&#x27;C1&#x27;</span>,<span class="string">&#x27;C2&#x27;</span>)</span><br></pre></td></tr></table></figure>

<h6 id="5）部分匹配查询"><a href="#5）部分匹配查询" class="headerlink" title="5）部分匹配查询"></a>5）部分匹配查询</h6><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">属性名 <span class="keyword">LIKE</span> 字符串常量</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="center">通配符</th>
<th align="center">功能</th>
<th align="center">实例</th>
</tr>
</thead>
<tbody><tr>
<td align="center">%</td>
<td align="center">代表0或多个字符</td>
<td align="center">‘a%’,’a’后可接任意字符</td>
</tr>
<tr>
<td align="center">_(下划线)</td>
<td align="center">代表一个字符</td>
<td align="center">‘a_b’ ,a、b之间可有一个字符</td>
</tr>
<tr>
<td align="center">[]</td>
<td align="center">表示某一范围的字符</td>
<td align="center">[0-9],0~9之间的字符</td>
</tr>
<tr>
<td align="center">[^]</td>
<td align="center">表示不在某一范围内的字符</td>
<td align="center">[^0-9]，不在0~9之间的字符</td>
</tr>
</tbody></table>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">查询姓张的老师</span><br><span class="line"><span class="keyword">SELECT</span> TNO,TN</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line"><span class="keyword">WHERE</span> TN <span class="keyword">LIKE</span> <span class="string">&#x27;张%&#x27;</span></span><br></pre></td></tr></table></figure>

<h6 id="6）空值查询"><a href="#6）空值查询" class="headerlink" title="6）空值查询"></a>6）空值查询</h6><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> SNO,CNO</span><br><span class="line"><span class="keyword">FROM</span> SC</span><br><span class="line"><span class="keyword">WHERE</span> Score <span class="keyword">IS</span> <span class="keyword">NULL</span></span><br></pre></td></tr></table></figure>

<h5 id="c-库函数及统计汇总查询"><a href="#c-库函数及统计汇总查询" class="headerlink" title="c.    库函数及统计汇总查询"></a>c.    库函数及统计汇总查询</h5><p><strong>常用库函数及其功能</strong></p>
<table>
<thead>
<tr>
<th align="center">函数名称</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">AVG</td>
<td align="center">按列计算平均值</td>
</tr>
<tr>
<td align="center">SUM</td>
<td align="center">按列计算总和</td>
</tr>
<tr>
<td align="center">MAX</td>
<td align="center">求一列中的最大值</td>
</tr>
<tr>
<td align="center">MIN</td>
<td align="center">求一列中的最小值</td>
</tr>
<tr>
<td align="center">COUNT</td>
<td align="center">按列值统计个数</td>
</tr>
</tbody></table>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(SNO) <span class="keyword">AS</span> TOTAL <span class="keyword">FROM</span> S</span><br><span class="line"><span class="keyword">WHERE</span> DEPT <span class="operator">=</span> <span class="string">&#x27;计算机&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> S</span><br><span class="line"><span class="keyword">WHERE</span> DEPT <span class="operator">=</span> <span class="string">&#x27;计算机&#x27;</span></span><br><span class="line"><span class="comment">/* COUNT(*) 用于统计元组个数，不消除重复行，不允许使用DISTINCT</span></span><br><span class="line"><span class="comment">   DISTINCT 用于返回唯一不同的值（取消查询某列重复的值）*/</span></span><br></pre></td></tr></table></figure>

<h5 id="d-分组查询"><a href="#d-分组查询" class="headerlink" title="d.    分组查询"></a>d.    分组查询</h5><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> TNO,<span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">AS</span> TOTAL</span><br><span class="line"><span class="keyword">FROM</span> TC</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> TNO <span class="comment">/*按TNO 进行分组，具有相同TNO的为一组*/</span></span><br><span class="line"><span class="keyword">HAVING</span> TOTAL<span class="operator">&gt;=</span><span class="number">2</span> <span class="comment">/*去掉不满足条件的元组*/</span></span><br></pre></td></tr></table></figure>

<p>在使用WHERE、GROUP BY、HAVING 时，<strong>顺序：WHERE、GROUP BY、HAVING</strong> </p>
<p><mark>WHERE与HAVING子句</mark>的根本区别在于作用对象不同，<strong>WHERE作用于</strong>基本表或视图；<strong>HAVING作用于</strong>组，<strong>必须用在GROUP BY 子句之后</strong>，但GROUP BY 子句可以没有HAVING子句。  </p>
<h5 id="e-查询结果排序"><a href="#e-查询结果排序" class="headerlink" title="e.    查询结果排序"></a>e.    查询结果排序</h5><p><strong>ORDER BY</strong> 子句用于查询结果排序，必须用于其他子句之后，<strong>DESC  降序、ASC 升序，缺省时为升序</strong> </p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> 属性名 <span class="keyword">DESC</span> <span class="operator">|</span> <span class="keyword">ASC</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> SNO,Score</span><br><span class="line"><span class="keyword">FROM</span> SC</span><br><span class="line"><span class="keyword">WHERE</span> CNO <span class="operator">=</span> <span class="string">&#x27;C1&#x27;</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> Score <span class="keyword">DESC</span></span><br></pre></td></tr></table></figure>

<h4 id="2-多表连接查询"><a href="#2-多表连接查询" class="headerlink" title="(2)    多表连接查询"></a>(2)    多表连接查询</h4><h5 id="a-查询结构"><a href="#a-查询结构" class="headerlink" title="a.    查询结构"></a>a.    查询结构</h5><ul>
<li>表之间满足一定条件时进行连接：<strong>FROM</strong> 子句指明连接表名，<strong>WHERE</strong> 子句指明连接的列名及其连接条件</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> 列名 [<span class="keyword">AS</span> 别名],[...]</span><br><span class="line"><span class="keyword">FROM</span> 表名<span class="number">1</span>,表名<span class="number">2.</span>..</span><br><span class="line"><span class="keyword">WHERE</span> 检索条件 (eg:T.TNO<span class="operator">=</span>C.TNO [<span class="keyword">AND</span> ...])</span><br></pre></td></tr></table></figure>

<ul>
<li><p>利用关键字<strong>JOIN</strong> 进行连接</p>
<ul>
<li><p>**INNER JOIN (内连接)**：显示符合条件的记录，此为默认值。</p>
</li>
<li><p><strong>LEFT (OUTER) JOIN (左(外)连接)</strong> ：用于显示符合条件的数据行以及左边表中不符合条件的数据行。此时右边数据行会以NULL来显示。</p>
</li>
<li><p><strong>RIFHT (OUTER) JOIN (右(外)连接)</strong> ：用于显示符合条件的数据行以及右边表中不符合条件的数据行。此时左边数据行会以NULL来显示。</p>
</li>
<li><p><strong>FULL (OUTER) JOIN</strong> :显示符合条件的数据行以及左边表和右边表中不符合条件的数据行。此时缺乏数据的数据行会以NULL来显示。</p>
</li>
<li><p><strong>CROSS JOIN</strong> :将一个表中的每一个记录和另一个表的每一个记录匹配成新的数据行。</p>
</li>
</ul>
</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> ... </span><br><span class="line"><span class="keyword">FROM</span> 表名<span class="number">1</span></span><br><span class="line">[<span class="keyword">INNER</span> <span class="operator">|</span><span class="keyword">LEFT</span> <span class="keyword">OUTER</span><span class="operator">|</span><span class="keyword">RIGHT</span> <span class="keyword">OUTER</span><span class="operator">|</span><span class="keyword">FULL</span> <span class="keyword">OUTER</span> <span class="operator">|</span><span class="keyword">CROSS</span>] <span class="keyword">JOIN</span> 表名<span class="number">2</span></span><br><span class="line"><span class="keyword">ON</span> 条件</span><br></pre></td></tr></table></figure>

<h5 id="b-内连接查询"><a href="#b-内连接查询" class="headerlink" title="b.    内连接查询"></a>b.    内连接查询</h5><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">方法一：</span><br><span class="line"><span class="keyword">SELECT</span> T.TNO, TN, CNO</span><br><span class="line"><span class="keyword">FROM</span> T,TC</span><br><span class="line"><span class="keyword">WHERE</span> T.TNO<span class="operator">=</span>TC.TNO <span class="comment">/*连接条件 TNO:连接字段,加前缀避免二义性(同名属性必加) </span></span><br><span class="line"><span class="comment">                    运算符：= &gt; &lt; &gt;= &lt;= !=*/</span></span><br><span class="line"><span class="keyword">AND</span> TN<span class="operator">=</span><span class="string">&#x27;刘伟&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">方法二：</span><br><span class="line"><span class="keyword">SELECT</span> T.TNO,TN,CNO</span><br><span class="line"><span class="keyword">FROM</span> T <span class="keyword">INNER</span> <span class="keyword">JOIN</span> TC</span><br><span class="line"><span class="keyword">ON</span> T.TNO<span class="operator">=</span>TC.TNO</span><br><span class="line"><span class="keyword">WHERE</span> TN<span class="operator">=</span><span class="string">&#x27;刘伟&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*上述方法，将T中TNO与TC中TNO相等的行连接，同时选取TN=‘刘伟’的行，</span></span><br><span class="line"><span class="comment">不显示不满足连接条件的元组*/</span></span><br></pre></td></tr></table></figure>

<h5 id="c-外连接查询"><a href="#c-外连接查询" class="headerlink" title="c.    外连接查询"></a>c.    外连接查询</h5><p>        外部连接中有主从表之分，以主表的每行数据去匹配从表的数据列。符合连接的数据将直接返回到结果集中；不符合连接条件的列，将填上NULL后返回结果集中（bit类型不允许有NULL，填0）</p>
<ul>
<li><p><strong>左外部连接</strong> ：主表在左</p>
</li>
<li><p><strong>右外部连接</strong> ：主表在右</p>
</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> S.S#,S.SN,CN,GR</span><br><span class="line"><span class="keyword">FROM</span> S <span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> SC</span><br><span class="line"><span class="keyword">ON</span> S.S#<span class="operator">=</span>SC.S#</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> C</span><br><span class="line"><span class="keyword">ON</span> SC.C#<span class="operator">=</span>C.C#</span><br></pre></td></tr></table></figure>

<h5 id="d-交叉查询"><a href="#d-交叉查询" class="headerlink" title="d.    交叉查询"></a>d.    交叉查询</h5><p>        <strong>交叉查询（CROSS JOIN）</strong> ：对表无要求，<strong>查询结果集合的行数是两个表行数的乘积，列数的两个表列数的和。</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span>  <span class="keyword">FROM</span> S <span class="keyword">CROSS</span> <span class="keyword">JOIN</span> C</span><br></pre></td></tr></table></figure>

<h5 id="e-自连接查询"><a href="#e-自连接查询" class="headerlink" title="e.    自连接查询"></a>e.    自连接查询</h5><p>        当一个表与其自身进行连接操作时称自连接。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> X.TN,X.Sal, Y.Sal</span><br><span class="line"><span class="keyword">FROM</span> T <span class="keyword">AS</span> X,T <span class="keyword">AS</span> Y</span><br><span class="line"><span class="keyword">WHERE</span> X.Sal<span class="operator">&gt;</span>Y.Sal <span class="keyword">AND</span> Y.TN<span class="operator">=</span><span class="string">&#x27;刘伟&#x27;</span><span class="comment">/*查询所有比刘伟工资高的教师部分信息*/</span></span><br></pre></td></tr></table></figure>

<h4 id="3-子查询（嵌套查询）"><a href="#3-子查询（嵌套查询）" class="headerlink" title="(3)    子查询（嵌套查询）"></a>(3)    子查询（嵌套查询）</h4><p>    <strong>子查询(嵌套查询)：WHERE 中包含一个SELECT-FROM-WHERE的查询块,包含子查询语句的称为父查询或外部查询</strong></p>
<p>    <strong>复杂查询：</strong> 将一系列简单查询嵌套，可增强查询能力。</p>
<p>    <strong>子查询嵌套层数最多255次，由里向外处理</strong></p>
<h5 id="a-普通子查询"><a href="#a-普通子查询" class="headerlink" title="a.    普通子查询"></a>a.    普通子查询</h5><p>        先执行子查询，子查询结果作为父查询的条件的值，子查询只执行一次。</p>
<ul>
<li>返回一个值</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*可使用表运算符连接父查询和子查询：=、&gt;、&lt;、&gt;=、&lt;=、!=*/</span></span><br><span class="line"><span class="keyword">SELECT</span> TNO,TN</span><br><span class="line"><span class="keyword">FROM</span> T</span><br><span class="line"><span class="keyword">WHERE</span> Prof <span class="operator">=</span> (<span class="keyword">SELECT</span> Prof <span class="keyword">FROM</span> <span class="keyword">WHERE</span> TN<span class="operator">=</span><span class="string">&#x27;刘伟&#x27;</span>)</span><br></pre></td></tr></table></figure>

<ul>
<li>返回一组值</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*不能直接使用比较运算符，可以在子查询与运算符之间插入  IN 、ALL 或 ANY*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*ALL：所有*/</span></span><br><span class="line"><span class="keyword">SELECT</span> TN,Sal <span class="keyword">FROM</span> T</span><br><span class="line"><span class="keyword">WHERE</span> Sal <span class="operator">&gt;</span> <span class="keyword">ALL</span> (<span class="keyword">SELECT</span> Sal <span class="keyword">FROM</span> T <span class="keyword">WHERE</span> Dept<span class="operator">=</span><span class="string">&#x27;计算机&#x27;</span>) </span><br><span class="line"><span class="keyword">AND</span> (Dept <span class="operator">&lt;&gt;</span> <span class="string">&#x27;计算机&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*ANY：任意*/</span></span><br><span class="line"><span class="keyword">SELECT</span> TN <span class="keyword">FROM</span> T</span><br><span class="line"><span class="keyword">WHERE</span> TNO <span class="operator">=</span> <span class="keyword">ANY</span> (<span class="keyword">SELECT</span> TNO <span class="keyword">FROM</span> TC <span class="keyword">WHERE</span> CNO<span class="operator">=</span><span class="string">&#x27;C5&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*IN:等价于‘= ANY’*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> TN <span class="keyword">FROM</span> T</span><br><span class="line"><span class="keyword">WHERE</span> TNO <span class="keyword">IN</span> (<span class="keyword">SELECT</span> TNO <span class="keyword">FROM</span> TC <span class="keyword">WHERE</span> CNO<span class="operator">=</span><span class="string">&#x27;C5&#x27;</span>)</span><br></pre></td></tr></table></figure>

<h5 id="b-相关子查询"><a href="#b-相关子查询" class="headerlink" title="b.    相关子查询"></a>b.    相关子查询</h5><p>        <strong>相关子查询：</strong> 子查询的查询条件使用父查询表中的属性值。</p>
<p><strong>查询过程：</strong> </p>
<ol>
<li><p> 选取父查询表中一行记录</p>
</li>
<li><p>子查询利用该记录相 关属性值进行查询</p>
</li>
<li><p>子查询返回结果，父查询判断是否满足条件</p>
</li>
<li><p>满足，放入结果集合</p>
</li>
<li><p>重复过程，直至处理完父查询表中每一行数据</p>
</li>
</ol>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> TN <span class="keyword">FROM</span> T</span><br><span class="line"><span class="keyword">WHERE</span> <span class="string">&#x27;C5&#x27;</span> <span class="operator">&lt;&gt;</span> <span class="keyword">ALL</span> (<span class="keyword">SELECT</span> CNO <span class="keyword">FROM</span> TC <span class="keyword">WHERE</span> TNO <span class="operator">=</span>T.TNO)</span><br><span class="line"><span class="comment">/*&lt;&gt;ALL:不等于子查询结果中的任何一个值*/</span></span><br></pre></td></tr></table></figure>

<p><strong><mark>EXISTS</mark> 进行相关子查询</strong> ：EXISTS 时表示存在的量词，判断查询子句是否有记录，带有EXISTS的子查询不返回合任何实际数据，只返回逻辑 ‘真’ 和 ‘假’。子查询结果集合非空时，<strong>外层WHERE语句</strong> 返回真。</p>
<p><strong>NOT EXISTS与此相反</strong> </p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> TN <span class="keyword">FROM</span> T</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">EXISTS</span> (<span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> TC <span class="keyword">WHERE</span> TNO<span class="operator">=</span>T.TNO <span class="keyword">AND</span> CNO<span class="operator">=</span><span class="string">&#x27;C5&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>   </p>
<h4 id="5-集合运算查询"><a href="#5-集合运算查询" class="headerlink" title="(5)    集合运算查询"></a>(5)    集合运算查询</h4><p>            合并查询是使用<strong>UNION</strong> 将来自不同查询的数据组合起来，形成一个具有综合信息的查询结果。</p>
<p>            <strong>UNION</strong> 会自动剔除重复数据行，<strong>合并查询所用表结构要相同，即：各子查询中的数据数目和对应数据类型必须相同。</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*分别查询S1和S5 的学号和总分，合并成一个结构集合*/</span></span><br><span class="line"><span class="keyword">SELECT</span> SNO,<span class="built_in">SUM</span>(SCORE) <span class="keyword">AS</span> TOTALS <span class="keyword">FROM</span> SC <span class="keyword">WHERE</span> SNO<span class="operator">=</span><span class="string">&#x27;S1&#x27;</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> SNO</span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span> SNO,<span class="built_in">SUM</span>(SCORE) <span class="keyword">AS</span> TOTALS <span class="keyword">FROM</span> SC <span class="keyword">WHERE</span> SNO<span class="operator">=</span><span class="string">&#x27;S5&#x27;</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> SNO</span><br></pre></td></tr></table></figure>

<h4 id="6-将查询结果储存到表中"><a href="#6-将查询结果储存到表中" class="headerlink" title="(6)    将查询结果储存到表中"></a>(6)    将查询结果储存到表中</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> ... <span class="keyword">INTO</span> 表名（或 #表名：临时表）</span><br><span class="line"><span class="comment">/*临时表存储在内存中，不在数据库中，所有存在时间非常短*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> SNO , <span class="built_in">SUM</span>(SCORE)</span><br><span class="line"><span class="keyword">INTO</span> M<span class="comment">/*新数据表 #M：临时表*/</span></span><br><span class="line"><span class="keyword">FROM</span> SC</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> SNO</span><br></pre></td></tr></table></figure>

<h3 id="5、添加表中数据"><a href="#5、添加表中数据" class="headerlink" title="5、添加表中数据"></a>5、添加表中数据</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> 表名 [(列名<span class="number">1</span>,...)] <span class="keyword">VALUES</span> (值)[,(值<span class="number">2</span>),(值<span class="number">3</span>)...]</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">INTO:指定添加列名顺序</span></span><br><span class="line"><span class="comment">注意：</span></span><br><span class="line"><span class="comment">1、字符数据用单引号</span></span><br><span class="line"><span class="comment">2、未指定列名时，新添加数据必须含有所有列的值</span></span><br><span class="line"><span class="comment">3、值的排列顺序要和属性列的排列顺序一直</span></span><br><span class="line"><span class="comment">4、INTO子句中未出现的列，新添加记录将其置为NULL,NOT NULL约束的列必须插入值</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> S (S#,SN,,SEX,AGE) <span class="keyword">VALUES</span>(<span class="string">&#x27;S1&#x27;</span>,<span class="string">&#x27;XXX&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="number">20</span>)<span class="comment">/*添加部分属性列的值*/</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> S <span class="keyword">VALUES</span>(<span class="string">&#x27;S1&#x27;</span>,<span class="string">&#x27;XXX&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="number">20</span>,<span class="string">&#x27;xxxxxxxxxxx&#x27;</span>)<span class="comment">/*添加表中所有属性列值*/</span> </span><br></pre></td></tr></table></figure>

<h3 id="6、修改表中数据"><a href="#6、修改表中数据" class="headerlink" title="6、修改表中数据"></a>6、修改表中数据</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> 表名</span><br><span class="line"><span class="keyword">SET</span> 列名 <span class="operator">=</span> 表达式,[列名<span class="operator">=</span>表达式]</span><br><span class="line">[<span class="keyword">WHERE</span> 条件]</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">SET:给出要修改的列及其修改的值</span></span><br><span class="line"><span class="comment">WHERE:指定修改记录需要满足的体哦阿健，省略则修改表中所有记录</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">UPDATE</span> T</span><br><span class="line"><span class="keyword">SET</span> DEPT<span class="operator">=</span><span class="string">&#x27;信息&#x27;</span>,AGE<span class="operator">=</span>AGE<span class="operator">+</span><span class="number">1</span></span><br><span class="line"><span class="keyword">WHERE</span> TN<span class="operator">=</span><span class="string">&#x27;张三&#x27;</span></span><br></pre></td></tr></table></figure>

<h3 id="7、删除数据"><a href="#7、删除数据" class="headerlink" title="7、删除数据"></a>7、删除数据</h3><p><strong>删除一行或多行记录</strong> </p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> 表名 [<span class="keyword">WHERE</span> 条件]</span><br></pre></td></tr></table></figure>

<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*删除一行*/</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> T <span class="keyword">WHERE</span> TN<span class="operator">=</span><span class="string">&#x27;张三&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*利用子查询选择删除的行*/</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> TC</span><br><span class="line"><span class="keyword">WHERE</span> TNO <span class="operator">=</span> (<span class="keyword">SELECT</span> TNO <span class="keyword">FROM</span> T <span class="keyword">WHERE</span> TN<span class="operator">=</span><span class="string">&#x27;张三&#x27;</span>)</span><br></pre></td></tr></table></figure>

<h2 id="三、视图"><a href="#三、视图" class="headerlink" title="三、视图"></a>三、视图</h2><h3 id="1、概述"><a href="#1、概述" class="headerlink" title="1、概述"></a>1、概述</h3><p>        视图是一个<strong>虚拟表</strong> ，内容由查询定义。包含一系列带有名称的列和行数据。<strong>视图在数据库中不是以数据值存储集形式存在</strong>（除索引视图外）。数据来自定义视图的查询所引用的基本表，并且在引用视图时动态生成。</p>
<p>        视图的作用类似于筛选，定义视图的筛选可以来自于当前或其他数据库的一个或多个表，或视图。</p>
<p>        视图通常用来集中、简化和自定义每个用户对数据库的不同认识。</p>
<p>        视图可用作安全机制：允许用户通过视图访问数据，不授予用户之间访问视图关联的基础表权限。</p>
<p>        视图可用于提供线后兼容接口来模拟曾经存在但在其架构已经更改的基础表。</p>
<h3 id="2、创建视图"><a href="#2、创建视图" class="headerlink" title="2、创建视图"></a>2、创建视图</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> 视图名 [(列名 [,...])]</span><br><span class="line"><span class="keyword">AS</span> <span class="keyword">select</span>语句</span><br><span class="line">[<span class="keyword">WITH</span> <span class="keyword">CHECK</span> OPTION]</span><br><span class="line"><span class="operator">&lt;</span>view_attribute<span class="operator">&gt;</span>::<span class="operator">=</span>&#123;</span><br><span class="line">    [ENCRYPTION]</span><br><span class="line">    [SCHEMABINDING]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><p>列名：需要列名的情况</p>
<ul>
<li><p>列是从算数表达式、函数或常量派生；</p>
</li>
<li><p>两个或更多的列可能具有相同名称（一般由于联接原因导致）；</p>
</li>
<li><p>更改列名：视图某个列的指定名称不同于其派生来源列名称</p>
</li>
</ul>
</li>
<li><p>select语句：定义视图的SELECT 语句。可使用多个表或视图</p>
</li>
<li><p>CHECK OPTION:设置针对视图的所有数据修改语句必须符合select语句中规定的条件</p>
</li>
<li><p>ENCRYPTION：视图是加密的，使用后，无法修改视图，故创建视图时保存脚本，否则再也无法修改</p>
</li>
<li><p>SCHEMABINDING:和底层引用的表进行定义绑定。加上该选项，则视图引用的表不能随意更改架构（如数据类型）。修改：先DORP或ALTER 在底层表之上绑定的视图。常用于定义索引视图。</p>
</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> T_V</span><br><span class="line"><span class="keyword">AS</span> <span class="keyword">SELECT</span> TNO,TN,PROF <span class="keyword">FROM</span> <span class="keyword">WHERE</span> DEPT<span class="operator">=</span><span class="string">&#x27;XXX&#x27;</span></span><br></pre></td></tr></table></figure>

<h3 id="3、修改视图"><a href="#3、修改视图" class="headerlink" title="3、修改视图"></a>3、修改视图</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">VIEW</span> 视图名 [(视图列表)] <span class="keyword">AS</span> 子查询</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">VIEW</span> S_C (SN,CN,SCORE)</span><br><span class="line"><span class="keyword">AS</span> <span class="keyword">SELECT</span> SN,CN,SCORE <span class="keyword">FROM</span> S,C,SC <span class="keyword">WHERE</span> S.SNO<span class="operator">=</span>SC.SNO <span class="keyword">AND</span> SC.CNO<span class="operator">=</span>C.CNO</span><br></pre></td></tr></table></figure>

<h3 id="4、删除视图"><a href="#4、删除视图" class="headerlink" title="4、删除视图"></a>4、删除视图</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">VIEW</span> 视图名</span><br></pre></td></tr></table></figure>

<h3 id="5、查询视图"><a href="#5、查询视图" class="headerlink" title="5、查询视图"></a>5、查询视图</h3><p>       <strong>对视图的查询操作与对基本表的一致</strong> </p>
<h3 id="6、更新视图"><a href="#6、更新视图" class="headerlink" title="6、更新视图"></a>6、更新视图</h3><p>        <strong>视图是一张虚表，所以对视图的更新，最终转换成对基本表的更新。语法格式与基本表操作一样：添加、修改、删除。</strong> </p>
<h2 id="四、索引"><a href="#四、索引" class="headerlink" title="四、索引"></a>四、索引</h2><h3 id="1、概述-1"><a href="#1、概述-1" class="headerlink" title="1、概述"></a>1、概述</h3><p>        索引是一种可以加快检索的<strong>数据库结构</strong> ，包含从表或视图的一列或多列生成的键,以及映射带指定数据存储位置的指针。</p>
<p>        索引可以显著提高数据库查询和应用程序的性能。相当于书中的目录。</p>
<p>        创建后由DBMS自动管理维护，DBMS自动更新索引。</p>
<p>        基本表有无索引使用方法一直。</p>
<p>        要避免在一个表中创建大量索引，否则影响插入、删除、更新数据的性能，增加索引调整的成本，简单系统响应速度。</p>
<p><strong>索引分类：</strong></p>
<ul>
<li>聚集索引</li>
</ul>
<p>        物理存储顺序与索引键的逻辑顺序相同。</p>
<blockquote>
<p>一个主键自增的表就是聚集索引，id&#x3D;1（逻辑顺序）在第一条，id&#x3D;2在第二条，依次直到最后都为顺序排列,则查找第1000条只要在第一条地址（物理顺序）基础上加1000就是第1000条的地址，只需一次就能查询出来。</p>
</blockquote>
<p>       由于真正的物理存储只有一个，故 一个表只能有一个聚集索引</p>
<p>        创建或修改聚集索引肯会非常耗时，因需要根据索引键的逻辑值重新调整为了存储顺序</p>
<p>        创建PRIMARY KEY约束时，若不存在聚集索引且位置的唯一非聚集索引，则自动对PRIMARY KEY涉及的列创建唯一聚集索引。在添加UNIQUE约束时，默认将创建唯一非聚集索引。如果不存在该表的聚集索引，则可指定唯一聚集索引。</p>
<p><strong>使用情况：</strong> </p>
<p>        (1)包含有限数量的唯一值的列，如包含100个唯一状态吗的列</p>
<p>        (2)使用BETWEEN 、&gt;、&gt;&#x3D;、&lt;、&lt;&#x3D;这样的运算符返回某个范围值的查询</p>
<p>        (3)返回大型结果集的查询</p>
<ul>
<li>非聚集索引</li>
</ul>
<p>        物理存储顺序与逻辑存储顺序不一致。</p>
<blockquote>
<p>在一个表中有列num，其中数据无序（id&#x3D;1,num&#x3D;50;id&#x3D;2,num&#x3D;23;…）此时找到num&#x3D;100的人就要一条条遍历，n条就需要遍历n次，时间复杂度O(n),及其消耗性能。</p>
<p>为num添加非聚集索引后，会给num排序（内部使用结构B+树），排序后只需查询此目录，即可快速查找所需数据，不需要遍历</p>
</blockquote>
<p>        不重复数据越多，索引效率越高</p>
<p>        每个表可有多个非聚集索引，最多249个，不包括XML索引</p>
<p>        非聚集索引可以提升查询速度，也会降低插入和更新速度。在更新包含非聚集索引的数据时DMBS必须同步更新索引。需要频繁更新数据的表，不应该建立太多非聚集索引</p>
<p>        </p>
<ul>
<li>唯一索引</li>
</ul>
<p>        唯一索引能够保证索引键中不博阿寒重复的值，使表中每一行在某种方式上具有唯一性。</p>
<p>        聚集索引和非聚集索引都可以时唯一的。</p>
<p>        创建PRIMARY KEY 和UNIQUE约束时，自动创建为唯一索引，UNIQUE自动生成的唯一索引和手工创建的唯一索引本质上无任何区别，二者验证数据方式相同，查询优化器不会区分自动还是手动。</p>
<p>        若目的是实现数据完整性，则应为列创建UNIQUE或PRIMARY KEY 约束，这样能使索引目标更明确。</p>
<ul>
<li>视图索引</li>
</ul>
<p>        标准视图的结果不是永久地储存在数据库中。</p>
<p>        可通过对大量进行复杂处理的视图创建唯一聚集索引来提示性能。</p>
<p>        视图索引对应的视图称为索引视图</p>
<p>        对视图创建唯一索引后，结果直接储存在数据库中，类似于带有聚集索引的基本表。</p>
<p>     </p>
<ul>
<li>全文索引</li>
</ul>
<p>        全文搜索技术也称为倒排文档技术</p>
<p>        原理：先定义一个词库，然后统计文章中每个词条出现的频率和位置，即给文章创建目录，这样在查找某个词时能快速找到相应位置</p>
<p>        一个表只能有一个全文索引。</p>
<p>        创建条件：具有一个唯一且NOT NULL的列</p>
<ul>
<li>XML索引</li>
</ul>
<p>        XML索引对列中xml实列的所有标记、值和路径进行索引，从而提高查询性能。</p>
<p>        使用情况：</p>
<p>            对xml列进行查询在工作中很常见，若xml频繁修改，索引维护的开销将很高；</p>
<p>            xml列的值相对较大，而检索部分相对较小，即避免在运行时分析所有数据，实现高效查询处理。</p>
<h3 id="2、创建索引"><a href="#2、创建索引" class="headerlink" title="2、创建索引"></a>2、创建索引</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> [<span class="keyword">UNIQUE</span>] [CLUSTERED <span class="operator">|</span> NONCLUSTERED]</span><br><span class="line">INDEX index_name</span><br><span class="line"><span class="keyword">ON</span> table_or_view (<span class="keyword">column</span> [<span class="keyword">ASC</span> <span class="operator">|</span> <span class="keyword">DESC</span>][,...])</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">UNIQUE:创建唯一索引</span></span><br><span class="line"><span class="comment">CLUSTERED:创建聚集索引</span></span><br><span class="line"><span class="comment">NONCLUSTERED:创建非聚集索引</span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">UNIQUE</span> CLUSTERED INDEX course_index</span><br><span class="line"><span class="keyword">ON</span> course(cno <span class="keyword">DESC</span>)</span><br></pre></td></tr></table></figure>

<h3 id="3、修改索引"><a href="#3、修改索引" class="headerlink" title="3、修改索引"></a>3、修改索引</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> INDEX index_name </span><br><span class="line"><span class="keyword">ON</span> table_or_view</span><br><span class="line">&#123;</span><br><span class="line">    REBUILD </span><br><span class="line">    [<span class="keyword">PARTITION</span> <span class="operator">=</span> <span class="keyword">ALL</span>] [<span class="keyword">WITH</span> <span class="operator">&lt;</span>rebulid_index_option<span class="operator">&gt;</span> [,...n]]</span><br><span class="line">     <span class="operator">|</span>[<span class="keyword">PARTITION</span> <span class="operator">=</span> partition_number][<span class="keyword">WITH</span> (<span class="operator">&lt;</span>single_partition_rebulid_index_option<span class="operator">&gt;</span> [,...n])]</span><br><span class="line"><span class="operator">|</span> DISABLE </span><br><span class="line"><span class="operator">|</span> REORGANIZE [<span class="keyword">PARTITION</span> <span class="operator">=</span> partition_number] [<span class="keyword">WITH</span> (LOB_COMPACTION) <span class="operator">=</span> &#123;<span class="keyword">ON</span> <span class="operator">|</span> OFF&#125;] </span><br><span class="line"><span class="operator">|</span> <span class="keyword">SET</span> (<span class="operator">&lt;</span>set_index_option<span class="operator">&gt;</span> [,...n])</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">REBUILD:删除索引并重新生成索引</span></span><br><span class="line"><span class="comment">PARTITION:指定只重新生成或重新组织索引的一个分区</span></span><br><span class="line"><span class="comment">DISABLE:将索引标记为禁用，从而不能由数据库引擎使用</span></span><br><span class="line"><span class="comment">REORGANIZE:重新组织索引，不能为已禁用索引指定REORGANIZE</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<h3 id="4、删除索引"><a href="#4、删除索引" class="headerlink" title="4、删除索引"></a>4、删除索引</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DROP</span> INDEX table_or_view.index_name</span><br><span class="line"><span class="keyword">DROP</span> INDEX index_name <span class="keyword">ON</span> table_or_view</span><br></pre></td></tr></table></figure>

<h3 id="5、查看索引"><a href="#5、查看索引" class="headerlink" title="5、查看索引"></a>5、查看索引</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*存储过程查看*/</span></span><br><span class="line"><span class="keyword">EXEC</span> Sp_helpindex [<span class="variable">@object</span><span class="operator">=</span>] <span class="string">&#x27;table_name&#x27;</span></span><br><span class="line"><span class="comment">/*[@object=] &#x27;table_name&#x27;:指定当前数据库中的表名*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">EXEC</span> Sp_helpindex SC</span><br><span class="line"></span><br><span class="line"><span class="comment">/*更改索引名称*/</span></span><br><span class="line"><span class="keyword">EXEC</span> Sp_rename <span class="string">&#x27;表名.索引名&#x27;</span> <span class="string">&#x27;新索引名&#x27;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>赖总笔记</category>
      </categories>
      <tags>
        <tag>sql</tag>
        <tag>赖总笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>web编程</title>
    <url>/xuanyao/ad939a.html</url>
    <content><![CDATA[<h1 id="一、HTML"><a href="#一、HTML" class="headerlink" title="一、HTML"></a>一、HTML</h1><p><strong>1、基本架构</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>网页标题<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">。。。。。</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>2、<head>标签</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">meta:辅助标记信息，向浏览器传递信息</span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span>编码类型</span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;keyword&quot;</span> <span class="attr">content</span>=<span class="string">&quot;网页关键字&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;description&quot;</span> <span class="attr">content</span>=<span class="string">&quot;网页描述&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>3、文档结构标记</strong></p>
<table>
<thead>
<tr>
<th align="center">标记</th>
<th align="center">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center"><h1>-<h6></td>
<td align="center">1-6级标题</td>
</tr>
<tr>
<td align="center"><p></td>
<td align="center">段落</td>
</tr>
<tr>
<td align="center"><br></td>
<td align="center">换行</td>
</tr>
<tr>
<td align="center"><div></td>
<td align="center">盒子</td>
</tr>
<tr>
<td align="center"><span></td>
<td align="center">无语义，用于样式标记</td>
</tr>
<tr>
<td align="center"><hr></td>
<td align="center">分割线</td>
</tr>
<tr>
<td align="center"><b></td>
<td align="center">加粗</td>
</tr>
<tr>
<td align="center"><strong></td>
<td align="center">强调</td>
</tr>
<tr>
<td align="center"><em></td>
<td align="center">次级强调</td>
</tr>
<tr>
<td align="center"><i></td>
<td align="center">引用</td>
</tr>
<tr>
<td align="center"><abbr></td>
<td align="center">缩写</td>
</tr>
<tr>
<td align="center"><del></td>
<td align="center">删除的文本<img title="" src="file:///E:/Note/image/2022-11-29-17-16-14-image.png" alt="" width="50"></td>
</tr>
<tr>
<td align="center"><sub></td>
<td align="center">上标</td>
</tr>
<tr>
<td align="center"><sup></td>
<td align="center">下标</td>
</tr>
</tbody></table>
<p><strong>4、超级链接</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;链接&quot;</span> <span class="attr">title</span>=<span class="string">&quot;链接描述&quot;</span> <span class="attr">target</span>=<span class="string">&quot;目标&quot;</span>&gt;</span>链接文字<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">title:鼠标提示</span><br><span class="line">target:链接打开方式</span><br><span class="line">    _top:在整个浏览器窗口打开</span><br><span class="line">    _blank:在新窗口中打开</span><br><span class="line">    _self:默认，在当前打开</span><br><span class="line">    _parent:在父窗口中打开</span><br><span class="line">    framename:在指定框架打开，若不存在，则打开一个新窗口</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#top&quot;</span>&gt;</span>回到顶部<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;top&quot;</span>&gt;</span>顶部<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;123@qq.com&quot;</span>&gt;</span>发送邮件<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>5、绝对路径、相对路径</strong></p>
<p><strong>相对路径：</strong> 从<u>当前文件</u>开始的位置</p>
<p><strong>绝对路径：</strong> 从<u>站点根目录</u>开始的路径，以”&#x2F;“开头</p>
<img src="file:///E:/Note/image/2022-11-29-17-45-30-image.png" title="" alt="" width="155">

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#相对路径：</span></span><br><span class="line">. 代表当前目录</span><br><span class="line">.. 代表上一级目录</span><br><span class="line">./login/login.html</span><br><span class="line">../images/<span class="number">1.</span>png</span><br><span class="line"></span><br><span class="line"><span class="comment">#绝对路径：</span></span><br><span class="line">/images/<span class="number">1.</span>png</span><br></pre></td></tr></table></figure>

<p><strong>7、图片标记：img</strong> </p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;图片位置&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;图片描述&quot;</span> <span class="attr">width</span>=<span class="string">&quot;宽度&quot;</span> <span class="attr">height</span>=<span class="string">&quot;高度&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>8、列表</strong> </p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">#无序列表：ul</span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">#有序列表：ol</span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"></span><br><span class="line">#自定义列表</span><br><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dt</span>&gt;</span>列表项目1<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>列表项描述1<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dt</span>&gt;</span>列表项目2<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>列表项描述2<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>自定义列表</strong></p>
<p><img src="E:\Note\image\2022-11-30-10-32-29-image.png"></p>
<p><strong>9、表格</strong> </p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">caption</span>&gt;</span>表格标题<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">thead</span>&gt;</span>表头集合</span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span>行</span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span>表头单元格</span><br><span class="line">         <span class="tag">&lt;<span class="name">th</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tbody</span>&gt;</span>表格主体</span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>数据单元格</span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--- 水平合并 ---&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">td</span>&gt;</span>合并水平方向两个单元格</span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>3<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>4<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>5<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>6<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--- 垂直合并 ---&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">td</span>&gt;</span>合并垂直方向两个单元格</span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>3<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>4<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">td</span>&gt;</span>5<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">td</span>&gt;</span>6<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>10、转义字符</strong></p>
<p><code>&amp;nbsp</code> 空格        <code>&amp;quot</code> 引号        <code>&amp;amp</code> &amp;</p>
<p><strong>11、表单</strong> </p>
<ul>
<li>表单标记</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;php文件地址&quot;</span> <span class="attr">method</span>=<span class="string">&quot;get/post&quot;</span> <span class="attr">name</span>=<span class="string">&quot;表单名称&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>文本框</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;控件名称&quot;</span> <span class="attr">value</span>=<span class="string">&quot;文本框输入值&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;提示信息&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--- 相关属性:直接使用，无需赋值 ---&gt;</span></span><br><span class="line">disabled:规定为禁用字段，即默认默认使用value的值，无法更改</span><br><span class="line">readonly:只读字段 不能修改</span><br><span class="line">required:必填字段</span><br><span class="line">autofocus:自动获得焦点</span><br></pre></td></tr></table></figure>

<ul>
<li>密码框</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;pwd&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;密码&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>单选按钮：同一组单选按钮<code>name</code>值相同</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;male&quot;</span> <span class="attr">checked</span>&gt;</span>男</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex value=&quot;</span><span class="attr">female</span>&quot; <span class="attr">checked</span>&gt;</span>女</span><br></pre></td></tr></table></figure>

<ul>
<li>复选按钮</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;名称&quot;</span> <span class="attr">value</span>=<span class="string">&quot;控件值&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>多行文本框</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">&quot;控件名称&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;列数&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;行数&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span> </span><br></pre></td></tr></table></figure>

<ul>
<li>隐藏控件</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;控件名称&quot;</span> <span class="attr">value</span>=<span class="string">&quot;控件值&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>普通按钮</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;按钮文字&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span>&gt;</span>按钮文字<span class="tag">&lt;/<span class="name">button</span>&gt;</span> </span><br></pre></td></tr></table></figure>

<ul>
<li>发送&#x2F;确认按钮</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;发送&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>发送<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>重置按钮</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span> <span class="attr">value</span>=<span class="string">&quot;重置&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span>&gt;</span>重置<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="二、CSS"><a href="#二、CSS" class="headerlink" title="二、CSS"></a>二、CSS</h1><p><strong>1、使用方法：</strong></p>
<ul>
<li>行内样式</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;color:bule&quot;</span>&gt;</span>文字<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>页面内部样式</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">p</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>:red;</span></span><br><span class="line"><span class="language-css">          &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>链入外部样式</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;CSS文件url&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><mark>样式优先级（就近原则）：行内&gt;页面内部&gt;链接&gt;导入</mark> </p>
<p><strong>2、选择器</strong> </p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">-标签选择器：<span class="selector-tag">h1</span>&#123;&#125;                优先级：<span class="number">1</span></span><br><span class="line">-类选择器：<span class="selector-class">.classname</span>&#123;&#125;                <span class="number">10</span></span><br><span class="line">-id选择器：<span class="selector-id">#idname</span>&#123;&#125;                  <span class="number">100</span></span><br><span class="line">内联样式：style=&quot;&quot;                    <span class="number">1000</span></span><br><span class="line">-通用选择器：*&#123;&#125;</span><br><span class="line">-分组选择器：<span class="selector-tag">h1</span>,<span class="selector-tag">h2</span>,<span class="selector-tag">h3</span>&#123;&#125;</span><br><span class="line">-后代选择器：<span class="selector-id">#div1</span> <span class="selector-tag">p</span> <span class="selector-tag">a</span>&#123;&#125;//div1中<span class="selector-tag">p</span>内<span class="selector-tag">a</span>标签</span><br><span class="line">-子选择器：<span class="selector-tag">div</span>&gt;<span class="selector-tag">a</span>&#123;&#125;//<span class="selector-tag">div</span>下直系子元素<span class="selector-tag">a</span></span><br><span class="line">-属性选择器：<span class="selector-tag">a</span><span class="selector-attr">[title]</span>&#123;&#125;//带有title属性的<span class="selector-tag">a</span>标签</span><br></pre></td></tr></table></figure>

<p><strong>3、样式权重</strong> </p>
<table>
<thead>
<tr>
<th align="center">名称</th>
<th align="center">权重</th>
</tr>
</thead>
<tbody><tr>
<td align="center">!important</td>
<td align="center">1000以上</td>
</tr>
<tr>
<td align="center">内联</td>
<td align="center">1000</td>
</tr>
<tr>
<td align="center">id</td>
<td align="center">100</td>
</tr>
<tr>
<td align="center">类</td>
<td align="center">10</td>
</tr>
<tr>
<td align="center">元素</td>
<td align="center">1</td>
</tr>
</tbody></table>
<p><strong>4、常用伪类</strong> </p>
<p><strong>:focus</strong> 将样式添加到被选的元素中（<strong>点击后改变样式</strong>） </p>
<p><strong>:hover</strong> 当鼠标悬浮在元素上方时，向元素添加样式</p>
<p><strong>5、字体属性</strong></p>
<p><img src="E:\Note\image\2022-12-04-22-13-17-image.png"></p>
<p><strong>6、文本属性</strong></p>
<p><img src="E:\Note\image\2022-12-04-22-13-53-image.png"></p>
<p><strong>7、背景属性</strong></p>
<p><img src="E:\Note\image\2022-12-04-22-14-32-image.png"></p>
<p><strong>8、列表属性</strong> </p>
<p><img src="E:\Note\image\2022-12-04-22-15-12-image.png"></p>
<p><strong>9、边框属性</strong></p>
<p><img src="E:\Note\image\2022-12-04-22-15-56-image.png"></p>
<p><strong>10、浮动</strong> </p>
<ul>
<li><p>设置元素左浮动<code>left</code> 、右浮动<code>right</code> </p>
</li>
<li><p>浮动元素宽度之和要小于容器宽度</p>
</li>
<li><p>浮动后，元素脱离文档流，直至碰到相应边缘</p>
</li>
<li><p><strong>元素横向排列：</strong> 所有元素左浮动</p>
</li>
<li><p><strong>浮动清理(clear属性)：</strong> <code>left right both none</code> 表示那边不挨着浮动框，both全部清除；<strong>作用:使父元素包裹浮动元素</strong> </p>
</li>
<li><p><strong>缺点：</strong> 元素脱离文档流，父元素塌陷</p>
<ul>
<li><p>清理方法1：clear:both</p>
</li>
<li><p>清理方法2：父元素设置：overflow:hidden</p>
</li>
</ul>
</li>
<li><p><strong>特点：</strong> 具有方向性，很灵活，方便用于布局调整</p>
</li>
</ul>
<p><strong>11、相对&#x2F;绝对定位</strong> </p>
<p><code>定位属性：position</code> </p>
<ul>
<li><p>静态定位 static：position默认值，一般不设置，会按照正常文档流排列</p>
</li>
<li><p><strong>相对定位  (relative）：</strong> 元素框相对于<strong>原来的位置(定位原点)</strong> 偏移某个距离，元素仍保持其未到位的形状，原来所占空间保留</p>
<ul>
<li><p><strong>相对定位元素不脱离文档流</strong> ，占据的空间不会因相对定位元素位置改变而变化</p>
</li>
<li><p><strong>定位设置：</strong> <code>top bottom left right</code> 如：top:10px;</p>
</li>
<li><p><strong>z-index 属性：</strong> 用于调整元素Z轴属性，<strong>默认值0，元素该属性数值越大的在前面</strong></p>
</li>
</ul>
</li>
<li><p><strong>绝对定位  (absoulte):</strong> 当元素父对象及以上的position属性不是默认时，按该父对像定位；当不存在该对象时，按<html>标签定位，<strong>元素脱离文档流</strong> </p>
<ul>
<li><p><strong>定位原点：</strong> <html>元素左上角(除非上级元素有绝对或相对定位)</p>
</li>
<li><p><strong>绝对定位元素脱离文档流</strong> ，所占据空间释放</p>
</li>
<li><p><strong>z-index 属性：</strong> 用于调整元素Z轴属性，<strong>默认值0，元素该属性数值越大的在前面</strong> </p>
</li>
<li><p>常用于相对祖先元素的定位</p>
</li>
</ul>
</li>
<li><p><strong>relative与absoulte比较：</strong> 定位原点，是否脱离文档流</p>
</li>
<li><p>fixed定位：以<html>为定位对象，按照浏览器窗口进行定位，<strong>元素脱离文档流</strong></p>
</li>
</ul>
<p><strong>12、可见性</strong></p>
<p><img src="E:\Note\image\2022-12-06-00-47-48-image.png"></p>
<h1 id="三、Javascript"><a href="#三、Javascript" class="headerlink" title="三、Javascript"></a>三、Javascript</h1><p><strong>1、声明变量：</strong> <code>var a=undefined</code> </p>
<p><strong>2、数据类型：</strong></p>
<ul>
<li><p><code>undefined</code> 表示未声明，或变量初始化</p>
</li>
<li><p><code>null</code> 空，<strong>用于清空变量</strong> </p>
</li>
<li><p><strong>数字:</strong> </p>
<ul>
<li><p><code>isNaN()</code> 判断是否位非数值</p>
</li>
<li><p><code>parseInt()</code> 将字符串转化成整数，如‘10’ -&gt; 10,’10.5’ -&gt; 10, ‘10 years’ -&gt; 10, ‘h 10’ -&gt; NaN</p>
</li>
<li><p><code>parseFloat()</code> 将字符串转化为浮点数</p>
</li>
<li><p><code>number()</code> 将不同对象值转化为数字</p>
</li>
</ul>
</li>
<li><p><strong>运算符：</strong> </p>
<ul>
<li><p><code>+</code> 连接字符串,且数字与字符串相加成为新字符串</p>
</li>
<li><p><code>==</code> 等于，值相等为true</p>
</li>
<li><p><code>===</code> 全等于，值与类型都相同为true</p>
</li>
</ul>
</li>
</ul>
<p><strong>3、表单验证：</strong> 数据被送往服务器前验证</p>
<ul>
<li><strong>用户名不为空验证</strong></li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">check</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="title function_">with</span>(<span class="params"><span class="variable language_">document</span>.myform</span>)&#123;<span class="comment">//myform:表单名称（name属性）</span></span><br><span class="line">            <span class="keyword">if</span>(username.<span class="property">value</span>.<span class="property">length</span>==<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="title function_">alert</span>(<span class="string">&#x27;用户名不能为空&#x27;</span>);</span><br><span class="line">                username.<span class="title function_">focus</span>();<span class="comment">//获取焦点</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;    </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>必填项验证</strong></li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(username.<span class="property">value</span>.<span class="property">lenght</span>==<span class="number">0</span>)&#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&#x27;xxxxx&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>长度验证</strong></li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(username.<span class="property">value</span>.<span class="property">length</span>&gt;<span class="number">50</span>)&#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&#x27;xxxxx&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>全数字验证</strong></li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">isNumber</span>(<span class="params">str</span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> letters=<span class="string">&quot;1234567890&quot;</span>;</span><br><span class="line">    <span class="keyword">var</span> ch;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;str.<span class="property">length</span>;i++)&#123;</span><br><span class="line">        ch=str.<span class="title function_">charAt</span>(i);<span class="comment">//获取str中第i个位置的字符</span></span><br><span class="line">        <span class="keyword">if</span>(letters.<span class="title function_">indexOf</span>(ch)&lt;<span class="number">0</span>)<span class="comment">//判断ch在letters中首次出现的位置，未找到返回-1</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>email验证</strong></li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">checkemail</span>(<span class="params">email</span>)&#123;</span><br><span class="line">    apos=email.<span class="title function_">indexOf</span>(<span class="string">&quot;@&quot;</span>);</span><br><span class="line">    dotops=email.<span class="title function_">lastIndexOf</span>(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(apos&lt;<span class="number">1</span>||dotpos-apos&lt;<span class="number">2</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="四、cookie"><a href="#四、cookie" class="headerlink" title="四、cookie"></a>四、cookie</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//创建cookie</span></span><br><span class="line"><span class="title function_ invoke__">setcookie</span>(<span class="string">&#x27;cookie名&#x27;</span>,<span class="string">&#x27;cookie值&#x27;</span>);<span class="comment">//会话行cookie，浏览器关闭即删除</span></span><br><span class="line"><span class="title function_ invoke__">setcookie</span>(<span class="string">&#x27;cookie名&#x27;</span>,<span class="string">&#x27;cookie值&#x27;</span>，<span class="title function_ invoke__">time</span>()+<span class="number">60</span>);<span class="comment">//长效型cookie,存活时间:60s</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//修改cookie</span></span><br><span class="line"><span class="title function_ invoke__">setcookie</span>(<span class="string">&#x27;cookie_name&#x27;</span>,<span class="string">&#x27;cookie_new_value&#x27;</span>,<span class="title function_ invoke__">time</span>()+<span class="number">24</span>*<span class="number">60</span>*<span class="number">60</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//删除cookie</span></span><br><span class="line"><span class="title function_ invoke__">setcookie</span>(<span class="string">&#x27;cookie_name&#x27;</span>,<span class="string">&#x27;&#x27;</span>,time-<span class="number">3600</span>);<span class="comment">//将cookie设置过期</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//读取cookie</span></span><br><span class="line"><span class="title function_ invoke__">forech</span> (<span class="variable">$_COOKIE</span> <span class="keyword">as</span> &amp;key =&gt; &amp;value)&#123;</span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="variable">$value</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="五、PHP"><a href="#五、PHP" class="headerlink" title="五、PHP"></a>五、PHP</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;content-type:text/html;charset=utf-8&#x27;</span>);</span><br></pre></td></tr></table></figure>

<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">    <span class="variable">$dsn</span>=<span class="string">&#x27;mysql:host=localhost;dbname=test&#x27;</span>;</span><br><span class="line">    <span class="variable">$pdo</span>=<span class="keyword">new</span> <span class="title function_ invoke__">PDO</span>(<span class="variable">$dsn</span>, <span class="string">&#x27;root&#x27;</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">catch</span>( PDOException <span class="variable">$e</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;error:&quot;</span>. <span class="variable">$e</span>-&gt;<span class="title function_ invoke__">getMessage</span>() . <span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line">    <span class="keyword">exit</span>(</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//查询</span></span><br><span class="line"><span class="variable">$pdo</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//insert、delete、update</span></span><br><span class="line"><span class="variable">$pdo</span>-&gt;<span class="title function_ invoke__">exec</span>(<span class="variable">$sql</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//查询结果输出1</span></span><br><span class="line"><span class="variable">$rs</span>=<span class="variable">$pdo</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>);</span><br><span class="line"><span class="variable">$result</span>=<span class="variable">$rs</span>-&gt;<span class="title function_ invoke__">fetchAll</span>(PDO::<span class="variable constant_">FETCH_ASSOC</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$result</span>)&#123;<span class="comment">//结果不为空</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$result</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;用户名：&#x27;</span>.<span class="variable">$value</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//查询结果输出2</span></span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$pdo</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>) <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;用户名：&#x27;</span>.<span class="variable">$value</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">require</span>(<span class="string">&#x27;check_login.php&#x27;</span>);</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>赖总笔记</category>
      </categories>
      <tags>
        <tag>赖总笔记</tag>
        <tag>web</tag>
      </tags>
  </entry>
  <entry>
    <title>离散数学</title>
    <url>/xuanyao/3fb56f9d.html</url>
    <content><![CDATA[<ol>
<li><p><strong>重言式：</strong> 给定一个命题公式，若无论对分量进行怎样的指派，其对应真值用为T。</p>
</li>
<li><p><strong>蕴含式：</strong> 当且仅当$P\rightarrow Q$ 是一个重言式时，称其为蕴含式。</p>
</li>
<li><p><strong>主析取范式：</strong> 在真值表中，一个公式的真值为T的指派所对应小项的析取。</p>
</li>
<li><p><strong>主合取范式：</strong> 在真值表中，一个公式的真值为F的指派所对应大项的合取。</p>
<p>对于给定的命题公式，如果有一个等价公式，它仅由大项的合取所组成，则该等价公式陈为原式的主合取范式。</p>
</li>
<li><table>
<thead>
<tr>
<th align="center">联结词</th>
<th align="center">表示</th>
<th align="left">注释</th>
</tr>
</thead>
<tbody><tr>
<td align="center">合取</td>
<td align="center">$\bigwedge$</td>
<td align="left">P、Q同为T时，为T</td>
</tr>
<tr>
<td align="center">析取</td>
<td align="center">$\bigvee$</td>
<td align="left">P、Q有一个为T，则为T</td>
</tr>
<tr>
<td align="center">条件</td>
<td align="center">$\rightarrow$(若P则Q)</td>
<td align="left">当且仅当，前件为T，后件为F时，为F</td>
</tr>
<tr>
<td align="center">双条件</td>
<td align="center">$\leftrightarrows$</td>
<td align="left">P、Q真值相同时为T，相当于等号</td>
</tr>
<tr>
<td align="center">优先级</td>
<td align="center">$\lnot、\bigwedge、\bigvee、\rightarrow、\leftrightarrows$</td>
<td align="left"></td>
</tr>
</tbody></table>
</li>
<li><p><strong>等价公式：</strong> </p>
<p><img src="E:\Note\image\2023-02-22-00-06-47-image.png"></p>
</li>
<li><p><strong>谓词：</strong> 用以刻划客体的性质或关系。</p>
</li>
<li><p><strong>简单命题函数：</strong> 由一个谓词和一些客体变元组成的表达式。</p>
<p><strong>复杂命题函数：</strong> 由一个或n个简单命题函数以逻辑联结词组合而成的表达式。</p>
</li>
<li><p><strong>个体域：</strong> 在命题函数中客体变元的论述范围。</p>
</li>
<li><p><strong>$\forall(全称量词)$：</strong> 表达 对所有的、每一个、对任一个。</p>
<p><strong>$\exists(存在量词)$：</strong> 表达 存在一些、至少一个、对于一些。</p>
</li>
<li><p><strong>量词与$\lnot$的关系：</strong> 将量词前面的$\lnot$移到量词后面时，存在量词改为全称量词，全称量词改为存在量词，反之，如将量词后面的$\lnot$移到量词前面去时，也要作相应改变。</p>
</li>
<li><p><strong>集合：</strong> 把具有共同性质的一些东西，汇聚成的一个集体。</p>
</li>
<li><p><strong>枚举法：</strong> $A&#x3D;\begin{Bmatrix}a,b,c,d \end{Bmatrix}$</p>
<p><strong>叙述法：</strong> $B&#x3D;\begin{Bmatrix}x|x\in z,x&lt;10 \end{Bmatrix}$</p>
<p><strong>文氏图法：</strong> 韦恩图</p>
</li>
<li><p><strong>交集：</strong> 设任意两个集合A和B，由集合A和集合B的所有共同元素组成的集合S，称为A和B的交集，记作$A\bigcap B$</p>
</li>
<li><p><strong>并集：</strong> 设任意两个集合A和B，所有属于A或属于B的元素组成的集合S，称为A和B的并集，记作$A\bigcup B$ </p>
</li>
<li><p><strong>补集：</strong> 设A，B为任意两个集合，所有属于A而不属于B的一切元素组成的集合S为B对A的补集，或相对补，记作$A-B$</p>
</li>
<li><p><strong>绝对补：</strong> 设E为全集，对任一集合A关于E的补$E-A$，称为集合A的绝对补，记作~A</p>
</li>
<li><p><strong>对称差：</strong> 设A，B为任意两个集合，A和B的对称差为集合S，其元素或属于A，或属于B ，但不能同时既属于A又属于B，记作$A\bigoplus B$</p>
</li>
<li><p><strong>笛卡尔积：</strong> 令A和B是任意两个集合，若序偶的第一个成员是A的元素，第二个成员是B的元素，所有这样的序偶集合，称为集合A和B的笛卡尔乘积或直积，记作$A\times B&#x3D;\begin{Bmatrix}&lt;a,1&gt;,&lt;a,2&gt;,&lt;a,3&gt;,&lt;b,1&gt;,&lt;b,2&gt;,&lt;b,3&gt; \end{Bmatrix}$</p>
</li>
</ol>
]]></content>
      <categories>
        <category>赖总笔记</category>
      </categories>
      <tags>
        <tag>赖总笔记</tag>
        <tag>离散数学</tag>
      </tags>
  </entry>
  <entry>
    <title>数据库</title>
    <url>/xuanyao/14ea6df7.html</url>
    <content><![CDATA[<h1 id="一、关系数据库"><a href="#一、关系数据库" class="headerlink" title="一、关系数据库"></a>一、关系数据库</h1><h2 id="1、相关概念"><a href="#1、相关概念" class="headerlink" title="1、相关概念"></a>1、相关概念</h2><p><strong>（1）域：</strong> 一组具有相同数据类型的值的集合</p>
<p><strong>（2）笛卡尔积：</strong> $D_1\times D_2\times\cdots\times D_n &#x3D;\begin{Bmatrix} (d_1,d,_2,\cdots,d_n)|d_i\in D_i,i&#x3D;1,2,3\cdots,n \end{Bmatrix} $</p>
<p><strong>（3）关系：</strong> 笛卡尔积的任一子集称为定义在$D_1\times D_2\times\cdots\times D_n$ 上的<strong>n</strong>元关系；<strong>R</strong>: 关系名    <strong>n</strong>:关系的目或度，即：<strong>该关系中属性个数</strong>(表格列数) </p>
<p> <strong>一个表就是一种关系,关系是一种规范化了的二维表中行的集合</strong> </p>
<ul>
<li><p>表框架：由域构成，一列就是一个域</p>
</li>
<li><p>元组：每一行就是一个元组</p>
</li>
<li><p>属性：区别不同的列</p>
</li>
<li><p>同类关系：具有相同关系框架</p>
</li>
<li><p>关系组成</p>
<ul>
<li><p>关系头：由属性名的集合组成，是关系数据结构的描述，固定不变</p>
</li>
<li><p>关系体：关系结构中的内容或数据，随元组的修改、插入、删除变化</p>
</li>
</ul>
</li>
</ul>
<p><strong>（4）关系性质</strong></p>
<ol>
<li><p>列是同质的，即:列分量来自同一域，类型相同</p>
</li>
<li><p>不同属性可来自同一域，但不同属性名字必不同</p>
</li>
<li><p>列的顺序可随意交换</p>
</li>
<li><p>元组的顺序可交换</p>
</li>
<li><p>不能出现相同元组</p>
</li>
<li><p>每一分量必须是不可分的数据项，即：有确定的值，不是集合</p>
</li>
</ol>
<p><strong>（5）关系模式：</strong> 对关系的描述，关系在某一时刻的状态或内容，是关系的框架，由关系数据结构、关系操作、概念性完整性约束组成</p>
<p>                       $关系名(属性1，属性2，属性3，\cdots)$</p>
<p><strong>（6）关系数据库：</strong> 在一个给定的应用领域中，所有实体以及实体之间联系所对应的关系的集合</p>
<ul>
<li><p>关系数据库的型：关系数据库模式，对关系数据库的描述</p>
</li>
<li><p>关系数据库的值：关系模式在某一时刻对应的关系的集合，即：关系数据库模式对应对应的数据库中当前的值</p>
</li>
</ul>
<p><strong>（7）关系的码</strong> </p>
<ol>
<li><p><strong>候选码：</strong> 能唯一标识关系中元组的一个属性或属性集（UNIQUE）</p>
<ul>
<li><p>唯一性：关系中任意两个元组间候选码的值不同</p>
</li>
<li><p>最小性：组成关系键的属性集中，任一属性都不能从候选码中删除</p>
</li>
</ul>
</li>
<li><p><strong>主码：</strong> 若关系中有多个候选码，从中选一个作为查询、插入、删除元组的操作变量为主码；一般选属性数量最少的组合作为主码</p>
<ul>
<li><p>主属性：主码中的属性</p>
</li>
<li><p>非主属性：不在任何<strong>候选码中的属性</strong> </p>
</li>
<li><p>全码：所有属性的组合是关系的候选码，即：所有属性的集合构成了候选码</p>
</li>
</ul>
</li>
<li><p><strong>外码(外部关系键)：</strong> 若关系A中的一个或一组属性X不是A的主码，而是关系B的主码，则X为A的外码，被参照关系的主码和参照关系的主码必须定义在同一域上</p>
</li>
</ol>
<p><strong>（8）关系的完整性：</strong> 关系的正确性、相容性和有效性；关系模型中数据及其联系的所有制约和依存规则，用以限定数据库的状态及状态变化，从而保证数据的正确、相容和有效</p>
<ul>
<li><p>实体完整性：主码的值不能为空或部分空；为了唯一标识某个实体，用于区分实体，达到现实世界中的实体可区分</p>
</li>
<li><p>参照完整性：关系A中的外码X域关系B中的主码相符，则X的每个值等于B中主码的某个值或为空值</p>
</li>
<li><p>用户自定义完整性：针对某一具体关系数据库的约束条件</p>
</li>
</ul>
<h2 id="2、关系代数"><a href="#2、关系代数" class="headerlink" title="2、关系代数"></a>2、关系代数</h2><p><strong>（1）关系操作：</strong> <strong>查询操作和更新操作(插入、删除、修改)；操作对象和结果都为集合</strong> </p>
<p><strong>（2）关系代数运算</strong></p>
<ol>
<li><p>运算三要素：运算对象那个、运算符、运算结果</p>
</li>
<li><p><strong>运算符</strong></p>
<table>
<thead>
<tr>
<th align="center">分类</th>
<th align="left">运算符</th>
</tr>
</thead>
<tbody><tr>
<td align="center">集合运算符</td>
<td align="left">$并:\bigcup\quad交:\bigcap\quad差:-\quad广义笛卡尔积:\times$</td>
</tr>
<tr>
<td align="center">专门关系运算符</td>
<td align="left">$选取:\sigma\quad投影:\prod\quad\theta连接:⋈_{X\theta Y}\quad自然连接:⋈\quad除:\div$</td>
</tr>
<tr>
<td align="center">算术比较运算符</td>
<td align="left">$\gt\quad\lt\quad\geq\quad\leq\quad&#x3D;\quad\neq$</td>
</tr>
<tr>
<td align="center">逻辑运算符</td>
<td align="left">$与：\bigwedge\quad或：\bigvee\quad非：\lnot$</td>
</tr>
</tbody></table>
</li>
<li><p><strong>传统集合运算</strong></p>
<p><strong>满足条件（除笛卡尔积）：</strong> 具有相同的列数；A中第i个属性和B中第i个属性必须来自同一域（列同质）</p>
<ul>
<li><p>并：A和B所有元组合并，删去重复元组，组成一个新关系</p>
</li>
<li><p>差：R—S由属于R而不属于S的所有元组组成，即：删去R中与S相同的元组</p>
</li>
<li><p>交：既属于R又属于S的元组组成</p>
</li>
<li><p>广义笛卡尔积：R中每个元组与S中每个元组连接成一个（m+n列）元组，组成新关系，mxn个元组</p>
</li>
</ul>
</li>
<li><p>专门关系运算符</p>
<ul>
<li><p><strong>选取：</strong> 根据一定条件从关系R中选择若干元组，组成新关系</p>
<p>$\sigma_{条件}(关系)\Longleftrightarrow\sigma_{条件}(表名)$</p>
</li>
<li><p><strong>投影：</strong> 从关系R中选出若干列组成新关系</p>
<p>$\prod_{(属性1，属性2，\cdots)}(关系)$</p>
</li>
<li><p><strong>$\theta连接$：</strong> 从两个关系的笛卡尔积中选出满足条件的元组，组成新关系</p>
<p>$\theta$ 是比较运算符：</p>
<ul>
<li><p>“&#x3D;”，<strong>等值连接</strong> ；<strong>自然连接：</strong> <strong>在等值连接的基础上</strong>，当连接属性X和Y具有相同属性组时，把结果中<strong>重复的属性列</strong>去掉</p>
<p><strong>等值连接和自然连接的区别：</strong> </p>
<ol>
<li><p>等值连接中不要求相等属性值的属性名，自然连接要求相同属性值的属性名相同：只有同名属性才能进行自然连接</p>
</li>
<li><p>在连接结果中，等值连接不去除重复属性，而自然连接去除重复属性</p>
</li>
</ol>
</li>
<li><p>“&lt;”，小于连接</p>
</li>
<li><p>“&gt;”，大于连接</p>
</li>
</ul>
</li>
<li><p><strong>除法：</strong>  关系R(X,Y)、关系S(Y,Z)(X,Y,Z为属性集合，R中Y于S中Y可以不同名，但要来自同一域)；</p>
<p><strong>$R\div Y&#x3D;P(X)$:</strong> <strong>X的像集包含关系S中的Y的所有值的X所组成商</strong>   </p>
<p><strong>像集：</strong> R中X的每一组取值所对应的Y的组合的集合</p>
<p><img src="E:\Note\image\2022-11-13-19-38-41-image.png"></p>
<p>R：</p>
<p>(a1,b1)的像集：{(c1,d1),(c2,d2),(c3,d3)}</p>
<p>(a2,b2)的像集：{(c2,d2)}</p>
<p>(a3,b3)的像集：{(c1,d1),(c2,d2)}</p>
<p>S中Y为：{(c1,d1),(c2,d2)}</p>
<p>故：包含Y的像集对应X有（a1,b1）、(a2,b2),</p>
<p>$R\div Y&#x3D;$</p>
<p><img src="E:\Note\image\2022-11-13-19-38-26-image.png"></p>
<p><strong>对于查询来说： 除法就是去除被除集合中不包含除数的数据</strong></p>
</li>
</ul>
</li>
</ol>
<h1 id="二、E-R图"><a href="#二、E-R图" class="headerlink" title="二、E-R图"></a>二、E-R图</h1><ol>
<li><p>一个实体转化为一个关系模式，属性：实体属性；主码：实体的码；</p>
</li>
<li><p>联系转实体</p>
<table>
<thead>
<tr>
<th>联系</th>
<th>关系模式</th>
</tr>
</thead>
<tbody><tr>
<td>1：1</td>
<td>与一端实体合并，实体关系增加联系属性，以及另一端主码</td>
</tr>
<tr>
<td>1：n</td>
<td>合并到n端，n端增加联系属性，以及1端主码</td>
</tr>
<tr>
<td>n：m</td>
<td>主码：相连各实体的主码，属性：联系自身属性</td>
</tr>
</tbody></table>
</li>
<li><p><strong><mark>主码需用下划线标出</mark></strong></p>
</li>
</ol>
<h1 id="三、概念"><a href="#三、概念" class="headerlink" title="三、概念"></a>三、概念</h1><ol>
<li><p><strong>信息：</strong> 人脑对现实世界事物的存在方式、运动状态以及事物之间联系的抽象反应。</p>
</li>
<li><p><strong>信息的特征：</strong> </p>
<ul>
<li><p>信息源于物质和能量</p>
</li>
<li><p>信息可以感知</p>
</li>
<li><p>信息可存储、加工、传递和再生</p>
</li>
</ul>
</li>
<li><p><strong>数据：</strong> 用来记录信息的可识别的符号组合，是信息的具体表现形式。</p>
</li>
<li><p><strong>数与信息的联系：</strong> 数据是信息的符号表示，信息是对数据的语义解释；数据表示了信息，二信息只有通过数据形式表示出来才能被人们理解和接受。</p>
</li>
<li><p><strong>数据库：</strong> 存储在计算机内、有组织的、可共享的数据和数据对象的集合，按一定数据模型组织、描述并长期存储，能以安全和可靠的方法进行数据的检索和存储。</p>
</li>
<li><p><strong>数据库特点：</strong> </p>
<ul>
<li><p>集成性：将特定应用环境中的各种应用相关的数据及其数据之间的联系全部集中地按照一定结构形式存储；</p>
</li>
<li><p>共享性：数据库中的数据可为多个不同的用户所共享</p>
</li>
</ul>
</li>
<li><p><strong>三级模式结构：</strong></p>
<ul>
<li><p><strong>外模式：</strong> 数据库用户能看到并允许使用的那部分数据的逻辑结构和特征的描述，是与某一应用有关数据的逻辑表示，是数据库用户的数据视图</p>
</li>
<li><p><strong>模式：</strong> 数据库中全体数据的逻辑结构和特征的描述</p>
</li>
<li><p><strong>内模式：</strong> 对数据库存储结构的描述，是数据在数据库内部的表示方式</p>
</li>
</ul>
</li>
<li><p><strong>数据库系统的三级模式与二级映像的优点：</strong></p>
<ul>
<li><p>保证数据的独立性</p>
</li>
<li><p>简化了用户接口</p>
</li>
<li><p>有利于数据共享</p>
</li>
<li><p>有利于数据的安全保密</p>
</li>
</ul>
</li>
<li><p><strong>数据库管理系统（DBMS）：</strong> 数控系统的核心组成部分，把抽象逻辑数据处理转换成计算机中具体的物理数据的处理软件</p>
</li>
<li><p><strong>DBMS主要功能：</strong> 定义功能、数据操纵功能、数据库运行管理功能、数据库的建立和维护功能、数据通信接口及数据组织、存储和管理功能。</p>
</li>
<li><p><strong>DBMS的组成：</strong> 语言编译处理程序、系统运行控制程序，系统建立、维护程序，数据字典</p>
</li>
<li><p><strong>数据库安全性：</strong> 保护数据库以防止非法使用所造成的数据泄露、更改或破坏</p>
</li>
<li><p><strong>主键：</strong> 用于定义基本表的主键，起唯一标识作用，<strong>不能为NULL，也不能重复</strong> ，以此保证实体完整性</p>
</li>
<li><p><strong>主键与唯一键的区别：</strong></p>
<ul>
<li><p>一个基本表中只能有一个PRIMARY KEY ,但可以有多个UNIQUE</p>
</li>
<li><p>被<strong>PRIMARY KEY</strong>约束的列或列组合都<strong>不能为NULL</strong>，UNIQUE允许为NULL</p>
</li>
<li><p><strong>不能为同一列或列组，同时定义PRIMARY KEY 和 UNIQUE约束</strong></p>
</li>
</ul>
</li>
<li><p><strong>唯一键：</strong> 约束一列或多列<strong>取值必须唯一</strong>，自动创建唯一索引，保证唯一键唯一性</p>
</li>
<li><p><strong>索引：</strong> 一种可以加快检索的<strong>数据库结构</strong> ，包含从表或视图的一列或多列生成的键,以及映射带指定数据存储位置的指针。</p>
</li>
<li><p><strong>视图：</strong> 一个<strong>虚拟表</strong> ，内容由查询定义。包含一系列带有名称的列和行数据。<strong>视图在数据库中不是以数据值存储集形式存在</strong>（除索引视图外）。</p>
</li>
<li><p><strong>视图作用：</strong> 类似于筛选，定义视图的筛选可以来自于当前或其他数据库的一个或多个表，或视图；集中、简化和自定义每个用户对数据库的不同认识；提供线后兼容接口来模拟曾经存在但在其架构已经更改的基础表。</p>
</li>
<li><p><strong>ALTER限制：</strong> </p>
<ul>
<li><p>不能改变列名</p>
</li>
<li><p>不能将含有NULL值的列修改为NOT NULL约束</p>
</li>
<li><p>若列中已有数据，则不能减少该列的宽度，不能修改数据其类型（当数据长度小于宽度时，nvarchar除外）</p>
</li>
<li><p>只能修改NULL&#x2F;NOT NULL约束，其他类型约束在修改前先删除约束，再重新添加修改过的约束</p>
</li>
</ul>
</li>
</ol>
<h1 id="四、SQL语句"><a href="#四、SQL语句" class="headerlink" title="四、SQL语句"></a>四、SQL语句</h1><h2 id="1、数据库"><a href="#1、数据库" class="headerlink" title="1、数据库"></a>1、数据库</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*创建数据库*/</span></span><br><span class="line"><span class="keyword">CREATE</span> DATABASE 数据库名称</span><br><span class="line"><span class="keyword">ON</span></span><br><span class="line">(</span><br><span class="line">    NAME<span class="operator">=</span>数据文件逻辑名称,</span><br><span class="line">    FILENAME<span class="operator">=</span><span class="string">&#x27;PATH&#x27;</span>,</span><br><span class="line">    SIZE<span class="operator">=</span>数据文件初始大小,</span><br><span class="line">    MAXSIZE<span class="operator">=</span>数据文件最大容量,<span class="comment">/*UNLIMITED:无限制增长*/</span></span><br><span class="line">    FILEGROWTH<span class="operator">=</span>数据文件自动增长容量</span><br><span class="line">)</span><br><span class="line">LOG <span class="keyword">ON</span></span><br><span class="line">(</span><br><span class="line">    NAME<span class="operator">=</span>日志逻辑名称,</span><br><span class="line">    FILENAME<span class="operator">=</span>PATH,</span><br><span class="line">    SIZE<span class="operator">=</span>日志文件初始大小,</span><br><span class="line">    MAXSIZE<span class="operator">=</span>日志文件最大容量,</span><br><span class="line">    FILEGROWTH<span class="operator">=</span>日志自动增长容量</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*删除数据库*/</span></span><br><span class="line"><span class="keyword">DROP</span> DATABASE 数据库名称[,...n]</span><br></pre></td></tr></table></figure>

<h2 id="2、数据表"><a href="#2、数据表" class="headerlink" title="2、数据表"></a>2、数据表</h2><ol>
<li><p><strong>创建表</strong></p>
<table>
<thead>
<tr>
<th align="center">数据类型</th>
<th align="center">注释</th>
</tr>
</thead>
<tbody><tr>
<td align="center">int</td>
<td align="center">4字节</td>
</tr>
<tr>
<td align="center"><strong>numeric</strong></td>
<td align="center">精确数值型：<strong>numeric(数据长度，保留小数位数)</strong></td>
</tr>
<tr>
<td align="center">decimal</td>
<td align="center">同numeric</td>
</tr>
<tr>
<td align="center">float</td>
<td align="center">近似数值型：浮点型 8字节</td>
</tr>
<tr>
<td align="center">real</td>
<td align="center">近似数值型：4字节</td>
</tr>
<tr>
<td align="center"><strong>datetime</strong></td>
<td align="center">日期时间型 8字节</td>
</tr>
<tr>
<td align="center">char</td>
<td align="center">尾端空白字符保留</td>
</tr>
<tr>
<td align="center">varchar</td>
<td align="center">尾端空白字符删除</td>
</tr>
<tr>
<td align="center"><strong>nchar</strong></td>
<td align="center">Unicode 一个字符占两个字节，尾端空白字符保留</td>
</tr>
<tr>
<td align="center"><strong>nvarchar</strong></td>
<td align="center">Unicode字符型，存储中文字符，尾端空白字符删除</td>
</tr>
<tr>
<td align="center">binary</td>
<td align="center">二进制字符串型，存储时增加4字节，尾端空白字符保留</td>
</tr>
</tbody></table>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span></span><br><span class="line">(</span><br><span class="line">    <span class="operator">&lt;</span>属性名<span class="operator">&gt;</span> <span class="operator">&lt;</span>类型<span class="operator">&gt;</span> [约束],</span><br><span class="line">    ...</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*约束*/</span></span><br><span class="line">主键：</span><br><span class="line">sno <span class="type">varchar</span>(<span class="number">6</span>) <span class="keyword">CONSTRAINT</span> SPRIM <span class="keyword">PRIMARY</span> KEY<span class="operator">/</span><span class="operator">/</span>约束列</span><br><span class="line"><span class="keyword">CONSTRAINT</span> S_C_PRIM <span class="keyword">PRIMARY</span> KEY(sno,cno)<span class="operator">/</span><span class="operator">/</span>约束列组</span><br></pre></td></tr></table></figure>

<p>UNIQUE：<br>CONSTRAINT &lt;约束名&gt; UNIQUE(&lt;列名&gt;[,…])<br>sno varchar(6) CONSTRAINT S_UN UNIQUE&#x2F;&#x2F;约束列<br>CONSTRAINT S_C_UN UNIQUE(SNO,CNO)&#x2F;&#x2F;约束列组</p>
<p>外部键：<br>SNO varchar(6) CONSTRAINT S_FORE FOREIGN KEY REFERENCES S(SNO)<br>&#x2F;<em>FOREGIN REFERENCES KEY 主表名(关联字段)</em>&#x2F;</p>
<p>&#x2F;<em>建表末尾添加约束</em>&#x2F;<br>FOREIGN KEY(关联字段) REFERENCES &lt;主表名&gt;(被关联字段)</p>
<p>&#x2F;<em>ALTER增加外部键约束</em>&#x2F;<br>CONSTRAINT &lt;约束名&gt; FOREIGN KEY(从表关联字段) REFERENCES &lt;主表&gt;(被关联字段)</p>
<p>-主表被关联字段必须是主键或唯一键</p>
<p>CHECK:<br>CONSTRAINT &lt;约束名&gt; CHECK(条件)</p>
<p>&#x2F;<em>性别约束</em>&#x2F;<br>sex VARCHAR(5) CONSTRAINT S_CHK CHECK(sex&#x3D;’男’ or sex&#x3D;’女’)<br>&#x2F;<em>邮箱约束</em>&#x2F;<br>email varchar(30) CONSTRAINT e_chk CHECK(email like ‘%@%’)<br>&#x2F;<em>范围约束</em>&#x2F;<br>age int CONSTRAINT a_chk CHECK(age between 18 and 30)</p>
<p>default:<br>sex nchar(2) default ‘男’</p>
<p>自增：<br>sno int constraint s_prim primary key auto_increment</p>
</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2. **查询**</span><br><span class="line"></span><br><span class="line">```sql</span><br><span class="line">连接查询：</span><br><span class="line">SELECT ... </span><br><span class="line">FROM 表名1</span><br><span class="line">[INNER |LEFT OUTER|RIGHT OUTER|FULL OUTER |CROSS] JOIN 表名2</span><br><span class="line">ON 条件</span><br><span class="line"></span><br><span class="line">分组查询：</span><br><span class="line">SELECT TNO,COUNT(*) AS TOTAL</span><br><span class="line">FROM TC</span><br><span class="line">GROUP BY TNO /*按TNO 进行分组，具有相同TNO的为一组*/</span><br><span class="line">HAVING TOTAL&gt;=2 /*去掉不满足条件的元组*/</span><br><span class="line">/*</span><br><span class="line">WHERE与HAVING子句的根本区别在于作用对象不同，</span><br><span class="line">WHERE作用于基本表或视图；HAVING作用于组，</span><br><span class="line">必须用在GROUP BY 子句之后，但GROUP BY 子句可以没有HAVING子句。</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">排序：</span><br><span class="line">...（末尾）</span><br><span class="line">ORDER BY 属性名 DESC | ASC</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">EXISTS:</span><br><span class="line">SELECT TN FROM T</span><br><span class="line">WHERE EXISTS (SELECT * FROM TC WHERE TNO=T.TNO AND CNO=&#x27;C5&#x27;)</span><br><span class="line">/*</span><br><span class="line">EXISTS 时表示存在的量词，判断查询子句是否有记录，</span><br><span class="line">带有EXISTS的子查询不返回合任何实际数据，</span><br><span class="line">只返回逻辑 ‘真’ 和 ‘假’。</span><br><span class="line">子查询结果集合非空时，外层WHERE语句 返回真。</span><br><span class="line">NOT EXISTS与此相反，返回假</span><br><span class="line">*/</span><br></pre></td></tr></table></figure>

<ol start="3">
<li><p><strong>修改</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">增加列或约束：</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名</span><br><span class="line"><span class="keyword">ADD</span></span><br><span class="line">定义列 <span class="operator">|</span> 完整性约束</span><br></pre></td></tr></table></figure>

<p>修改列：<br>ALTER TABLE 表名<br>ALTER COLUMN<br>列名 数据类型 [NULL | NOT NULL]</p>
<p>删除约束：<br>ALTER TABLE 表名<br>DROP CONSTRAINT 约束名</p>
<p>修改数据：<br>UPDATE 表名<br>SET 列名 &#x3D; 表达式,[列名&#x3D;表达式]<br>[WHERE 条件]<br>&#x2F;*<br>SET:给出要修改的列及其修改的值<br>WHERE:指定修改记录需要满足的体哦阿健，省略则修改表中所有<br>记录<br>*&#x2F;</p>
</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4. **删除**</span><br><span class="line"></span><br><span class="line">```sql</span><br><span class="line">删除表：</span><br><span class="line">DROP TABLE 表名</span><br><span class="line"></span><br><span class="line">删除数据：</span><br><span class="line">DELETE FROM 表名 [WHERE 条件]</span><br></pre></td></tr></table></figure>

<h2 id="3、视图"><a href="#3、视图" class="headerlink" title="3、视图"></a>3、视图</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*创建视图*/</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> <span class="operator">&lt;</span>视图名<span class="operator">&gt;</span> [(列名,..)]<span class="comment">/*对查询结果取别名*/</span></span><br><span class="line"><span class="keyword">as</span> <span class="keyword">select</span> 语句 <span class="comment">/*数据来源：表或视图，可使用多个*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">修改视图：</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">VIEW</span> 视图名 [(视图列表)] <span class="keyword">AS</span> 子查询</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">删除视图：</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">VIEW</span> 视图名</span><br></pre></td></tr></table></figure>

<h2 id="4、索引"><a href="#4、索引" class="headerlink" title="4、索引"></a>4、索引</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*创建索引*/</span></span><br><span class="line"><span class="keyword">CREATE</span> [<span class="keyword">UNIQUE</span>] [CLUSTERED <span class="operator">|</span> NONCLUSTERED]</span><br><span class="line">INDEX index_name</span><br><span class="line"><span class="keyword">ON</span> table_or_view (<span class="keyword">column</span> [<span class="keyword">ASC</span> <span class="operator">|</span> <span class="keyword">DESC</span>][,...])</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">UNIQUE:创建唯一索引</span></span><br><span class="line"><span class="comment">CLUSTERED:创建聚集索引</span></span><br><span class="line"><span class="comment">NONCLUSTERED:创建非聚集索引</span></span><br><span class="line"><span class="comment">ASC|DESC:缺省时为默认升序(ASC)</span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">删除索引：</span><br><span class="line"><span class="keyword">DROP</span> INDEX index_name <span class="keyword">ON</span> table_or_view</span><br><span class="line"></span><br><span class="line"><span class="comment">/*存储过程查看*/</span></span><br><span class="line"><span class="keyword">EXEC</span> Sp_helpindex <span class="string">&#x27;table_name&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*更改索引名称*/</span></span><br><span class="line"><span class="keyword">EXEC</span> Sp_rename <span class="string">&#x27;表名.索引名&#x27;</span> <span class="string">&#x27;新索引名&#x27;</span></span><br></pre></td></tr></table></figure>

<h2 id="5、默认"><a href="#5、默认" class="headerlink" title="5、默认"></a>5、默认</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*创建*/</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">default</span> [默认框架名称] <span class="operator">&lt;</span>name<span class="operator">&gt;</span></span><br><span class="line"><span class="keyword">as</span> constant_expression</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">constant_expression:只含常量表达式、内置函数、数学表达式，</span></span><br><span class="line"><span class="comment">                    不能包括任何列或其他数据库对象名称；</span></span><br><span class="line"><span class="comment">                    二进制：0x开头</span></span><br><span class="line"><span class="comment">                    货币：$开头</span></span><br><span class="line"><span class="comment">                    默认值必须与列数据类型兼容</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*存储过程默认绑定：将默认绑定到表的一个列或一个用户的自定义数据类型上*/</span></span><br><span class="line"><span class="keyword">EXEC</span> sp_bindefault [<span class="variable">@default</span><span class="operator">=</span>]<span class="string">&#x27;默认值名&#x27;</span>,[<span class="variable">@object</span><span class="operator">=</span>]<span class="string">&#x27;被绑字段名&#x27;</span></span><br><span class="line"><span class="keyword">EXEC</span> sp_bindefault default_age,<span class="string">&#x27;S.age&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*解绑*/</span></span><br><span class="line"><span class="keyword">EXEC</span> sp_unbindefault [<span class="variable">@object</span><span class="operator">=</span>]<span class="string">&#x27;被绑字段名&#x27;</span></span><br><span class="line"><span class="keyword">EXEC</span> sp_unbindfault <span class="string">&#x27;S.age&#x27;</span></span><br></pre></td></tr></table></figure>

<h2 id="6、规则"><a href="#6、规则" class="headerlink" title="6、规则"></a>6、规则</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*创建*/</span></span><br><span class="line"><span class="keyword">create</span> rule <span class="operator">&lt;</span>规则名<span class="operator">&gt;</span> <span class="keyword">as</span> <span class="operator">&lt;</span>规则表达式<span class="operator">&gt;</span></span><br><span class="line"><span class="comment">/*规则表达式：where后的任何表达式*/</span></span><br><span class="line"><span class="keyword">create</span> rule age_rule <span class="keyword">as</span> <span class="variable">@age</span> <span class="operator">&gt;=</span><span class="number">18</span> <span class="keyword">and</span> <span class="variable">@age</span><span class="operator">&lt;=</span><span class="number">40</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*绑定*/</span></span><br><span class="line"><span class="keyword">EXEC</span> sp_bindrule [<span class="variable">@rulename</span><span class="operator">=</span>] <span class="string">&#x27;规则名&#x27;</span>,[<span class="variable">@obname</span><span class="operator">=</span>]<span class="string">&#x27;被绑字段名&#x27;</span></span><br><span class="line"><span class="keyword">EXEC</span> sp_bindrule <span class="string">&#x27;age_rule&#x27;</span>,<span class="string">&#x27;S.age&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*解绑*/</span></span><br><span class="line"><span class="keyword">EXEC</span> sp_unbindrule [<span class="variable">@object</span><span class="operator">=</span>]<span class="string">&#x27;被绑定字段名&#x27;</span></span><br><span class="line"><span class="keyword">EXEC</span> sp_unbindrule <span class="string">&#x27;S.age&#x27;</span></span><br></pre></td></tr></table></figure>

<h2 id="7、存储过程"><a href="#7、存储过程" class="headerlink" title="7、存储过程"></a>7、存储过程</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*创建*/</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span> <span class="operator">&lt;</span>过程名<span class="operator">&gt;</span>[;number]    <span class="comment">/*number:区分同名过程*/</span></span><br><span class="line">[(<span class="variable">@name</span> type [OUTPUT],...)]</span><br><span class="line"><span class="keyword">AS</span> <span class="keyword">sql</span>语句    <span class="comment">/*数量和类型不限：insert create update delete drop select等*/</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">参数:被定义时,使用该过程必须传递参数值;缺省时,直接调用;</span></span><br><span class="line"><span class="comment">OUTPUT:用于向调用者返回信息（text类型除外）</span></span><br><span class="line"><span class="comment">       即：使用后可通过对应参数向使用者返回所需信息</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">查看存储过程定义文本：</span><br><span class="line"><span class="keyword">EXEC</span> sp_helptext <span class="operator">&lt;</span>过程名<span class="operator">&gt;</span></span><br><span class="line"></span><br><span class="line">执行存储过程：</span><br><span class="line"><span class="keyword">EXEC</span> <span class="operator">&lt;</span>过程名<span class="operator">&gt;</span> [<span class="variable">@name</span><span class="operator">=</span>&quot;..&quot;,...]</span><br><span class="line"><span class="comment">/*传递参数之间用&#x27;,&#x27;隔开，无需括号；存储过程无参时，省略*/</span></span><br><span class="line"></span><br><span class="line">修改存储过程：</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">procedure</span> <span class="operator">&lt;</span>过程名<span class="operator">&gt;</span></span><br><span class="line">[(<span class="variable">@name</span> type [OUTPUT],...)]</span><br><span class="line"><span class="keyword">AS</span> <span class="keyword">sql</span>语句</span><br><span class="line"></span><br><span class="line">删除存储过程：</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">PROCEDURE</span> <span class="operator">&lt;</span>name<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="8、触发器"><a href="#8、触发器" class="headerlink" title="8、触发器"></a>8、触发器</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*DML触发器*/</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">trigger</span>  <span class="operator">&lt;</span>name<span class="operator">&gt;</span></span><br><span class="line"><span class="keyword">on</span> <span class="operator">&lt;</span>表名<span class="operator">/</span>视图名<span class="operator">&gt;</span></span><br><span class="line"><span class="keyword">for</span><span class="operator">|</span>after<span class="operator">|</span>instead  <span class="keyword">of</span> [<span class="keyword">INSERT</span>][,][<span class="keyword">UPDATE</span>][,][<span class="keyword">DELETE</span>]</span><br><span class="line"><span class="keyword">as</span> <span class="keyword">sql</span>语句<span class="comment">/*检查或修改数据，一般不向程序返回结果*/</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">instead of:当执行对应操作时，触发触发器的SQL语句将不被执行</span></span><br><span class="line"><span class="comment">&lt;=&gt;for|after...rollback(回滚)</span></span><br><span class="line"><span class="comment">触发器执行时产生两张表：</span></span><br><span class="line"><span class="comment">DELETED:删除表，将 被删除 或 被修改前 的数据</span></span><br><span class="line"><span class="comment">INSERTED:插入表，将 被修改后 或 将插入 的数据</span></span><br><span class="line"><span class="comment">UPDATE触发：将原始数据移入deleted表，新数据存入inserted表，执行触发器sql语句</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*查看触发器*/</span></span><br><span class="line"><span class="keyword">EXEC</span> sp_helptrigger <span class="string">&#x27;表名&#x27;</span></span><br><span class="line"><span class="comment">/*查看某表中以创建的触发器*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">EXEC</span> sp_helptrigger <span class="string">&#x27;表名&#x27;</span>,<span class="string">&#x27;类型&#x27;</span></span><br><span class="line"><span class="comment">/*查看表中某一类触发器，如：delete、insert、update*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">EXEC</span> sp_helptext <span class="string">&#x27;触发器名&#x27;</span></span><br><span class="line"><span class="comment">/*查看触发器定义文本*/</span></span><br><span class="line"></span><br><span class="line">修改触发器：</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">trigger</span>  <span class="operator">&lt;</span>name<span class="operator">&gt;</span></span><br><span class="line"><span class="keyword">on</span> <span class="operator">&lt;</span>表名<span class="operator">/</span>视图名<span class="operator">&gt;</span></span><br><span class="line">[<span class="keyword">for</span><span class="operator">|</span>after<span class="operator">|</span>instead  <span class="keyword">of</span> [<span class="keyword">INSERT</span>][,][<span class="keyword">UPDATE</span>][,][<span class="keyword">DELETE</span>]]</span><br><span class="line"><span class="keyword">as</span> <span class="keyword">sql</span>语句</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">删除触发器：</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TRIGGER</span> <span class="operator">&lt;</span>name<span class="operator">&gt;</span></span><br><span class="line"></span><br><span class="line">禁用触发器：</span><br><span class="line">disable <span class="keyword">trigger</span> [框架名.]<span class="operator">&lt;</span>name<span class="operator">&gt;</span><span class="operator">|</span><span class="keyword">all</span> <span class="keyword">on</span> <span class="operator">&lt;</span>DML触发器所在对象名<span class="operator">&gt;</span></span><br><span class="line"><span class="comment">/*all：禁用on后对象中所有触发器*/</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>赖总笔记</category>
      </categories>
      <tags>
        <tag>赖总笔记</tag>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title>网络服务器配置</title>
    <url>/xuanyao/29ff53fc.html</url>
    <content><![CDATA[<h1 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h1><ol>
<li><p><strong>网络操作系统：</strong> 建立在计算机操作系统基础上，用于管理网络通信和共享资源，协调主机上任务的运行，并向用户提供统一的有效的网络接口的软件合集。</p>
</li>
<li><p><strong>网络操作系统的体系结构</strong></p>
<ul>
<li><p>主要有<strong>层次结构</strong>和<strong>微内核结构</strong> </p>
</li>
<li><p>内核组织方式：由于操作系统设计的目标和环境不同，内核的大小和功能有很大差别，网络操作系统的两种主要组织方式：<strong>单内核</strong> 和<strong>微内核</strong> </p>
<ul>
<li><p><strong>单内核</strong>：在硬件层之上定义了一个抽象接口，以实现操作系统的功能，功能由多个运行在内核模式的模块来完成。</p>
<img src="file:///E:/Note/image/2023-02-03-11-11-54-image.png" title="" alt="" width="199">

<p>优点：运行效率高、核心部分简洁。</p>
<p>缺点：内核偏大、内部模块之间相互调用关系复杂，一个很小的BUG可能导致系统崩溃。</p>
</li>
<li><p><strong>微内核</strong>：其基本思想是内核要尽可能小，将大量的操作系统功能放到内核之外去实现，内核中仅存放最基本的核心操作系统功能，内核外部的其他服务和应用，作为独立的服务器进程，在用户模式下运行。</p>
<img src="file:///E:/Note/image/2023-02-03-11-22-04-image.png" title="" alt="" width="255">

<p>优点：内核和核外服务程序的开发分离，可为特定应用程序或运行环境要求定制服务程序，具有良好的可伸缩性，简化了实现，提供了灵活性，适合网络操作系统与分布式系统的构造。微内核还能执行保护功能</p>
</li>
</ul>
</li>
<li><p><strong>层次式体系结构</strong> ：各模块有固定位置和层次，任何一层只能调用比它低层次所提供的服务，并为其上层提供服务</p>
<ul>
<li><p>优点：功能明确，调用关系清晰，保证设计和实现的正确性；各层可分别实现、且便于扩充；高层错误不会响应到低层。</p>
</li>
<li><p>缺点：效率低、层次之间调用开销大、系统内核比较大。</p>
</li>
</ul>
</li>
<li><p><strong>微内核体系结构</strong>：</p>
</li>
</ul>
</li>
<li><p><strong>服务器群集类型</strong></p>
<ul>
<li><strong>以故障转移和容错为主</strong> ：一旦其中一台或几台服务器出现停机，其运行的应用由集群中的其他服务器自动接管，从而提高整个系统的可用性。</li>
<li><strong>以负载均衡为主</strong> ：将服务和应用部署到多台服务器，将应用网络请求分散到多台服务器上，从而提高整个系统的性能。</li>
</ul>
</li>
</ol>
<h1 id="第二章"><a href="#第二章" class="headerlink" title="第二章"></a>第二章</h1><ol>
<li><p><strong>角色</strong> ：<u>角色是软件程序的集合，描述的是服务器承载的主要功能，相当于服务器的一个门类</u>，如DNS服务器、WEB服务器。管理员可将整个服务器设置为一个角色，也可在一台计算机上运行多个服务器角色。</p>
</li>
<li><p><strong>角色服务</strong> ：<u>每个角色都提供一组功能，这些功能用于执行特定的任务，称为角色服务。角色服务是提供角色功能的软件程序，相当于服务器组件。</u>每个服务器角色可包含一个或多个角色服务。</p>
</li>
<li><p><strong>功能</strong> ：<u>描述服务器的辅助或支持性功能(或特性)。功能是一些软件程序，相当于系统组件。</u></p>
</li>
<li><p><strong>角色、角色服务与功能之间的依存关系</strong> ：<u>安装角色并准备部署服务器时，服务器管理器提示安装该角色所需的任何其他角色、角色服务或功能。删除角色、角色服务或功能，服务器管理器将提示其他程序是否也需要删除的软件。</u>该依存关系由系统管理，管理员无需知晓安装角色所依赖软件。</p>
</li>
</ol>
<h1 id="第四章"><a href="#第四章" class="headerlink" title="第四章"></a>第四章</h1><ol>
<li><p><strong>TCP&#x2F;IP协议的分层结构</strong> </p>
<p><img src="E:\Note\image\2023-02-05-16-07-46-image.png"></p>
</li>
</ol>
<h1 id="第五章"><a href="#第五章" class="headerlink" title="第五章"></a>第五章</h1><ol>
<li><p><strong>域名系统的组成</strong> </p>
<ul>
<li><p><strong>名称空间</strong> ：指定用于组织名称的域的层次结构</p>
</li>
<li><p><strong>资源记录</strong> ：将域名映射到特定类型的资源信息，注册或解析名称时使用</p>
</li>
<li><p><strong>DNS服务器</strong> ：存储资源记录并提供名称查询服务的程序</p>
</li>
<li><p><strong>DNS客户端(解析程序)</strong> ：用来查询服务器获取名称解析信息</p>
</li>
</ul>
</li>
<li><p><strong>域名解析过程</strong>  </p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span>使用客户端本地DNS解析程序缓存进行解析</span><br><span class="line"><span class="number">2.</span>将名称查询提交给首选DNS服务器</span><br><span class="line"><span class="number">3.</span>DNS服务器搜索DNS区域数据文件</span><br><span class="line"><span class="number">4.</span>查DNS服务器本地缓存 </span><br><span class="line"><span class="number">5.</span>使用递归查询来完全解析名称。</span><br><span class="line"><span class="number">6.</span>若不能使用递归，则使用迭代查询。</span><br><span class="line"><span class="number">7.</span>若还不能解析该名称，按照客户端DNS服务器列表，依次查询备用DNS服务器</span><br></pre></td></tr></table></figure></li>
</ol>
<ul>
<li><p>使用客户端本地DNS解析程序缓存进行解析，若解析成功，返回相应IP，查询完成，反之解析</p>
</li>
<li><p>客户端将名称查询提交给所设定的首选(主)DNS服务器</p>
</li>
<li><p>DNS服务器接到查询请求，搜索本地DNS区域数据文件(存储域名解析数据)，若查到匹配信息，则做出权威应答，返回相应IP地址，查询完成，否则，继续解析</p>
</li>
<li><p>若本地区域数据库中没有，就查DNS服务器本地缓存，若查到匹配信息，就做出肯定应答，返回相应的IP地址，查询完成，否则继续解析</p>
</li>
<li><p>使用递归查询来完全解析名称，这需要其他DNS服务器的支持</p>
</li>
<li><p>如果不能使用递归查询（例如DNS服务器禁用递归查询），则使用迭代查询</p>
</li>
<li><p>若不能解析该名称，则客户端按照所配置的DNS服务器列表，依次查询其中所列的备用DNS服务器</p>
<ul>
<li>采用递归或迭代来处理客户端查询时，将所有所获得的有关DNS名称空间的重要信息交由DNS服务器缓存，既加速DNS的后继查询，又减少网络上与DNS相关的查询通量信息</li>
</ul>
</li>
</ul>
<h1 id="第六章"><a href="#第六章" class="headerlink" title="第六章"></a>第六章</h1><ol>
<li><p><strong>域</strong> ：域是Active Directory 的基本单位和核心单元，是Active Directory的分区单位，Active Directory中必须至少有一个域。</p>
<p><strong>域包括三种类型的计算机</strong> ：</p>
<ul>
<li><p>域控制器：整个域的核心，存储Active Directory数据库，承担主要的管理任务，负责处理用户和计算机的登录</p>
</li>
<li><p>成员服务器：域中非域控制器的Windows服务器，不存储Active Directory信息，不处理账户登录过程</p>
</li>
<li><p>工作站：加入域的Windows计算机，可访问域中的资源</p>
</li>
</ul>
<img src="file:///E:/Note/image/2023-02-13-16-11-08-image.png" title="" alt="" width="252">
</li>
<li><p><strong>组织单位</strong> ：<u>组织单位是可将用户、组、计算机和其他组织单位放入其中的Active Directory容器</u>。<u>组织单位相当于域的子域</u>，可像域一样包含各种对象（包括组织单位）。每个域的组织单位层次都是独立的，组织单位不能包括来自其他域的对象。在域中创建的组织单位应考虑能反映组织单位的职能或商务结构。</p>
<img src="file:///E:/Note/image/2023-02-13-16-15-08-image.png" title="" alt="" width="254">
</li>
<li><p><strong>域树</strong> ：<u>可将多个域组合成一个域树。域树中第一个域称作<strong>根域</strong> ，同一域树中其他域为<strong>子域</strong> ，位于上层的域称为子域的<strong>父域</strong> 。</u>域树中的域虽有层次关系，但仅限于命名方式，并不代表父域对子域具有管辖权限。域树中各域都是独立的管理个体，父域和子域的管理员是平等的。</p>
<img src="file:///E:/Note/image/2023-02-13-16-17-45-image.png" title="" alt="" width="225">
</li>
<li><p><strong>林</strong> <u>：一个域或多个域通过信任关系形成的集合</u>。林中的域树不形成邻接的名称空间，各自使用不同的DNS名称。林的根域是林中创建的第一个域，所有域树的根域与林的根域建立可传递的信任关系。</p>
<img src="file:///E:/Note/image/2023-02-13-16-18-03-image.png" title="" alt="" width="485">
</li>
<li><p><strong>域信任关系：</strong> <u>建立在两个域之间的关系，使一个域中的账户由另一个域中的域控制器验证</u>。所有域信任关系只能有两个域：信任域和受信任域；信任域方向可以是单向也可以使双向；信任关系可传递，也可不传递。</p>
</li>
<li><p><strong>Active Directory与DNS集成</strong> </p>
<p>AD与DNS集成并享有相同的名称空间结构，两者集成体现在以下三个方面：</p>
<ul>
<li><p>Active Directory与DNS有相同的层次结构            </p>
</li>
<li><p>DNS可存储在Active Directory中 </p>
</li>
<li><p>Active Directory将DNS作为定位服务使用（如图所示）</p>
</li>
</ul>
</li>
</ol>
<p><strong>关系：</strong> DNS不需要Active Directory 也能运行，而Active Directory需要DNS才能正常运行。</p>
<img title="" src="file:///E:/Note/image/2023-02-06-11-59-15-image.png" alt="" data-align="center" width="349">

<h1 id="第七章"><a href="#第七章" class="headerlink" title="第七章"></a>第七章</h1><ol>
<li><p><strong>DHCP的工作原理</strong> </p>
<ul>
<li><p>DHCP基于客户机&#x2F;服务器模式，服务器端使用UDP 67端口，客户端使用UDP 68端口。</p>
</li>
<li><p>DHCP客户端每次启动与服务器通信（申请IP地址，获取配置信息）的两种情况：</p>
<ul>
<li><p>DHCP客户端向DHCP服务器申请新的IP地址</p>
<p><strong>&gt;</strong> 首次以DHCP客户端启动。 </p>
<p><strong>&gt;</strong> DHCP客户端租用IP已被DHCP服务器收回。</p>
<p><strong>&gt;</strong> DHCP客户端自行释放已租用IP，要求使用一个新地址。</p>
</li>
<li><p>已获得IP的DHCP客户端要求更新租约，继续使用该地址</p>
<p><strong>&gt;</strong> 不管租约是否到期，以获得IP地址的DHCP客户端每次启动时都将以广播方式向DHCP服务器发送请求信息，请求继续租用原IP。即使DHCP服务器未发送确认信息，只要租期未满，客户端任能继续使用原IP。</p>
<p><strong>&gt;</strong> 租约期限超过一半时DHCP客户端自动以广播方式向DHCP服务器发出续租IP请求。</p>
<p>（若续租成功，DHCP服务器将回送DHCPACK信息；若不成功，DHCP服务器回送<strong>DHCPNACK信息</strong> ，说明该IP不能分配给该客户端。）</p>
</li>
</ul>
</li>
<li><p><strong>DHCP客户端申请IP过程：</strong> </p>
<img title="" src="file:///E:/Note/image/2023-02-06-15-45-32-image.png" alt="" width="426" data-align="inline">

<ul>
<li><p>DHCP客户端以广播方式发出<strong>DHCPDISCOVER(探测)信息</strong> ，查找网络中的DHCP服务器；</p>
</li>
<li><p>网络中的DHCP服务器收到来自客户端的DHCPDISCOVER信息后，从IP地址池中选取一个未租出的IP地址作为<strong>DHCPOFFER(提供)信息</strong> ，以广播的方式发送给网络中的客户端。此时客户端没有自己的IP地址，所以只能以广播方式。服务器准备租出的IP地址将临时保留起来，以免同时分配给其他客户端；                            </p>
</li>
<li><p>DHCP客户端收到DHCPOFFER信息后，再以广播方式向网络中的DHCP服务器发送<strong>DHCPREQUEST(请求)信息</strong> ，申请分配IP地址。</p>
<p>（若网络中有多个DHCP服务器，DHCP客户端只会选择第一个接收到的DCHPOFFER信息。客户端之所以以广播方式发送DHCOREQUEST信息，除了通知已被选择的DHCP服务器，还要通知未被选择的DHCP服务器释放原本准备分配给客户端的IP地址，供其他客户端使用。）</p>
</li>
<li><p>DHCP服务器收到DHCP客户端的DHCPREQUEST信息后，以广播方式发送<strong>DHCPACK(确认)信息</strong> 。除IP地址外，DHCPACK信息还包括TCP&#x2F;IP配置数据，如默认网关、DNS服务器等。</p>
</li>
<li><p>DHCP客户端收到DHCPACK信息后，随即获得了所需的IP及相关配置信息。</p>
</li>
</ul>
</li>
</ul>
</li>
<li><p><strong>DHCP服务器部署</strong> </p>
<ul>
<li><p><strong>DHCP规划：</strong> </p>
<ul>
<li><p>单一子网环境中仅需一台DHCP服务器</p>
</li>
<li><p>非常重要的网络在部署主要DHCP服务器的基础上，再部署一台或多台辅助（或备用）DHCP服务器。<strong>好处：</strong> 提供容错；在网络中平衡DHCP服务器的使用。 </p>
</li>
<li><p>在路由器中部署DHCP服务器。在一两个网段中部署一到两台DHCP服务器，而在其他网段使用DHCP代理。</p>
</li>
</ul>
</li>
</ul>
</li>
<li><p><strong>复杂网络DHCP部署</strong> </p>
<ul>
<li><p><strong>配置多台DHCP服务器</strong> </p>
<ul>
<li><p>在同子网上使用多个DHCP服务器，可以为它服务的客户机提供更强的容错能力。</p>
</li>
<li><p>为了平衡DHCP服务器的使用，较好的方法是使用70&#x2F;30规则划分两个DHCP服务器之间的作用域。使用排除地址的方法来分割地址范围。</p>
<p><img src="E:\Note\image\2023-02-12-16-08-41-image.png"></p>
</li>
</ul>
</li>
<li><p><strong>跨网段DHCP中继</strong> </p>
<ul>
<li><p><strong>DHCP中继代理的作用：</strong> 将DHCP请求从一个网段传递到另一个网段。</p>
<p>解决方案：</p>
<p>1》直接通过路由器实现，要求路由器支持DHCP&#x2F;BOOTP中继代理功能，能够中转DHCP和BOOTP通信。</p>
<p>2》使用DHCP中继代理软件。</p>
</li>
<li><p>必须使用路由器或计算机作为DHCP和BOOTP中继代理服务器以支持DHCP通信的转发。</p>
</li>
<li><p>DHCP中继代理为跨网段DHCP客户端提供DHCP服务，涉及多子网多作用域，可以设置超级作用域。至少在一个网段中部署一台DHCP服务器</p>
<p><img src="E:\Note\image\2023-02-12-16-37-57-image.png"></p>
</li>
</ul>
</li>
<li><p><strong>多宿主DHCP服务器</strong> </p>
<ul>
<li><p>多宿主DHCP服务器指一台DHCP服务器安装多网卡，为多个独立的网络提供服务，其中每块网卡连接独立的网段。</p>
<p><img src="E:\Note\image\2023-02-12-16-48-20-image.png"></p>
</li>
</ul>
</li>
</ul>
</li>
<li><p><strong>DHCPv6设置</strong></p>
<ul>
<li><p>DHCPv6客户端会在网络上搜寻路由器，然后通过路由器返回的设置来决定是否向DHCP服务器请求更多的IPv6地址和DHCP选项设置</p>
</li>
<li><p>Windows Server 2012 R2的DHCPv6支持的两种路由匹配模式：</p>
<ul>
<li><p><strong>DHCPv6无状态模式：</strong> DHCPv6客户端仅向DHCP服务器请求DHCP选项设置，而不会请求IPv6地址。它通过路由器返回前缀来设置IPv6地址，或者直接静态设置IPv6地址。</p>
</li>
<li><p><strong>DHCPv6有状态模式：</strong> DHCPv6客户端向DHCP服务器同时请求IPv6地址和DHCP选项设置。</p>
</li>
</ul>
</li>
<li><p>根据路由器来<strong>决定DHCPv6的运行模式</strong> ：</p>
<ul>
<li><p>若路由器返回的<strong>O&amp;M</strong> 标志均被设置为<strong>1</strong> ，表示客户端需要通过DHCP服务器同时获取IPv6地址和选项设置，应选择<strong>有状态模式</strong> 。</p>
</li>
<li><p>若路由器返回的<strong>O</strong> 标志设置为<strong>1</strong> ，而<strong>M</strong> 标志<strong>未设置</strong> ，表示客户端不需要通过DHCP服务器获取IPv6地址，只需要选项设置，应选择<strong>无状态模式</strong> 。</p>
</li>
</ul>
</li>
</ul>
</li>
</ol>
<h1 id="第八章"><a href="#第八章" class="headerlink" title="第八章"></a>第八章</h1><ol>
<li><p><strong>非对称加密</strong> ：它采用密钥对信息进行加密和解密，加密和解密所用密钥不同。</p>
<ul>
<li><p>公钥通过非保密方式向他人公开，任何人都可获得；</p>
</li>
<li><p>私钥则由自己保存；</p>
</li>
<li><p><strong>加密</strong> ：利用接收方的公钥和自己的私钥对信息加密</p>
</li>
<li><p><strong>解密</strong> ：利用自己的私钥和发送方的公钥进行解密</p>
</li>
<li><p>既可以防止数据发送方的事后否认，又可以防止他人仿冒或蓄意破坏，可实现保密、认证、抗否认和完整性控制等安全要求，对于大规模应用实现更容易。</p>
<p><img src="E:\Note\image\2023-02-13-14-27-35-image.png"></p>
</li>
</ul>
</li>
</ol>
<h1 id="第十章"><a href="#第十章" class="headerlink" title="第十章"></a>第十章</h1><ol>
<li><p><strong>分布式文件系统结构</strong> </p>
<p><strong>DFS：</strong>  为用户所需网络资源提供统一和透明的访问路径。使用简化单一的命名空间来映射复杂多变的网络共享资源。</p>
<p><strong>DFS组件：</strong> </p>
<ul>
<li><p><strong>DFS命名空间：</strong> 让用户能够将位于不同服务器内的共享文件夹集中在一起，并以一个虚拟文件夹的树状结构呈现给用户。</p>
<p><strong>DFS命名空间分为两种：</strong> </p>
<ul>
<li><p>基于域的命名空间：它将命名空间的设置数据存储到命名空间服务器与AD中，支持多台命名空间服务器，并具备命名空间的容错功能；</p>
</li>
<li><p>独立命名空间：它将命名空间的设置数据存储到命名空间服务器内，只能够有一台命名空间服务器。</p>
</li>
<li><p><strong>（</strong> 两种类型决定了分布式文件系统类型：域分布式文件系统、独立的根目录分布式文件系统 <strong>）</strong></p>
</li>
</ul>
</li>
<li><p><strong>命名空间服务器：</strong> 命名空间的宿主服务器，对于基于域的命名空间，可以是成员服务器或域控制器，且可设置多台命名空间服务器；对于独立命名空间，可以是独立服务器。</p>
</li>
<li><p><strong>命名空间根目录：</strong> 命名空间的起点，对应到命名空间服务器内的一个共享文件夹，而此文件夹必须位于NTFS卷。</p>
<p>对于基于域的命名空间，其名称以域名开头；对于独立命名空间，则名称会以计算机名称开头。</p>
</li>
<li><p><strong>DFS文件夹：</strong> 相当于DFS命名空间的子目录，它是一个指向网络文件夹的指针，同一根目录下的每个文件必须拥有唯一的名称，但不能在DFS文件夹下再建立文件夹。</p>
</li>
<li><p><strong>文件夹目标：</strong> 这是DFS文件夹实际指向的文件夹位置，即目标文件夹。目标可以是本机或网络中的共享文件夹，也可以是另一个DFS文件夹。一个DFS文件夹可对应多个目标，以实现容错功能。</p>
</li>
<li><p><strong>DFS复制：</strong><u> 一个DFS文件夹可以对应多个目标，多个目标多对应的共享文件夹提供给客户端的文件必须一样，也就是保持同步，这由DFS复制服务来自动实现的。</u>该服务提供一个称为<strong>远程差分压缩（RDC）的功能，</strong> 能够有效地在服务器之间复制文件，这对带宽有限的WAN联机非常有利。</p>
</li>
</ul>
<p><strong>分布式文件系统：</strong> 由DFS命名空间、DFS文件夹和文件夹目标组成。通过DFS来访问网络共享资源，<strong>只需提供</strong> DFS命名空间和DFS文件夹。</p>
<p><strong>建立分布式文件系统的主要工作：</strong> 建立DFS结构。</p>
</li>
</ol>
]]></content>
      <categories>
        <category>赖总笔记</category>
      </categories>
      <tags>
        <tag>赖总笔记</tag>
        <tag>网络服务器</tag>
      </tags>
  </entry>
  <entry>
    <title>网络系统集成课设</title>
    <url>/xuanyao/77b593e1.html</url>
    <content><![CDATA[<h1 id="网络系统集成课设"><a href="#网络系统集成课设" class="headerlink" title="网络系统集成课设"></a>网络系统集成课设</h1><h2 id="一、题目"><a href="#一、题目" class="headerlink" title="一、题目"></a>一、题目</h2><p>项目背景</p>
<p>信息安全等级保护制度是国家信息安全保障工作的基本制度、基本策略和基本方法，是促进信息化健康发展，维护国家安全、社会秩序和公共利益的根本保障。国务院法规和中央文件明确规定，要实行信息安全等级保护，重点保护基础信息网络和关系国家安全、经济命脉、社会稳定等方面的重要信息系统，抓紧建立信息安全等级保护制度。开展信息安全等级保护工作不仅是保障重要信息系统安全的重大措施，也是一项事关国家安全、国家利益、社会稳定的重要任务。</p>
<p>通过本方案的实施，切实提高湘潭市住房公积金管理中心网络安全防护水平，完善湘潭市住房公积金管理中心信息安全基础设施的安全保障能力，为信息化系统创造一个安全、高效、可靠的安全环境，并能有效抵御一定程度的安全攻击。</p>
<p>项目目标</p>
<p>1、实现网络内部各个部门业务通信</p>
<p>2、网络内部主机通过服务器自动获取ip</p>
<p>3、内网主机访问Internet</p>
<p>4、内网服务器对外发布</p>
<h2 id="二、需求"><a href="#二、需求" class="headerlink" title="二、需求"></a>二、需求</h2><ol>
<li>实现网络内部各部门业务通信</li>
<li>通过服务器获取IP</li>
<li>访问Internet</li>
<li></li>
<li>内网主机漏洞测试，勒索病毒防护</li>
<li>ARP欺骗</li>
<li>VPN搭建，实现总部与分部私网资源共享</li>
</ol>
<h2 id="三、VLAN"><a href="#三、VLAN" class="headerlink" title="三、VLAN"></a>三、VLAN</h2><p>主要部门：</p>
<p>刑事部</p>
<p>治安部</p>
<p>交通管理部</p>
<p>消防部</p>
<p>人口管理部</p>
<p>内安全保卫部</p>
<table>
<thead>
<tr>
<th>部门</th>
<th>VLAN编号</th>
<th>子网地址</th>
<th>子网掩码</th>
<th>可用地址范围</th>
<th>可用IP数目</th>
<th>网关</th>
</tr>
</thead>
<tbody><tr>
<td>办公室</td>
<td>VLAN10</td>
<td>192.168.10.0</td>
<td>255.255.255.0</td>
<td>192.168.10.1-192.168.10.254</td>
<td>254</td>
<td>192.168.10.254</td>
</tr>
<tr>
<td>指挥中心</td>
<td>VLAN20</td>
<td>192.168.20.0</td>
<td>255.255.255.0</td>
<td>192.168.20.1-192.168.20.254</td>
<td>254</td>
<td>192.168.20.254</td>
</tr>
<tr>
<td>政治部</td>
<td>VLAN30</td>
<td>192.168.30.0</td>
<td>255.255.255.0</td>
<td>192.168.30.1-192.168.30.254</td>
<td>254</td>
<td>192.168.30.254</td>
</tr>
<tr>
<td>监察室</td>
<td>VLAN40</td>
<td>192.168.40.0</td>
<td>255.255.255.0</td>
<td>192.168.40.1-192.168.40.254</td>
<td>254</td>
<td>192.168.40.254</td>
</tr>
<tr>
<td>法制支队</td>
<td>VLAN50</td>
<td>192.168.50.0</td>
<td>255.255.255.0</td>
<td>192.168.50.1-192.168.50.254</td>
<td>254</td>
<td>192.168.50.254</td>
</tr>
<tr>
<td>警务督察中队</td>
<td>VLAN60</td>
<td>192.168.60.0</td>
<td>255.255.255.0</td>
<td>192.168.60.1-192.168.60.254</td>
<td>254</td>
<td>192.168.60.254</td>
</tr>
<tr>
<td>服务器机房</td>
<td>VLAN70</td>
<td>192.168.70.0</td>
<td>255.255.255.0</td>
<td>192.168.70.1-192.168.70.254</td>
<td>254</td>
<td>192.168.70.254</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>部门</th>
<th>VLAN编号</th>
<th>子网地址</th>
<th>子网掩码</th>
<th>可用地址范围</th>
<th>可用IP数目</th>
<th>网关</th>
</tr>
</thead>
<tbody><tr>
<td>部门1</td>
<td>VLAN110</td>
<td>172.22.110.0</td>
<td>255.255.255.0</td>
<td>172.168.110.1-172.22.110.254</td>
<td>254</td>
<td>172.22.110.254</td>
</tr>
<tr>
<td>部门2</td>
<td>VLAN120</td>
<td>172.22.120.0</td>
<td>255.255.255.0</td>
<td>172.168.120.1-172.22.120.254</td>
<td>254</td>
<td>172.22.120.254</td>
</tr>
</tbody></table>
<h2 id="四、配置"><a href="#四、配置" class="headerlink" title="四、配置"></a>四、配置</h2><h3 id="1、VLAN划分"><a href="#1、VLAN划分" class="headerlink" title="1、VLAN划分"></a>1、VLAN划分</h3><ul>
<li><p>Core-sw1</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Core-Sw1]vlan batch 10 20 30 40 50 60 70</span><br><span class="line">[Core-Sw1]int vl 10</span><br><span class="line">[Core-Sw1-Vlanif10]ip addr 192.168.11.254 23</span><br><span class="line">[Core-Sw1-Vlanif10]q</span><br><span class="line">[Core-Sw1]int vl 20</span><br><span class="line">[Core-Sw1-Vlanif20]ip addr 192.168.13.254 23</span><br><span class="line">[Core-Sw1-Vlanif20]q</span><br><span class="line">[Core-Sw1]int vl 30</span><br><span class="line">[Core-Sw1-Vlanif30]ip addr 192.168.15.254 23</span><br><span class="line">[Core-Sw1-Vlanif30]q</span><br><span class="line">[Core-Sw1]int vl 40</span><br><span class="line">[Core-Sw1-Vlanif40]ip addr 192.168.17.254 23</span><br><span class="line">[Core-Sw1-Vlanif40]q</span><br><span class="line">[Core-Sw1]int vl 50</span><br><span class="line">[Core-Sw1-Vlanif50]ip addr 192.168.19.254 23</span><br><span class="line">[Core-Sw1-Vlanif50]q</span><br><span class="line">[Core-Sw1]int vl 60</span><br><span class="line">[Core-Sw1-Vlanif60]ip addr 192.168.21.254 23</span><br><span class="line">[Core-Sw1-Vlanif60]q</span><br><span class="line">[Core-Sw1]int vl 70</span><br><span class="line">[Core-Sw1-Vlanif70]ip addr 192.168.22.5 29</span><br><span class="line">[Core-Sw1-Vlanif70]q</span><br><span class="line">[Core-Sw1]port-group group-member g0/0/4 to g0/0/6</span><br><span class="line">[Core-Sw1-port-group]po li tr</span><br><span class="line">[Core-Sw1-port-group]po tr al vl all</span><br><span class="line">[Core-Sw1-port-group]q</span><br></pre></td></tr></table></figure>
</li>
<li><p>Core-sw2</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Core-sw2]vlan batch 10 20 30 40 50 60 70</span><br><span class="line">[Core-sw2]int vl 10</span><br><span class="line">[Core-sw2-Vlanif10]ip addr 192.168.10.252 23</span><br><span class="line">[Core-sw2-Vlanif10]q</span><br><span class="line">[Core-sw2]int vl 20</span><br><span class="line">[Core-sw2-Vlanif20]ip addr 192.168.20.252 23</span><br><span class="line">[Core-sw2-Vlanif20]q</span><br><span class="line">[Core-sw2]int vl 30</span><br><span class="line">[Core-sw2-Vlanif30]ip addr 192.168.30.252 23</span><br><span class="line">[Core-sw2-Vlanif30]q</span><br><span class="line">[Core-sw2]int vl 40</span><br><span class="line">[Core-sw2-Vlanif40]ip addr 192.168.17.253 23</span><br><span class="line">[Core-sw2-Vlanif40]q</span><br><span class="line">[Core-sw2]int vl 50</span><br><span class="line">[Core-sw2-Vlanif50]ip addr 192.168.19.253 23</span><br><span class="line">[Core-sw2-Vlanif50]q</span><br><span class="line">[Core-sw2]int vl 60 </span><br><span class="line">[Core-sw2-Vlanif60]ip addr 192.168.21.253 23</span><br><span class="line">[Core-sw2-Vlanif60]q</span><br><span class="line">[Core-sw2]int vl 70</span><br><span class="line">[Core-sw2-Vlanif70]ip addr 192.168.22.4 29</span><br><span class="line">[Core-sw2-Vlanif70]q</span><br><span class="line">[Core-Sw2]port-group group-member g0/0/4 to g0/0/6</span><br><span class="line">[Core-Sw2-port-group]po li tr</span><br><span class="line">[Core-Sw2-port-group]po tr al vl all</span><br><span class="line">[Core-Sw2-port-group]q</span><br></pre></td></tr></table></figure>
</li>
<li><p>Conv-sw1</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Conv-sw1]port-group group-member e0/0/1 to e0/0/2</span><br><span class="line">[Conv-sw1-port-group]po li tr</span><br><span class="line">[Conv-sw1-port-group]po tr al vl all</span><br><span class="line">[Conv-sw1-port-group]q</span><br><span class="line">[Conv-sw1]int e0/0/3</span><br><span class="line">[Conv-sw1-Ethernet0/0/3]po li ac</span><br><span class="line">[Conv-sw1-Ethernet0/0/3]p de vl 10</span><br><span class="line">[Conv-sw1-Ethernet0/0/3]q</span><br><span class="line">[Conv-sw1]int e0/0/4</span><br><span class="line">[Conv-sw1-Ethernet0/0/4]po li ac</span><br><span class="line">[Conv-sw1-Ethernet0/0/4]po de vl 20</span><br><span class="line">[Conv-sw1-Ethernet0/0/4]q</span><br><span class="line">[Conv-sw1]int e0/0/5</span><br><span class="line">[Conv-sw1-Ethernet0/0/5]po li ac</span><br><span class="line">[Conv-sw1-Ethernet0/0/5]po de vl 30</span><br><span class="line">[Conv-sw1-Ethernet0/0/5]q</span><br></pre></td></tr></table></figure>
</li>
<li><p>Conv-sw2</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Conv-sw2]port-group group-member e0/0/1 to e0/0/2</span><br><span class="line">[Conv-sw2-port-group]po li tr</span><br><span class="line">[Conv-sw2-port-group]po tr al vl all</span><br><span class="line">[Conv-sw2-port-group]q</span><br><span class="line">[Conv-sw2]int e0/0/3</span><br><span class="line">[Conv-sw2-Ethernet0/0/3]po li ac </span><br><span class="line">[Conv-sw2-Ethernet0/0/3]po de vl 40</span><br><span class="line">[Conv-sw2-Ethernet0/0/3]q</span><br><span class="line">[Conv-sw2]int e0/0/4</span><br><span class="line">[Conv-sw2-Ethernet0/0/4]po li ac</span><br><span class="line">[Conv-sw2-Ethernet0/0/4]po de vl 50</span><br><span class="line">[Conv-sw2-Ethernet0/0/4]q</span><br><span class="line">[Conv-sw2]int e0/0/5</span><br><span class="line">[Conv-sw2-Ethernet0/0/5]po li ac</span><br><span class="line">[Conv-sw2-Ethernet0/0/5]po de vl 60</span><br><span class="line">[Conv-sw2-Ethernet0/0/5]q</span><br></pre></td></tr></table></figure>
</li>
<li><p>Conv-sw3</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Conv-sw3]port-group group-member e0/0/1 to e0/0/2</span><br><span class="line">[Conv-sw3-port-group]po li tr</span><br><span class="line">[Conv-sw3-port-group]po tr al vl all</span><br><span class="line">[Conv-sw3-port-group]q</span><br><span class="line">[Conv-sw3]int e0/0/3</span><br><span class="line">[Conv-sw3-Ethernet0/0/3]po li ac</span><br><span class="line">[Conv-sw3-Ethernet0/0/3]po de vl 70</span><br><span class="line">[Conv-sw3-Ethernet0/0/3]q</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="2、链路聚合"><a href="#2、链路聚合" class="headerlink" title="2、链路聚合"></a>2、链路聚合</h3><ul>
<li><p>Core-sw1</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Core-Sw1]int eth-tr 1</span><br><span class="line">[Core-Sw1-Eth-Trunk1]mode manual load-balance</span><br><span class="line">[Core-Sw1-Eth-Trunk1]int g0/0/2</span><br><span class="line">[Core-Sw1-GigabitEthernet0/0/2]eth-tr 1</span><br><span class="line">[Core-Sw1-GigabitEthernet0/0/2]q</span><br><span class="line">[Core-Sw1]int g0/0/1</span><br><span class="line">[Core-Sw1-GigabitEthernet0/0/1]eth-tr 1</span><br><span class="line">[Core-Sw1-GigabitEthernet0/0/1]q</span><br><span class="line">[Core-Sw1]int eth-tr 1</span><br><span class="line">[Core-Sw1-Eth-Trunk1]po li tr</span><br><span class="line">[Core-Sw1-Eth-Trunk1]po tr al vl all</span><br><span class="line">[Core-Sw1-Eth-Trunk1]load-balance src-dst-mac</span><br><span class="line">[Core-Sw1-Eth-Trunk1]le ac 2</span><br><span class="line">[Core-Sw1-Eth-Trunk1]q</span><br></pre></td></tr></table></figure>
</li>
<li><p>Core-sw2</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Core-sw2]int eth-tr 1</span><br><span class="line">[Core-sw2-Eth-Trunk1]mode ma lo</span><br><span class="line">[Core-sw2-Eth-Trunk1]q</span><br><span class="line">[Core-sw2]int g0/0/2</span><br><span class="line">[Core-sw2-GigabitEthernet0/0/2]eth-tr 1</span><br><span class="line">[Core-sw2-GigabitEthernet0/0/2]q</span><br><span class="line">[Core-sw2]int g0/0/1</span><br><span class="line">[Core-sw2-GigabitEthernet0/0/1]eth-tr 1</span><br><span class="line">[Core-sw2-GigabitEthernet0/0/1]q</span><br><span class="line">[Core-sw2]int eth-tr 1</span><br><span class="line">[Core-sw2-Eth-Trunk1]po li tr</span><br><span class="line">[Core-sw2-Eth-Trunk1]po tr al vl all</span><br><span class="line">[Core-sw2-Eth-Trunk1]load-balance src-dst-mac</span><br><span class="line">[Core-sw2-Eth-Trunk1]le ac 2</span><br><span class="line">[Core-sw2-Eth-Trunk1]q</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="3、VRRP备份"><a href="#3、VRRP备份" class="headerlink" title="3、VRRP备份"></a>3、VRRP备份</h3><table>
<thead>
<tr>
<th align="center">VLAN编号</th>
<th align="center">虚拟网关</th>
<th align="center">Core-sw1&#x2F;Core-sw2优先级</th>
<th align="center">Core-sw1&#x2F;Core-sw2</th>
</tr>
</thead>
<tbody><tr>
<td align="center">VLAN10</td>
<td align="center">192.168.10.254</td>
<td align="center">150&#x2F;100</td>
<td align="center">Master&#x2F;Backup</td>
</tr>
<tr>
<td align="center">VLAN20</td>
<td align="center">192.168.20.254</td>
<td align="center">100&#x2F;150</td>
<td align="center">Backup&#x2F;Master</td>
</tr>
<tr>
<td align="center">VLAN30</td>
<td align="center">192.168.30.254</td>
<td align="center">150&#x2F;100</td>
<td align="center">Master&#x2F;Backup</td>
</tr>
<tr>
<td align="center">VLAN40</td>
<td align="center">192.168.40.254</td>
<td align="center">100&#x2F;150</td>
<td align="center">Backup&#x2F;Master</td>
</tr>
<tr>
<td align="center">VLAN50</td>
<td align="center">192.168.50.254</td>
<td align="center">150&#x2F;100</td>
<td align="center">Master&#x2F;Backup</td>
</tr>
<tr>
<td align="center">VLAN60</td>
<td align="center">192.168.60.254</td>
<td align="center">100&#x2F;150</td>
<td align="center">Backup&#x2F;Master</td>
</tr>
<tr>
<td align="center">VLAN70</td>
<td align="center">192.168.70.254</td>
<td align="center">150&#x2F;100</td>
<td align="center">Master&#x2F;Backup</td>
</tr>
</tbody></table>
<ul>
<li><p>Core-sw1</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Core-Sw1]int vl 10</span><br><span class="line">[Core-Sw1-Vlanif10]vrrp vrid 10 virtual-ip 192.168.10.254</span><br><span class="line">[Core-Sw1-Vlanif10]vrrp vrid 10 pri 150</span><br><span class="line">[Core-Sw1-Vlanif10]vrrp vr 10 track interface GigabitEthernet 0/0/6 reduced 60</span><br><span class="line">[Core-Sw1-Vlanif10]q</span><br><span class="line">[Core-Sw1]int vl 20</span><br><span class="line">[Core-Sw1-Vlanif20]vrrp vr 20 vi 192.168.20.254</span><br><span class="line">[Core-Sw1-Vlanif20]q</span><br><span class="line">[Core-Sw1]int vl 30</span><br><span class="line">[Core-Sw1-Vlanif30]vrrp vr 30 vi 192.168.30.254</span><br><span class="line">[Core-Sw1-Vlanif30]vrrp vr 30 pri 150</span><br><span class="line">[Core-Sw1-Vlanif30]vrrp vr 30 track interface GigabitEthernet 0/0/6 reduced 60</span><br><span class="line">[Core-Sw1-Vlanif30]q</span><br><span class="line">[Core-Sw1]int vl 40</span><br><span class="line">[Core-Sw1-Vlanif40]vrrp vr 40 vi 192.168.40.254</span><br><span class="line">[Core-Sw1-Vlanif40]q</span><br><span class="line">[Core-Sw1]int vl 50</span><br><span class="line">[Core-Sw1-Vlanif50]vrrp vr 50 vi 192.168.50.254</span><br><span class="line">[Core-Sw1-Vlanif50]vrrp vr 50 pri 150</span><br><span class="line">[Core-Sw1-Vlanif50]vrrp vr 50 track interface GigabitEthernet 0/0/6 reduced 60</span><br><span class="line">[Core-Sw1-Vlanif50]q</span><br><span class="line">[Core-Sw1]int vl 60</span><br><span class="line">[Core-Sw1-Vlanif60]vrrp vr 60 vi 192.168.60.254</span><br><span class="line">[Core-Sw1-Vlanif60]q</span><br><span class="line">[Core-Sw1]int vl 70</span><br><span class="line">[Core-Sw1-Vlanif70]vrrp vr 70 vi 192.168.70.254</span><br><span class="line">[Core-Sw1-Vlanif70]vrrp vr 70 pri 150</span><br><span class="line">[Core-Sw1-Vlanif70]vrrp vr 70 track interface GigabitEthernet 0/0/6 reduced 60</span><br><span class="line">[Core-Sw1-Vlanif70]q</span><br></pre></td></tr></table></figure>
</li>
<li><p>Core-sw2</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Core-sw2]int vl 10</span><br><span class="line">[Core-sw2-Vlanif10]vrrp vrid 10 virtual-ip 192.168.10.254</span><br><span class="line">[Core-sw2-Vlanif10]q</span><br><span class="line">[Core-sw2]int vl 20</span><br><span class="line">[Core-sw2-Vlanif20]vrrp vr 20 vi 192.168.20.254</span><br><span class="line">[Core-sw2-Vlanif20]vrrp vr 20 pri 150</span><br><span class="line">[Core-sw2-Vlanif20]vrrp vr 20 track interface GigabitEthernet 0/0/6 reduced 60</span><br><span class="line">[Core-sw2-Vlanif20]q</span><br><span class="line">[Core-sw2]int vl 30</span><br><span class="line">[Core-sw2-Vlanif30]vrrp vr 30 vi 192.168.30.254</span><br><span class="line">[Core-sw2-Vlanif30]q</span><br><span class="line">[Core-sw2]int vl 40</span><br><span class="line">[Core-sw2-Vlanif40]vrrp vr 40 vi 192.168.40.254</span><br><span class="line">[Core-sw2-Vlanif40]vrrp vr 40 pri 150</span><br><span class="line">[Core-sw2-Vlanif40]vrrp vr 40 track interface GigabitEthernet 0/0/6 reduced 60</span><br><span class="line">[Core-sw2-Vlanif40]q</span><br><span class="line">[Core-sw2]int vl 50</span><br><span class="line">[Core-sw2-Vlanif50]vrrp vr 50 vi 192.168.50.254</span><br><span class="line">[Core-sw2-Vlanif50]q</span><br><span class="line">[Core-sw2]int vl 60</span><br><span class="line">[Core-sw2-Vlanif60]vrrp vr 60 vi 192.168.60.254</span><br><span class="line">[Core-sw2-Vlanif60]vrrp vr 60 pri 150</span><br><span class="line">[Core-sw2-Vlanif60]vrrp vr 60 track interface GigabitEthernet 0/0/6 reduced 60</span><br><span class="line">[Core-sw2-Vlanif60]q</span><br><span class="line">[Core-sw2]int vl 70</span><br><span class="line">[Core-sw2-Vlanif70]vrrp vr 70 vi 192.168.70.254</span><br><span class="line">[Core-sw2-Vlanif70]q</span><br><span class="line">[Core-sw2]</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="4、MSTP"><a href="#4、MSTP" class="headerlink" title="4、MSTP"></a>4、MSTP</h3><ul>
<li><p>Core-sw1</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Core-Sw1]stp mo mstp</span><br><span class="line">[Core-Sw1]stp region-configuration</span><br><span class="line">[Core-Sw1-mst-region]region-name huawei</span><br><span class="line">[Core-Sw1-mst-region]instance 1 vlan 10 30 50 70</span><br><span class="line">[Core-Sw1-mst-region]instance 2 vlan 20 40 60</span><br><span class="line">[Core-Sw1-mst-region]active region-configuration</span><br><span class="line">[Core-Sw1-mst-region]q</span><br><span class="line">[Core-Sw1]stp instance 1 root primary</span><br><span class="line">[Core-Sw1]stp instance 2 root secondary</span><br><span class="line">[Core-Sw1]stp enable</span><br></pre></td></tr></table></figure>
</li>
<li><p>Core-sw2</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Core-sw2]stp mo mstp</span><br><span class="line">[Core-sw2]stp region-configuration</span><br><span class="line">[Core-sw2-mst-region]region-name huawei</span><br><span class="line">[Core-sw2-mst-region]instance 1 vlan 10 30 50 70</span><br><span class="line">[Core-sw2-mst-region]instance 2 vlan 20 40 60</span><br><span class="line">[Core-sw2-mst-region]active region-configuration</span><br><span class="line">[Core-sw2-mst-region]q</span><br><span class="line">[Core-sw2]stp instance 1 root secondary</span><br><span class="line">[Core-sw2]stp instance 2 root primary</span><br><span class="line">[Core-sw2]stp en</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="5、DHCP"><a href="#5、DHCP" class="headerlink" title="5、DHCP"></a>5、DHCP</h3><ul>
<li><p>DHCP-Server</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[dhcp-server]dhcp enable</span><br><span class="line">[dhcp-server]ip pool 10</span><br><span class="line">[dhcp-server-ip-pool-10]gateway-list 192.168.10.252 192.168.10.253</span><br><span class="line">[dhcp-server-ip-pool-10]net 192.168.10.0 mask 24</span><br><span class="line">[dhcp-server-ip-pool-10]dns 8.8.8.8</span><br><span class="line">[dhcp-server-ip-pool-10]q</span><br><span class="line">[dhcp-server]ip pool 20</span><br><span class="line">[dhcp-server-ip-pool-20]gateway-list 192.168.20.252 192.168.20.253</span><br><span class="line">[dhcp-server-ip-pool-20]net 192.168.20.0 mask 24</span><br><span class="line">[dhcp-server-ip-pool-20]dns 8.8.8.8    </span><br><span class="line">[dhcp-server-ip-pool-20]q</span><br><span class="line">[dhcp-server]ip pool 30</span><br><span class="line">[dhcp-server-ip-pool-30]gateway-list 192.168.30.252 192.168.30.253</span><br><span class="line">[dhcp-server-ip-pool-30]net 192.168.30.0 mask 24</span><br><span class="line">[dhcp-server-ip-pool-30]dns 8.8.8.8</span><br><span class="line">[dhcp-server-ip-pool-30]q</span><br><span class="line">[dhcp-server]ip pool 40</span><br><span class="line">[dhcp-server-ip-pool-40]gateway-list 192.168.40.252 192.168.40.253</span><br><span class="line">[dhcp-server-ip-pool-40]net 192.168.40.0 mask 24</span><br><span class="line">[dhcp-server-ip-pool-40]dns 8.8.8.8</span><br><span class="line">[dhcp-server-ip-pool-40]q</span><br><span class="line">[dhcp-server]ip pool 50</span><br><span class="line">[dhcp-server-ip-pool-50]gateway-list 192.168.50.252 192.168.50.253</span><br><span class="line">[dhcp-server-ip-pool-50]net 192.168.50.0 mask 24</span><br><span class="line">[dhcp-server-ip-pool-50]dns 8.8.8.8</span><br><span class="line">[dhcp-server-ip-pool-50]q</span><br><span class="line">[dhcp-server]ip pool 60</span><br><span class="line">[dhcp-server-ip-pool-60]gateway-list 192.168.60.252 192.168.60.253</span><br><span class="line">[dhcp-server-ip-pool-60]net 192.168.60.0 mask 24</span><br><span class="line">[dhcp-server-ip-pool-60]dns 8.8.8.8</span><br><span class="line">[dhcp-server-ip-pool-60]q</span><br></pre></td></tr></table></figure>
</li>
<li><p>Core-sw1</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Core-sw1]ip pool 10</span><br><span class="line">[Core-sw1-ip-pool-10]net 192.168.10.0 mask 24</span><br><span class="line">[Core-sw1-ip-pool-10]gateway-list 192.168.10.254</span><br><span class="line">[Core-sw1-ip-pool-10]dns 8.8.8.8</span><br><span class="line">[Core-sw1-ip-pool-10]q</span><br><span class="line">[Core-sw1]in vl 10</span><br><span class="line">[Core-sw1-Vlanif10]dhcp se gl</span><br><span class="line">[Core-sw1-Vlanif10]ip pool 20</span><br><span class="line">[Core-sw1-ip-pool-20]net 192.168.20.0 mask 24</span><br><span class="line">[Core-sw1-ip-pool-20]gateway 192.168.20.254</span><br><span class="line">[Core-sw1-ip-pool-20]dns 8.8.8.8</span><br><span class="line">[Core-sw1-ip-pool-20]q</span><br><span class="line">[Core-sw1]ip pool 30</span><br><span class="line">[Core-sw1-ip-pool-30]net 192.168.30.0 mask 24</span><br><span class="line">[Core-sw1-ip-pool-30]gateway-list 192.168.30.254</span><br><span class="line">[Core-sw1-ip-pool-30]dns 8.8.8.8</span><br><span class="line">[Core-sw1-ip-pool-30]q</span><br><span class="line">[Core-sw1]in vl 20</span><br><span class="line">[Core-sw1-Vlanif20]dhcp se gl</span><br><span class="line">[Core-sw1-Vlanif20]in vl 30</span><br><span class="line">[Core-sw1-Vlanif30]dhcp se gl</span><br><span class="line">[Core-sw1-Vlanif30]q</span><br></pre></td></tr></table></figure>
</li>
<li><p>Core-sw2</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#DHCP中继</span><br><span class="line">[Core-sw2]dhcp en</span><br><span class="line">[Core-sw2]dhcp server group admin</span><br><span class="line">[Core-sw2-dhcp-server-group-admin]dhcp-server 192.168.70.1</span><br><span class="line">[Core-sw2-dhcp-server-group-admin]q</span><br><span class="line">[Core-sw2]vl    </span><br><span class="line">[Core-sw2]vlan-g    </span><br><span class="line">[Core-sw2]int vl 10</span><br><span class="line">[Core-sw2-Vlanif10]dhcp select relay</span><br><span class="line">[Core-sw2-Vlanif10]dhcp relay server-select admin</span><br><span class="line">[Core-sw2-Vlanif10]in vl 20</span><br><span class="line">[Core-sw2-Vlanif20]dhcp select relay</span><br><span class="line">[Core-sw2-Vlanif20]dhcp relay server-select admin</span><br><span class="line">[Core-sw2-Vlanif20]in vl 30</span><br><span class="line">[Core-sw2-Vlanif30]dhcp select relay</span><br><span class="line">[Core-sw2-Vlanif30]dhcp relay server-select admin</span><br><span class="line">[Core-sw2-Vlanif30]in vl 40</span><br><span class="line">[Core-sw2-Vlanif40]dhcp select relay</span><br><span class="line">[Core-sw2-Vlanif40]dhcp relay server-select admin</span><br><span class="line">[Core-sw2-Vlanif40]in vl 50</span><br><span class="line">[Core-sw2-Vlanif50]dhcp select relay</span><br><span class="line">[Core-sw2-Vlanif50]dhcp relay server-select admin</span><br><span class="line">[Core-sw2-Vlanif50]in vl 60</span><br><span class="line">[Core-sw2-Vlanif60]dhcp select relay</span><br><span class="line">[Core-sw2-Vlanif60]dhcp relay server-select admin</span><br><span class="line">[Core-sw2-Vlanif60]q</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="6、OSPF"><a href="#6、OSPF" class="headerlink" title="6、OSPF"></a>6、OSPF</h3><ul>
<li><p>AR</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[AR]router id 1.1.1.1</span><br><span class="line">[AR]ospf 1</span><br><span class="line">[AR-ospf-1]area 0</span><br><span class="line">[AR-ospf-1-area-0.0.0.0]net 192.168.1.0 0.0.0.255</span><br><span class="line">[AR-ospf-1-area-0.0.0.0]net 192.168.2.0 0.0.0.255</span><br></pre></td></tr></table></figure>
</li>
<li><p>Core-sw1</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Core-sw1]ospf 1 router-id 2.2.2.2</span><br><span class="line">[Core-sw1-ospf-1]area 0</span><br><span class="line">[Core-sw1-ospf-1-area-0.0.0.1]net 192.168.1.0 0.0.0.255</span><br><span class="line">[Core-sw1-ospf-1-area-0.0.0.1]net 192.168.0.0 0.0.255.255</span><br></pre></td></tr></table></figure>
</li>
<li><p>Core-sw2</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Core-sw2]ospf 1 router-id 3.3.3.3</span><br><span class="line">[Core-sw2-ospf-1]area 2</span><br><span class="line">[Core-sw2-ospf-1-area-0.0.0.2]net 192.168.2.0 0.0.0.255</span><br><span class="line">[Core-sw2-ospf-1-area-0.0.0.2]net 192.168.0.0 0.0.255.255</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="7、NAT"><a href="#7、NAT" class="headerlink" title="7、NAT"></a>7、NAT</h3><ul>
<li><p>AR</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[R1]ACL 2000</span><br><span class="line">[R1-acl-basic-2000]rule 10 permit source 192.168.0.0 0.0.255.255 </span><br><span class="line">[R1-acl-basic-2000]q</span><br><span class="line">[R1]nat address-group 1 200.1.1.5 200.1.1.9</span><br><span class="line">[R1]int g0/0/2</span><br><span class="line">[R1-GigabitEthernet0/0/2]nat outbound 2000 address-group 1</span><br><span class="line">[R1-GigabitEthernet0/0/2]q</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="8、ARP动态检测"><a href="#8、ARP动态检测" class="headerlink" title="8、ARP动态检测"></a>8、ARP动态检测</h3><ul>
<li><p>Core-sw1</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Conv-sw1]port-group group-member g0/0/3 to g0/0/5</span><br><span class="line">[Conv-sw1-port-group]arp anti-attack check user-bind enable</span><br><span class="line">[Conv-sw1-GigabitEthernet0/0/3]arp anti-attack check user-bind enable</span><br><span class="line">[Conv-sw1-GigabitEthernet0/0/4]arp anti-attack check user-bind enable</span><br><span class="line">[Conv-sw1-GigabitEthernet0/0/5]arp anti-attack check user-bind enable</span><br><span class="line">[Conv-sw1-port-group]q</span><br></pre></td></tr></table></figure>
</li>
<li><p>Core-sw2</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Conv-sw2]port-group group-member g0/0/3 to g0/0/5</span><br><span class="line">[Conv-sw2-port-group]arp anti-attack check user-bind enable</span><br><span class="line">[Conv-sw2-GigabitEthernet0/0/3]arp anti-attack check user-bind enable</span><br><span class="line">[Conv-sw2-GigabitEthernet0/0/4]arp anti-attack check user-bind enable</span><br><span class="line">[Conv-sw2-GigabitEthernet0/0/5]arp anti-attack check user-bind enable</span><br><span class="line">[Conv-sw2-port-group]q</span><br></pre></td></tr></table></figure>
</li>
<li><p>Core-sw3</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Conv-sw3]int g0/0/4</span><br><span class="line">[Conv-sw3-GigabitEthernet0/0/4]arp anti-attack check user-bind enable</span><br><span class="line">[Conv-sw3-GigabitEthernet0/0/4]q</span><br></pre></td></tr></table></figure>
</li>
<li><p>LW16</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Huawei]port-group group-member e0/0/2 to e0/0/4</span><br><span class="line">[Huawei-port-group]arp anti-attack check user-bind enable</span><br><span class="line">[Huawei-Ethernet0/0/2]arp anti-attack check user-bind enable</span><br><span class="line">[Huawei-Ethernet0/0/3]arp anti-attack check user-bind enable</span><br><span class="line">[Huawei-Ethernet0/0/4]arp anti-attack check user-bind enable</span><br><span class="line">[Huawei-port-group]q</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="IPsec-VPN"><a href="#IPsec-VPN" class="headerlink" title="IPsec VPN"></a>IPsec VPN</h3><ul>
<li><p>R1</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[R1] ip route-static 172.22.0.0 255.255.0.0 200.1.1.1</span><br><span class="line">[R1] ip route-static 201.1.1.0 255.255.255.0 200.1.1.1</span><br><span class="line">[R1]acl 3101</span><br><span class="line">[R1-acl-adv-3101]rule 5 permit ip source 200.1.1.0 0.0.0.255 destination 172.22.0.0 0.0.255.255</span><br><span class="line">[R1-acl-adv-3101]q</span><br><span class="line">[R1] ipsec proposal tran1</span><br><span class="line">[R1-ipsec-proposal-tran1] esp authentication-algorithm sha2-256</span><br><span class="line">[R1-ipsec-proposal-tran1] esp encryption-algorithm aes-128</span><br><span class="line">[R1-ipsec-proposal-tran1] q</span><br><span class="line">[R1] ipsec policy use1 10 manual</span><br><span class="line">[R1-ipsec-policy-manual-map1-10] security acl 3101</span><br><span class="line">[R1-ipsec-policy-manual-map1-10] proposal tran1</span><br><span class="line">[R1-ipsec-policy-manual-map1-10] tunnel remote 201.1.1.1</span><br><span class="line">[R1-ipsec-policy-manual-map1-10] tunnel local 200.1.1.1</span><br><span class="line">[R1-ipsec-policy-manual-map1-10] sa spi outbound esp 54321</span><br><span class="line">[R1-ipsec-policy-manual-map1-10] sa spi inbound esp 12345</span><br><span class="line">[R1-ipsec-policy-manual-map1-10] sa string-key outbound esp cipher huawei</span><br><span class="line">[R1-ipsec-policy-manual-map1-10] sa string-key inbound esp cipher huawei</span><br><span class="line">[R1-ipsec-policy-manual-map1-10] q</span><br><span class="line">[R1] int g0/0/2</span><br><span class="line">[R1-GigabitEthernet0/0/2] ipsec policy use1</span><br><span class="line">[R1-GigabitEthernet0/0/2] q</span><br></pre></td></tr></table></figure>
</li>
<li><p>R2</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[R2] ip route-static 172.22.0.0 255.255.0.0 200.1.1.1</span><br><span class="line">[R2] ip route-static 201.1.1.0 255.255.255.0 200.1.1.1</span><br><span class="line">[R2]acl 3101</span><br><span class="line">[R2-acl-adv-3101]rule 5 permit ip source 201.1.1.0 0.0.0.255 destination 192.168.0.0 0.0.255.255</span><br><span class="line">[R2-acl-adv-3101]q</span><br><span class="line">[R2] ipsec proposal tran1</span><br><span class="line">[R2-ipsec-proposal-tran1] esp authentication-algorithm sha2-256</span><br><span class="line">[R2-ipsec-proposal-tran1] esp encryption-algorithm aes-128</span><br><span class="line">[R2-ipsec-proposal-tran1] q</span><br><span class="line">[R2] ipsec policy map1 10 manual</span><br><span class="line">[R2-ipsec-policy-manual-map1-10] security acl 3101</span><br><span class="line">[R2-ipsec-policy-manual-map1-10] proposal tran1</span><br><span class="line">[R2-ipsec-policy-manual-map1-10] tunnel remote 200.1.1.1</span><br><span class="line">[R2-ipsec-policy-manual-map1-10] tunnel local 201.1.1.1</span><br><span class="line">[R2-ipsec-policy-manual-map1-10] sa spi outbound esp 12345</span><br><span class="line">[R2-ipsec-policy-manual-map1-10] sa spi inbound esp 54321</span><br><span class="line">[R2-ipsec-policy-manual-map1-10] sa string-key outbound esp cipher huawei</span><br><span class="line">[R2-ipsec-policy-manual-map1-10] sa string-key inbound esp cipher huawei</span><br><span class="line">[R2-ipsec-policy-manual-map1-10] q</span><br><span class="line">[R2] int g0/0/1</span><br><span class="line">[R2-GigabitEthernet0/0/1] ipsec policy map1</span><br><span class="line">[R2-GigabitEthernet0/0/1] q</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>赖总笔记</category>
      </categories>
      <tags>
        <tag>赖总笔记</tag>
        <tag>网络系统集成</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机组成原理</title>
    <url>/xuanyao/8d4b7ae1.html</url>
    <content><![CDATA[<h1 id="理论"><a href="#理论" class="headerlink" title="理论"></a>理论</h1><ol>
<li><p><strong>电子数字计算机和电子模拟计算机</strong></p>
<ul>
<li><p><strong>电子数字：</strong> 用数字表示数量的大小，特点是按位运算，且不连续跳动计算。</p>
</li>
<li><p><strong>电子模拟：</strong> “模拟”就是相似的意思，如：电表用角度反映电量大小，特点数值由连续量来表示，运算过程也是连续的 。</p>
</li>
<li><p><strong>电子数字计算机与电子模拟计算机的主要区别：</strong> </p>
<table>
<thead>
<tr>
<th align="center">比较内容</th>
<th align="center">电子数字计算机</th>
<th align="center">电子模拟计算机</th>
</tr>
</thead>
<tbody><tr>
<td align="center">数据表示方式</td>
<td align="center">数字0和1</td>
<td align="center">电压</td>
</tr>
<tr>
<td align="center">计算方式</td>
<td align="center">数字计数</td>
<td align="center">电压组合和测量值</td>
</tr>
<tr>
<td align="center">控制方式</td>
<td align="center">程序控制</td>
<td align="center">盘上连线</td>
</tr>
<tr>
<td align="center">精度</td>
<td align="center">高</td>
<td align="center">低</td>
</tr>
<tr>
<td align="center">数据存储量</td>
<td align="center">大</td>
<td align="center">小</td>
</tr>
<tr>
<td align="center">逻辑判断能力</td>
<td align="center">强</td>
<td align="center">无</td>
</tr>
</tbody></table>
</li>
</ul>
</li>
<li><p><strong>专用计算机和通用计算机</strong> </p>
<ul>
<li><p>电子数字计算机可分为专用计算机和通用计算机。</p>
<p><u>专用和通用是根据计算机的效率、速度、价格、运行的经济性和适应性来划分的。</u></p>
</li>
<li><p><strong>专用计算机：</strong> 最有效、最经济和最快速的计算机，但适应性差。</p>
</li>
<li><p><strong>通用计算机：</strong> 适应性强，但牺牲了效率、速度和经济性。</p>
</li>
</ul>
</li>
<li><p><strong>计算机的性能指标</strong> </p>
<ul>
<li><p>吞吐量：一台计算机在某一时间间隔内能够处理的信息量。</p>
</li>
<li><p>响应时间：从输入有效到系统产生响应之间的时间度量，用时间单位度量。</p>
</li>
<li><p>存储器容量：存储器中所有存储单元的总数目，通常用KB、MB、GB、TB表示。</p>
</li>
<li><p>存储器带宽：单位时间内从存储器读出的二进制数信息量，一般用<u>字节数&#x2F;秒</u> 表示。</p>
</li>
</ul>
</li>
<li><p>外存储器：存储容量更大的磁盘存储器或光盘存储器。</p>
<p>内存储器：半导体存储器</p>
</li>
<li><p><strong>指令流：</strong> 在取指周期中从内存中读出的信息流，它流向控制器。</p>
<p><strong>数据流：</strong> 在执行周期中从内存中读出的信息流，它由内存流向运算器。</p>
</li>
<li><p><strong>存储器的技术指标</strong></p>
<ul>
<li><p><strong>存储容量：</strong> 一个存储器中可存储的信息比特数，用比特数（bit）或字节数（B）表示，也可用KB、MB、GB、TB等，$1KB&#x3D;2^{10}B,1MB&#x3D;2^{20}B$。</p>
</li>
<li><p><strong>存储器带宽（数据传送速率，频宽）：</strong> 单位时间存储器所存取的信息量，bit&#x2F;s、B&#x2F;s</p>
</li>
</ul>
</li>
<li><p><strong>主存与cache的地址映射</strong> </p>
<ul>
<li><p><strong>全相联映射方式：</strong> 将主存中的一个块的地址（块号）与块的内容一起存于cache的行中，其中块地址存于cache行的标记部分中。</p>
<ul>
<li><p>优点：可使主存的一个块直接复制到cache中的任意一行，非常灵活。</p>
</li>
<li><p>缺点：高速比较器电路难于设计和实现，因此只适合于小容量cache采用。</p>
</li>
</ul>
</li>
<li><p><strong>直接映射方式：</strong>   一个主存块只能拷贝到cache的一个特定行位置上去。</p>
<ul>
<li><p>优点：硬件简单，成本低，地址变换速度快。</p>
</li>
<li><p>缺点：每个主存块只有一个固定位置的行位置可存放。</p>
<p>若连续访问块号相距m整数倍的两个块，因两块映射到同一cache行时，就会发生冲突。发生冲突时就要将原先存入的行换出去，但很可能过一段时间又要换入。频繁置换会使cache效率下降。因此直接映射方式适合于需要大容量cache的场合，更多的行数可以减小冲突的机会。</p>
</li>
</ul>
</li>
<li><p><strong>组相联映射方式：</strong> 主存和cache都分组，主存中的一个组内块数与cache中的分组数相同，<strong>组间采用直接映射，组内采用全相联映射。</strong> </p>
<ul>
<li>适度兼顾二者的优点，尽量避免二者的缺点，因而得到普遍采用。</li>
</ul>
</li>
</ul>
</li>
<li><p><strong>机器指令：</strong> 介于微指令与宏指令之间的指令。</p>
<p><strong>系列计算机：</strong> 基本指令系统相同、基本体系结构相同的一系列计算机。</p>
<p><strong>指令字长度：</strong> 一个指令中包含二进制代码的位数。</p>
<p><strong>机器字长：</strong> 计算机能直接处理的二进制数据的位数，它决定了计算机的运行精度，通常与主存单元的位数一致。</p>
</li>
<li><p><strong>CPU中的主要寄存器</strong> </p>
<ul>
<li><p><strong>数据缓冲寄存器（DR）</strong>：用来暂时存放ALU的运算结果，或由数据存储器读出的一个数据字，或来自外部接口的一个数据字。</p>
<p><strong>作用：</strong> </p>
<ul>
<li><p>作为ALU运算结果和通用寄存器之间信息传送中时间上的缓冲；</p>
</li>
<li><p>补偿CPU和内存、外围设备之间在操作速度上的差别。</p>
</li>
</ul>
</li>
<li><p><strong>指令寄存器（IR）</strong>：用来保存当前正在执行的一条指令。</p>
<p><code>当执行一条命令时，先把它从指令存储器读出，然后再传送至指令寄存器。</code></p>
<p><code>操作码中的OP输出后到指令译码器，译码后发生信号到操作控制器。</code></p>
</li>
<li><p><strong>程序计数器（PC）</strong>：确定下一条指令地址，保证程序能够继续地执行下去，又称为指令计数器。 </p>
<p><code>程序执行前，必须将它的起始地址，即程序的第一条指令所在的指存单元地址送入PC，当执行指令时，CPU自动修改PC内容，使其保持的总是要执行的下一条指令地址。</code></p>
</li>
<li><p><strong>数据地址寄存器（AR）</strong>：用来保存当前CPU所访问的数据存储器单元的地址。</p>
<p><code>由于要对存储器阵列进行地址译码，所以必须使用地址寄存器来保持地址信息，直到一次读/写操作完成。</code></p>
</li>
<li><p><strong>通用寄存器</strong>：当算术逻辑单元（ALU）执行算术或逻辑运算时，为ALU提供一个工作区。</p>
<p><code>模型中通用寄存器有4个（R0~R3），可达64个，甚至更多。</code></p>
</li>
<li><p><strong>程序状态字寄存器（PSWR）</strong>：保存由算术运算指令和逻辑运算指令运算或测试结果建立的各种条件代码。如：运算结果进位标志（C）、运算结果溢出标志（V）、运算结果为零标志（Z）、运算结果为负标志（N）等。</p>
<p>保存中断和系统工作状态等信息，以便使CPU和系统能及时了解机器运行状态和程序运行状态。</p>
<p><code>也被称为状态条件寄存器</code></p>
</li>
</ul>
</li>
<li><p><strong>指令周期</strong> ：取出一条指令并执行这条指令的时间。</p>
</li>
<li><p><strong>取值周期中CPU完成三件事</strong>：</p>
<ul>
<li><p>从指存取出指令；</p>
</li>
<li><p>对程序计数器PC加1，以便为取下一条指令做好准备；</p>
</li>
<li><p>对指令操作码进行译码或测试，以便进行什么操作。</p>
</li>
</ul>
</li>
<li><p><strong>微命令和微操作</strong>：</p>
<ul>
<li><p><strong>微命令：</strong> 控制部件通过控制线向执行部件发出各种控制命令。</p>
</li>
<li><p><strong>微操作：</strong> 执行部件接受微命令后所进行的操作。</p>
<ul>
<li><p><strong>相容性的微操作：</strong> 在同时或同一个CPU周期内可以并行执行的微操作。</p>
</li>
<li><p><strong>相斥性的微操作：</strong> 不能在同时或不能在同一个CPU周期内并行执行的微操作。</p>
</li>
</ul>
</li>
</ul>
</li>
<li><p><strong>总线：</strong> 构成计算机系统的互联机构，是多个系统功能部件之间进行数据传送的公共通路。</p>
<p><strong>总线带宽：</strong> 总线能达到的最高传输速率，<code>衡量总线性能的重要指标。</code></p>
</li>
<li><p><strong>集中式仲裁</strong></p>
<p><code>BR:送往仲裁器的总线请求信号线</code></p>
<p><code>BG:仲裁器送出的总线授权信号线</code> </p>
<ul>
<li><p><strong>链式查询方式的主要特点：</strong> 总线授权信号线BG串行地从一个I&#x2F;O接口传送到下一个I&#x2F;O接口。若BG到达的接口无总线请求，则继续往下查询；若有请求，BG信号便不再往下查询。这意味着该I&#x2F;O接口获得了总线控制权。</p>
<p>离总线仲裁器越近的设备具有最高优先级，离总线仲裁器越远，优先级越低</p>
<p><strong>优点：</strong> 只用很少的几根线就能按一定优先次序实现总线仲裁，且这种链式结构易扩充设备。</p>
<p><strong>缺点：</strong> 对询问链的电路故障很敏感，查询链优先级固定，若出现优先级高的设备频繁请求，则优先级低的设备可能长期不能使用总线。</p>
</li>
<li><p><strong>计数器定时查询方式：</strong> 计数从0开始时，设备优先级与链式查询法相同，优先级固定。从中止点开始时，每个设备优先级相等。计数器的初始值可用程序设置，可更加方便的改变优先次序，以增加线数为代价提高灵活性。</p>
</li>
<li><p><strong>独立请求方式：</strong></p>
<ul>
<li><p>响应时间快（确定优先响应设备所花时间少）；</p>
</li>
<li><p>对优先次序的控制相当灵活（可预先固定优先次序，或通过程序改变优先次序，或屏蔽某个请求来不响应无效设备的请求）。</p>
</li>
</ul>
</li>
</ul>
</li>
<li><p><strong>CPU管理外围设备的方式</strong></p>
<ul>
<li><p><strong>无条件传送方式：</strong> 简单I&#x2F;O方式，CPU不必通过接口查询外设状态，直接执行I&#x2F;O指令进行数据传输。</p>
</li>
<li><p><strong>程序查询方式（串行）：</strong> 优点是CPU的操作和外围设备的操作同步，软硬件结构简单。</p>
<p>缺点是在查询环节CPU耗时多。</p>
<p>只适用于低速外设或CPU不繁忙的情况。</p>
</li>
<li><p><strong>程序中断方式（并行）：</strong> 并行，交换信息量少，节省CPU时间</p>
<p>缺点：硬件结构相对复杂，软件复杂度更高，服务开销时间大。</p>
<p>适用于随机出现的服务请求，且请求提出后能及时得到响应。</p>
</li>
<li><p><strong>直接内存访问方式（DMA）：</strong> </p>
<p>优点：并行，数据传输速度高，交换数据以数据块为单位，传送速率只受内存访问时间的限制。</p>
<p>缺点：需要更多硬件，实现简单数据传送，难以识别和处理复杂事态。</p>
<p>适用于内存和高速外围设备之间大批数据交换的场合。</p>
</li>
<li><p><strong>通道和输入&#x2F;输出处理器：</strong> CPU负责处理，通道负责数据传输。以耗费更多硬件为代价，提高了CPU工作效率。</p>
</li>
<li><p>程序查询方式、程序中断方式适用于数据传输率较低的外围设。</p>
<p>DMA、通道、IOP适用于数据传输率较高的设备。</p>
</li>
</ul>
</li>
<li><p><strong>中断源：</strong> 引起中断的事件。</p>
<p><strong>中断向量：</strong> 中断源对应服务程序的入口地址。</p>
</li>
<li><p><strong>通道</strong> </p>
<ul>
<li><p><strong>选择通道</strong>：可连接多设备，但不能同时工作，在某一段时间内通道只能选择一个设备进行工作。当这个设备的通道程序全部执行完成后，才能执行其他设备的通道程序。</p>
<p>主要用于连接高速外围设备，如：磁盘、磁带，信息以数据块方式高速传输。</p>
<p>由于这类设备辅助操作时间长，通道等待时间长，故通道利用率不高。</p>
</li>
<li><p><strong>多路通道：</strong> 同一时间能处理多个I&#x2F;O设备的数据传输。 </p>
<ul>
<li><p><strong>数组多路通道：</strong> 当某设备进行数据传送时，通道只为该设备服务，当设备在执行控制性动作时，通道与该设备连接断开，挂起该设备通道程序，为其他设备服务。通道效率充分发挥。</p>
<p>物理上连接多设备，在一段时间内交替执行多个设备的通道程序（逻辑上连接多设备），这些设备为高速设备。 </p>
</li>
<li><p><strong>字节多路通道：</strong> 主要用于连接大量低速设备。利用传送数据的空闲时间为其他设备服务。</p>
</li>
<li><p><strong>共同之处：</strong> 都是多路通道，在一段时间内能交替执行多个设备的通道程序，使这些设备同时工作。</p>
</li>
<li><p><strong>不同之处：</strong> （1）数组多路允许多设备同时工作，但只允许一个设备进行传输型操作，其他设备进行控制型操作。字节多路允许多设备同时工作，且允许同时进行传输型操作。</p>
<p>（2）数组多路通道与设备间数据传送的基本单位是数据块，而字节多路通道与设备间的数据传送基本单位是字节。</p>
</li>
</ul>
</li>
</ul>
</li>
<li><p><strong>流水线中的主要问题</strong> ：</p>
<ul>
<li><p><strong>资源相关：</strong> 多条指令进入流水线后在同一机器时钟周期内争用一个功能部件所发生的冲突。</p>
<p><strong>解决方法：</strong></p>
<ul>
<li><p>让一条指令停顿一拍后再启动；</p>
</li>
<li><p>增设一个存储器，将指令和数据分别放在两个存储器中。</p>
</li>
</ul>
</li>
<li><p><strong>数据相关：</strong> 前指令执行完毕后，才能执行后指令，这两条指令数据相关。</p>
<p>多条指令的重叠处理，当后继指令所需操作数，刚好是前一条指令的运算结果时，便发生“先读后写”的数据相关冲突。</p>
<p><strong>解决方法：</strong> </p>
<ul>
<li><strong>定向传送技术</strong>：流水CPU的运算器中设置若干运算结果缓存寄存器，暂时保存运算结果，以便后继指令使用</li>
</ul>
</li>
<li><p><strong>控制相关：</strong> 由转移指令引起，当执行转移指令时，依据转移条件的产生结果，可能为顺序取下一条指令；也可能转移到新的目标地址取指令，从而使流水线发生断流。</p>
<p><strong>解决方法：</strong> </p>
<ul>
<li><p><strong>延迟转移法：</strong> 编译程序重排指令序列。先执行再转移，即：发生转移时，让转移指令后已进入流水线的少数几条指令继续完成。</p>
</li>
<li><p><strong>转移预测法：</strong> 硬件方法实现，依据指令过去行为预测将来行为。通过使用转移取和顺序取两路指令预取队列器以及目标指令cache，可将转移预测提前到取指阶段进行，以获得良好的效果。</p>
</li>
</ul>
</li>
</ul>
</li>
<li><p><strong>浮点数加、减法运算过程：</strong> </p>
<ul>
<li><p>0操作数检查</p>
</li>
<li><p>比较阶码大小并完成对阶</p>
</li>
<li><p>位数进行加或减运算</p>
</li>
<li><p>结果规格化并进行舍入处理</p>
</li>
</ul>
</li>
<li><p><strong>寻址方式</strong></p>
<p> <img src="E:\Note\image\2023-02-17-15-09-42-image.png"></p>
</li>
</ol>
<h1 id="计算"><a href="#计算" class="headerlink" title="计算"></a>计算</h1><p><img src="E:\Note\image\IMG_20230218_162727_edit_150935691543114.jpg" alt="IMG_20230218_162727_edit_150935691543114.jpg"></p>
<p><img src="E:\Note\image\IMG_20230218_162740_edit_150952097059778.jpg" alt="IMG_20230218_162740_edit_150952097059778.jpg"></p>
<p><img src="E:\Note\image\IMG_20230218_162748_edit_150961824709777.jpg" alt="IMG_20230218_162748_edit_150961824709777.jpg"></p>
<p><img src="E:\Note\image\IMG_20230218_162757_edit_150975003709254.jpg" alt="IMG_20230218_162757_edit_150975003709254.jpg"></p>
<p><img src="E:\Note\image\IMG_20230218_162810_edit_150987802701960.jpg" alt="IMG_20230218_162810_edit_150987802701960.jpg"></p>
<p><img src="E:\Note\image\IMG_20230218_162818_edit_150998936939458.jpg" alt="IMG_20230218_162818_edit_150998936939458.jpg"></p>
<p><img src="E:\Note\image\IMG_20230216_231310.jpg" alt="IMG_20230216_231310.jpg"></p>
]]></content>
      <categories>
        <category>赖总笔记</category>
      </categories>
      <tags>
        <tag>赖总笔记</tag>
        <tag>计算机组成原理</tag>
      </tags>
  </entry>
  <entry>
    <title>网络编程</title>
    <url>/xuanyao/f6491cfb.html</url>
    <content><![CDATA[<h2 id="NAT-网络地址转换"><a href="#NAT-网络地址转换" class="headerlink" title="NAT(网络地址转换)"></a>NAT(网络地址转换)</h2><p><strong>1、背景：</strong>  IP地址短缺，IPv6迁移缓慢，需要一个快速的、能够马上投入使用的解决方法，解决IP地址短缺问题。</p>
<p><strong>2、作用：</strong> 将私有地址转换为公有地址，有效避免来自网络外部的攻击，隐藏并保护内部计算机。</p>
<p><strong>3、实现方式：</strong></p>
<ul>
<li><strong>静态转换：</strong> 将私有IP地址转换为公有IP时，IP地址是一对一的，是一成不变。</li>
<li><strong>动态转换：</strong> 将私有IP地址转换为公有IP时，IP地址是不确定的，是随机的。当ISP提供的合法IP地址略少于网络内部计算机数量时，可以使用该方式。</li>
<li><strong>端口多路复用：</strong> 改变外出数据包的源端口并进行端口的地址转换(<strong>PAT</strong>)。内部网络主机共享一个合法外部IP地址实现对Internet的访问。<em>最大限度节约IP地址资源。</em></li>
</ul>
<p><strong>4、问题：</strong> 外网无法连接内网；两个内网不能直接UDP和TCP互联。</p>
<h2 id="分布式应用程序"><a href="#分布式应用程序" class="headerlink" title="分布式应用程序"></a>分布式应用程序</h2><ol>
<li><strong>定义：</strong> 将整个应用程序的处理分成几个部分，分别在不同的机器上运行。 “分布”：地理上的分布和数据处理上的分布。<em>常用TCP&#x2F;IP协议族</em></li>
<li><strong>特点：</strong><ul>
<li>程序执行涵盖了多台主机</li>
<li>两台或多台主机通过网络交互信息</li>
<li>多台主机共同完成一个任务</li>
<li>分布式应用程序对用户来说是透明的，目的在于提供一个环境。</li>
</ul>
</li>
<li><strong>分类（5种）：</strong> 远程控制类应用程序、远程探测类应用程序、网络管理类应用程序、远程通讯类应用程序、信息发布类应用程序</li>
<li><strong>设计目标：</strong> 透明</li>
<li><strong>举例：</strong> E-mail、IRC、Telnet、信用卡支付、网络购物、飞行控制、行程预定</li>
</ol>
<h2 id="会聚点问题"><a href="#会聚点问题" class="headerlink" title="会聚点问题"></a>会聚点问题</h2><p>网络通信是底层物理网络和各层通信协议实现的。</p>
<ol>
<li><p><strong>概述：</strong> 每个程序的执行速度远快于用户的操作速度，因此它们在同一瞬间向对方发送消息并从此继续通信下去的概率低。</p>
<ul>
<li>确定通信双方的角色，用以部署每个通信实体的具体功能</li>
<li>确定通信双方的通信次序</li>
<li>确定通信的传送形式</li>
</ul>
</li>
<li><p><strong>本质：</strong> 网络间通信完全是异步的</p>
</li>
<li><p><strong>解决方案：</strong></p>
<ul>
<li><p>要求下层通讯协议在请求报文到达后自动创建运行程序</p>
</li>
<li><p>要求在任何一对进行通信的应用进程中，有一方必须在启动执行后（无期限）等待对方与其联系。<em>（客户—服务器模型）</em></p>
</li>
</ul>
</li>
</ol>
<h2 id="客户服务器模型"><a href="#客户服务器模型" class="headerlink" title="客户服务器模型"></a>客户服务器模型</h2><ol>
<li><p><strong>理解：</strong></p>
<p>(1)建立网络的起因是网络中软硬件资源、运算能力和信息不均等。</p>
<p>(2)网络间进程通信完全是异步的</p>
<p><strong>客户(Client)：</strong> 发起对等通信的应用程序；请求的主动方，向服务器发出请求，接收服务器应答</p>
<p><strong>服务器(Server)：</strong> 等待接收客户通信请求的应用程序；请求的被动方，开放服务，等待请求，提供服务，做出响应</p>
</li>
<li><p><strong>客户与服务器间的关系：</strong> </p>
<ul>
<li><p><strong>数量关系</strong> </p>
<ul>
<li><p>多个客户进程同时访问一个服务器进程（多对一）</p>
</li>
<li><p>一个客户进程同时访问多个服务器提供的服务（一对多）</p>
</li>
</ul>
</li>
<li><p><strong>位置关系</strong></p>
<ul>
<li>客户和服务器运行在同一机器上</li>
<li>客户和服务器运行在同一个局域网内的不同机器上</li>
<li>客户和服务器运行于广域网不同网络内的机器上</li>
</ul>
</li>
<li><p><strong>角色关系</strong></p>
<ul>
<li><p>应用程序作为纯粹的客户运行</p>
</li>
<li><p>应用程序作为纯粹的服务器运行</p>
</li>
<li><p>应用程序同时具有客户和服务器两种角色</p>
</li>
</ul>
</li>
</ul>
</li>
<li><p><strong>服务器分类</strong></p>
<ul>
<li><p>无连接和面向连接</p>
<table>
<thead>
<tr>
<th align="center"></th>
<th align="center">优点</th>
<th align="center">缺点</th>
</tr>
</thead>
<tbody><tr>
<td align="center">面向连接（TCP）</td>
<td align="center">易于编程</td>
<td align="center">资源消耗问题</td>
</tr>
<tr>
<td align="center">无连接（UDP）</td>
<td align="center">无资源消耗问题</td>
<td align="center">编程复杂</td>
</tr>
</tbody></table>
<ul>
<li>意义：决定了客户和服务器交互所采用的算法；决定了下层系统所提供的可靠性等级。</li>
</ul>
</li>
</ul>
</li>
</ol>
<ul>
<li><p>无状态和有状态</p>
<p>状态信息：服务器所维护的于客户交互活动的信息。</p>
<ul>
<li><p>有状态服务器：保存状态信息的服务器</p>
<p>优势：减少了客户和服务器交换报文的大小；允许服务器快速响应请求；</p>
</li>
<li><p>无状态服务器：不保存任何状态信息的服务器</p>
<p>优势：提高协议的可靠性</p>
</li>
</ul>
</li>
<li><p>循环和并发</p>
<ul>
<li><p>并发服务器：一个时刻处理多个客户请求</p>
<p><em>并发缩短响应时间的情况：</em></p>
<p>a. 构造响应要求有相当的I&#x2F;O时间</p>
<p>b. 每个请求需要响应处理时间变化大</p>
<p>c. 服务器运行在一个拥有多处理器的计算机上</p>
<ul>
<li><p>循环服务器：一个时刻处理一个客户请求</p>
<p><em>循环服务器无法满足情况：</em></p>
<p>a. 客户的响应时间远大于服务器的请求处理时间</p>
<p>b. 服务器的请求处理时间大于单个请求要求的时间范围</p>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<ol start="4">
<li><p><strong>C&#x2F;S模型的优缺点</strong></p>
<ul>
<li><p><strong>优点：</strong> </p>
<p>a. 结构简单</p>
<p>b. 支持分布式</p>
<p>c. 服务器集中管理资源，有利于权限控制和系统安全</p>
<p>d. 可扩展性好</p>
</li>
<li><p><strong>缺点：</strong> </p>
<p>a. 缺乏有效的安全性</p>
<p>b. 客户负荷过重</p>
<p>c. 服务器工作效率低</p>
<p>d. 容易造成网络堵塞</p>
</li>
</ul>
</li>
<li><p><strong>其他</strong> </p>
<p><strong>B&#x2F;S模型（浏览器&#x2F;服务器模型）：</strong> 客户端是某种流行的浏览器，使用HTTP协议</p>
<p>B&#x2F;S和C&#x2F;S区别：客户端不同，B&#x2F;S客户端是浏览器，C&#x2F;S有多种客户端。</p>
<p><strong>P2P模型：</strong> 每个联网的计算机同时运行一个应用程序的Client部分和Server部分</p>
</li>
</ol>
<h2 id="网络数据的内容和形态"><a href="#网络数据的内容和形态" class="headerlink" title="网络数据的内容和形态"></a>网络数据的内容和形态</h2><h3 id="一、字节序"><a href="#一、字节序" class="headerlink" title="一、字节序"></a>一、字节序</h3><p>​            意义：大于一个字节类型的数据在内存中存放顺序。</p>
<ol>
<li><p><strong>大端顺序（网络字节序）：</strong>  高字节数据存放在内存的低地址，低字节数据存放在内存的高地址。</p>
<img src="C:\Users\Lai_zH\AppData\Roaming\Typora\typora-user-images\1653206461092.png" alt="1653206461092"  />
</li>
<li><p><strong>小端顺序（主机字节序x86）：</strong> 低字节数据存放在内存的高地址，高字节数据存放在内存的低地址</p>
<p>​                                                                    <img src="C:\Users\Lai_zH\AppData\Roaming\Typora\typora-user-images\1653206393526.png" alt="1653206393526">                                                                                                                                       </p>
</li>
<li><p><strong>发送接收数据</strong></p>
<p>发送：把主机字节序转化为网络字节序</p>
<p>接收：把网络字节序转化为主机字节序</p>
<p><strong>转化函数：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">htons()//把unsigned short 类型从主机序转化到网络序</span><br><span class="line">ntohs()//把unsigned short 类型从网络序转化到主机序</span><br><span class="line">htonl()//把unsigned long 类型从主机序转化到网络序</span><br><span class="line">ntohl()//把unsigned long 类型从网络序转化到主机序</span><br></pre></td></tr></table></figure>

<p><strong><code>转化步骤：</code></strong> 80为例</p>
<p>a. 80 转化为十六进制：0x50（0x0050）</p>
<p>b. 0x0050 高低字节序互换：0x5000</p>
<p>c. 0x5000 转化为10进制：20480</p>
</li>
</ol>
<h3 id="二、结构的对齐与填充"><a href="#二、结构的对齐与填充" class="headerlink" title="二、结构的对齐与填充"></a>二、结构的对齐与填充</h3><ol>
<li><p><strong>对齐：</strong> 长度为<strong>n</strong>字节的数据<strong>d</strong>所存放的地址<strong>m</strong>能被<strong>n</strong>整除,则<strong>d</strong>是对齐的</p>
</li>
<li><p><strong>对齐策略：</strong> </p>
<p>a. 结构体变量<strong>首地址</strong>能够被其<strong>最宽基本类型成员</strong>的大小所整除；</p>
<p>b. 结构体每个成员<strong>相对于</strong>结构体<strong>首地址的偏移量</strong>都是<strong>成员大小的整数倍</strong>，如有需要，编译器会在成员之间加上填充字节；</p>
<p>c. 结构体的<strong>总大小为结构体最宽成员大小的整数倍</strong>，否则在末尾成员后加填充。</p>
</li>
<li><p><strong>改变默认对齐方式</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> pack(push,1)<span class="comment">//以1对齐 n=(1,2,4,8,16)，当n大于最大成员时，以最大成员为准</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">A</span> &#123;</span><br><span class="line">    <span class="type">char</span> ch;<span class="comment">//1</span></span><br><span class="line">    <span class="type">int</span> a;<span class="comment">//4 MAX_size</span></span><br><span class="line">    <span class="type">short</span> b;<span class="comment">//2</span></span><br><span class="line">    <span class="type">char</span> c[<span class="number">6</span>];<span class="comment">//1x6</span></span><br><span class="line">    <span class="comment">//string str;//1x40</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> pack(pop)<span class="comment">//终止 size=13</span></span></span><br></pre></td></tr></table></figure>
</li>
<li><p><strong>网络数据传输形式</strong>：文本、二进制</p>
<ul>
<li><p>文本串：用在一些用消息命令消息标识符的协议中，HTTP、FTP等</p>
</li>
<li><p>二进制：用在消息固定大小的数据区域的协议中，IP、TCP</p>
</li>
</ul>
</li>
</ol>
<h2 id="三、字符编码"><a href="#三、字符编码" class="headerlink" title="三、字符编码"></a>三、字符编码</h2><h3 id="1、UTF-8"><a href="#1、UTF-8" class="headerlink" title="1、UTF-8"></a>1、UTF-8</h3><blockquote>
<p>​        Unicode编码范围(16)                             UTF-8编码字节序列(2)                                             </p>
<p>​      0000 0000-0000 007F              |                 0xxxxxxxx                                                                                             </p>
<p>​      0000 0080-0000 07FF                |                    110xxxxx    10xxxxxx                                                      </p>
<p>​      0000 0800-0000 FFFF                |                    1110xxxx    10xxxxxx    10xxxxxx                                       </p>
<p>​      0001 0000-0010 FFFF                |                    11110xxx    10xxxxxx    10xxxxxx     10xxxxxx                                   </p>
</blockquote>
<h4 id="UTF-8编码方式："><a href="#UTF-8编码方式：" class="headerlink" title="UTF-8编码方式："></a>UTF-8编码方式：</h4><ul>
<li><p>根据字符的十六进制Unicode码查找范围；</p>
</li>
<li><p>将十六进制转换为二进制；</p>
</li>
<li><p>将<strong>该字符的二进制码从最后一位倒序</strong>依次<strong>从后往前</strong>填入UTF-8序列中，不足补0；</p>
</li>
<li><p>将得到的二进制码转化成十六进制；</p>
<p><strong>注：</strong> a. 对于<strong>英文字母</strong>只有一个字节，<strong>UTF-8的编码和其ASCII码相同</strong>；</p>
<p>​            b. 汉字的Unicode编码范围： <strong>4E00-9FA5</strong> ，所以<strong>汉字由3字节</strong>来组织；</p>
</li>
</ul>
<h2 id="四、协议软件接口"><a href="#四、协议软件接口" class="headerlink" title="四、协议软件接口"></a>四、协议软件接口</h2><h3 id="4-1-协议软件接口功能"><a href="#4-1-协议软件接口功能" class="headerlink" title="4.1 协议软件接口功能"></a>4.1 协议软件接口功能</h3><ol>
<li><p><strong>接口位置：</strong> 位于应用程序和操作系统之间。</p>
<ol start="2">
<li><strong>功能</strong></li>
</ol>
<ul>
<li>基本功能：<ul>
<li>分配用于通信的本地资源</li>
<li>指定本地和远程通信端点</li>
<li>（客户端）启动连接</li>
<li>（服务器端）等待连接</li>
<li>发送或接收数据</li>
<li>判断数据何时到达</li>
<li>从容终止连接</li>
</ul>
</li>
<li>辅助功能：<ul>
<li>产生紧急数据</li>
<li>处理到来的紧急数据</li>
</ul>
</li>
</ul>
</li>
</ol>
<h3 id="4-2-协议簇类型"><a href="#4-2-协议簇类型" class="headerlink" title="4.2 协议簇类型"></a>4.2 协议簇类型</h3><ul>
<li>PF_INET:    IPv4协议簇</li>
<li>PF_INET6:    IPv6协议簇</li>
<li>PF_IPX:    IPX&#x2F;SPX协议簇</li>
<li>PF_NETBIOS:     NetBios 协议簇</li>
</ul>
<h3 id="4-3-套接字"><a href="#4-3-套接字" class="headerlink" title="4.3 套接字"></a>4.3 套接字</h3><h4 id="4-3-1-概念"><a href="#4-3-1-概念" class="headerlink" title="4.3.1 概念"></a>4.3.1 概念</h4><p>​        支持TCP&#x2F;IP的网络通信的基本操作单元，看作是不同主机进程双向通信的端点。</p>
<p>​        上接应用程序，下联协议栈，是应用程序通过网络协议进行通信的接口，是应用程序与网络协议栈进行交互的接口。</p>
<h4 id="4-3-2-套接字的类型"><a href="#4-3-2-套接字的类型" class="headerlink" title="4.3.2 套接字的类型"></a>4.3.2 套接字的类型</h4><ul>
<li>流式套接字（<strong>SOCK_STREAM</strong>）：TCP协议</li>
<li>数据报套接字（<strong>SOCK_DGRAM</strong>）:  UDP套接字</li>
<li>原始套接字（<strong>SOCK_RAW</strong>）:    IP协议</li>
</ul>
<h4 id="4-3-3-套接字通信过程"><a href="#4-3-3-套接字通信过程" class="headerlink" title="4.3.3 套接字通信过程"></a>4.3.3 套接字通信过程</h4><ul>
<li>建立一个socket</li>
<li>配置socket</li>
<li>连接socket</li>
<li>通过socket发送数据</li>
<li>通过socket接收数据</li>
<li>关闭socket</li>
</ul>
<h2 id="五、TCP、UDP"><a href="#五、TCP、UDP" class="headerlink" title="五、TCP、UDP"></a>五、TCP、UDP</h2><h3 id="5-1-三次握手、四次挥手原因"><a href="#5-1-三次握手、四次挥手原因" class="headerlink" title="5.1 三次握手、四次挥手原因"></a>5.1 三次握手、四次挥手原因</h3><p>​            因为当主机2收到主机1的SYN连接请求报文后，可以直接发送SYN+ACK报文。其中，ACK用于应答，SYN用于同步。但连接关闭时，当主句2收到FIN报文时，可能并不会立即关闭socket,所以只能回复一个ACK报文，告诉主机1，收到FIN报文。只有当主句2发送完所有数据发送完，才发送FIN报文，因此不能一起发送，故需要四部握手。</p>
<h3 id="5-2-四次挥手为什么要TIME-WAIT状态"><a href="#5-2-四次挥手为什么要TIME-WAIT状态" class="headerlink" title="5.2 四次挥手为什么要TIME_WAIT状态"></a>5.2 四次挥手为什么要TIME_WAIT状态</h3><ul>
<li>防止最后一个ACK丢失</li>
<li>为本次连接中“离群的段”提供网络中消失的时间</li>
<li>TIME_WAIT等于2MSL（MSL:最大报文段生存时间，4分钟）</li>
</ul>
<h3 id="5-3-TCP协议的传输特点"><a href="#5-3-TCP协议的传输特点" class="headerlink" title="5.3 TCP协议的传输特点"></a>5.3 TCP协议的传输特点</h3><ul>
<li>端到端通信</li>
<li>建立可靠连接</li>
<li>可靠交付</li>
<li>具有流控制的传输</li>
<li>双工传输</li>
<li>流模式</li>
</ul>
<p><strong>TCP流的传送特点：</strong> 无边界、传送时机未知、写入、读出、传送形态各异</p>
<h3 id="5-4-connect"><a href="#5-4-connect" class="headerlink" title="5.4 connect"></a>5.4 connect</h3><h4 id="5-4-1-connect的功能"><a href="#5-4-1-connect的功能" class="headerlink" title="5.4.1 connect的功能"></a>5.4.1 connect的功能</h4><ul>
<li><strong>TCP：</strong> 会引起三次握手、与远程服务器建立连接</li>
<li><strong>UDP：</strong> 套接字关联远程ip和端口号，没有网络通信行为</li>
</ul>
<h4 id="5-4-2-connect-的区别"><a href="#5-4-2-connect-的区别" class="headerlink" title="5.4.2 connect 的区别"></a>5.4.2 connect 的区别</h4><p><strong>TCP：</strong> 会引起三次握手，有网络通信行为；只能调用一次</p>
<p><strong>UDP：</strong> 套接字关联远程IP和端口号，没有网络通信行为；可以调用多次</p>
<h2 id="六、WinPcap"><a href="#六、WinPcap" class="headerlink" title="六、WinPcap"></a>六、WinPcap</h2><h3 id="1、WinPcap功能"><a href="#1、WinPcap功能" class="headerlink" title="1、WinPcap功能"></a>1、WinPcap功能</h3><ul>
<li><p>直接在网卡上捕捉数据帧，其捕获的数据帧可以是发往本机的，也可是在其他设备上交互的；</p>
</li>
<li><p>在数据帧递交给某应用程序前，根据用户指定的规则实现核心层数据帧过滤；</p>
</li>
<li><p>通过网卡直接发送原始数据帧；</p>
</li>
<li><p>收集并统计网络流量信息</p>
</li>
</ul>
<h3 id="2、动态链接库功能"><a href="#2、动态链接库功能" class="headerlink" title="2、动态链接库功能"></a>2、动态链接库功能</h3><h4 id="Packet-dll"><a href="#Packet-dll" class="headerlink" title="Packet.dll"></a>Packet.dll</h4><ul>
<li>安装、启动和停止NPF设备驱动</li>
<li>从NPF驱动接收数据帧</li>
<li>通过NPF驱动发送数据帧</li>
<li>获取可用的网卡列表</li>
<li>获取网卡的不同信息</li>
<li>查询并设置一个底层的网卡参数</li>
</ul>
<h4 id="wpcap-dll"><a href="#wpcap-dll" class="headerlink" title="wpcap.dll"></a>wpcap.dll</h4><ul>
<li>获取网卡列表</li>
<li>获取网卡的不同信息</li>
<li>使用PC的一个网卡来捕获数据帧</li>
<li>向网络上发送数据</li>
<li>有效保存数据帧到磁盘和读取磁盘中的原始数据帧</li>
<li>使用高级语言创建数据帧过滤器，并把它们应用于数据捕获</li>
</ul>
<h2 id="七、套接字设置"><a href="#七、套接字设置" class="headerlink" title="七、套接字设置"></a>七、套接字设置</h2><h3 id="6-1-发送、接收超时设置"><a href="#6-1-发送、接收超时设置" class="headerlink" title="6.1 发送、接收超时设置"></a>6.1 发送、接收超时设置</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//发送超时设置</span></span><br><span class="line"><span class="type">int</span> time=<span class="number">1000</span>;</span><br><span class="line"><span class="type">int</span> r=<span class="built_in">setsockopt</span>(s,SOL_SOCKET,SO_SNDTIMEO,(<span class="type">char</span> *)&amp;time,<span class="built_in">sizeof</span>(time));</span><br><span class="line"></span><br><span class="line"><span class="comment">//接收超时设置</span></span><br><span class="line"><span class="type">int</span> time=<span class="number">1000</span>;</span><br><span class="line"><span class="type">int</span> r=<span class="built_in">setsockopt</span>(s,SOL_SOCKET,SO_RCVTIMEO,(<span class="type">char</span> *)&amp;time,<span class="built_in">sizeof</span>(time));</span><br></pre></td></tr></table></figure>

<h3 id="6-2-阻塞、非阻塞设置"><a href="#6-2-阻塞、非阻塞设置" class="headerlink" title="6.2 阻塞、非阻塞设置"></a>6.2 阻塞、非阻塞设置</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//阻塞设置</span></span><br><span class="line"><span class="type">int</span> mode=<span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> r=<span class="built_in">ioctlsocket</span>(s,FIONBIO,(<span class="type">unsigned</span> <span class="type">long</span> *)&amp;mode);</span><br><span class="line"></span><br><span class="line"><span class="comment">//非阻塞设置</span></span><br><span class="line"><span class="type">int</span> mode=<span class="number">1</span>;</span><br><span class="line"><span class="type">int</span> r=<span class="built_in">ioctlsocket</span>(s,FIONBIO,(<span class="type">unsigned</span> <span class="type">long</span> *)&amp;mode);</span><br></pre></td></tr></table></figure>

<h3 id="6-3-广播设置"><a href="#6-3-广播设置" class="headerlink" title="6.3 广播设置"></a>6.3 广播设置</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//广播设置</span></span><br><span class="line"><span class="comment">//设置广播地址结构</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">sockaddr_in</span> addr;</span><br><span class="line">addr.sin_family = AF_INET;</span><br><span class="line">addr.sin_port = <span class="built_in">htons</span>(SERER_PORT);</span><br><span class="line">addr.sin_addr.S_un.S_addr = INADDR_BROADCAST;</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置广播套接字</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">long</span> broadcast = <span class="number">1</span>;</span><br><span class="line"><span class="type">int</span> r=<span class="built_in">setsockopt</span>(s, SOL_SOCKET, SO_BROADCAST, (<span class="type">const</span> <span class="type">char</span>*)&amp;broadcast, <span class="built_in">sizeof</span>(broadcast));</span><br><span class="line"></span><br><span class="line"><span class="comment">//发送</span></span><br><span class="line">iResult = <span class="built_in">sendto</span>(s, buf, <span class="built_in">strlen</span>(buf), <span class="number">0</span>, (<span class="type">const</span> sockaddr*)&amp;addr, len);</span><br><span class="line">iResult = <span class="built_in">recvfrom</span>(s, buf, <span class="number">100</span>, <span class="number">0</span>, (sockaddr*)&amp;Saddr, &amp;len);</span><br><span class="line">Saddr<span class="comment">//服务器地址信息</span></span><br></pre></td></tr></table></figure>

<h3 id="6-4-获取地址信息（-gethostbyname-域名-or-IP-）"><a href="#6-4-获取地址信息（-gethostbyname-域名-or-IP-）" class="headerlink" title="6.4 获取地址信息（ gethostbyname( 域名 or IP) ）"></a>6.4 获取地址信息（ gethostbyname( 域名 or IP) ）</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//用户指定地址获取 域名/ip</span></span><br><span class="line"><span class="type">char</span> str[]=<span class="string">&quot;www.baidu.com&quot;</span>;</span><br><span class="line">hostent* lphost;<span class="comment">//LPHOSTENT lphost</span></span><br><span class="line">lphost=<span class="built_in">gethostbyname</span>(str);</span><br><span class="line"><span class="keyword">if</span>(lphost==<span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;失败！&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">caddr.sin_addr.S_un.S_addr = *(<span class="type">unsigned</span> <span class="type">long</span> FAR*)(lphost-&gt;h_addr);</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取本地地址</span></span><br><span class="line"><span class="type">char</span> host[<span class="number">100</span>];</span><br><span class="line"><span class="built_in">memset</span>(&amp;host,<span class="number">0</span>,<span class="built_in">sizeof</span>(host));</span><br><span class="line"><span class="built_in">gethostname</span>(host, <span class="built_in">sizeof</span>(host));<span class="comment">//获取本机的主机名</span></span><br><span class="line">hostent* lphost;</span><br><span class="line">lphost = <span class="built_in">gethostbyname</span>(host);<span class="comment">//通过主机名获取本机IP</span></span><br><span class="line"><span class="keyword">if</span>(lphost==<span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;失败！&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">sockaddr_in</span> addr;</span><br><span class="line">addr.sin_addr.S_un.S_addr = *(<span class="type">unsigned</span> <span class="type">long</span> FAR*)(lphost-&gt;h_addr);</span><br></pre></td></tr></table></figure>

<h2 id="八、模型"><a href="#八、模型" class="headerlink" title="八、模型"></a>八、模型</h2><h3 id="1、I-x2F-O复用"><a href="#1、I-x2F-O复用" class="headerlink" title="1、I&#x2F;O复用"></a>1、I&#x2F;O复用</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">fd_set fdRead,fdSocket;</span><br><span class="line"><span class="built_in">FD_ZERO</span>(&amp;fdSocket);</span><br><span class="line"><span class="built_in">FD_SET</span>(s,&amp;fd_Socket);</span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line">    fdResd=fdSocket;</span><br><span class="line">    iResult=<span class="built_in">select</span>(<span class="number">0</span>,&amp;fdRead,<span class="literal">NULL</span>,<span class="literal">NULL</span>,<span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">if</span>(iResult&gt;<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;(<span class="type">int</span>)fdSocket.fd_count;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">FD_ISSET</span>(fdSocket.fd_array[i]),&amp;fdRead)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(fdSocket.fd_count[i]==s)<span class="comment">//监听套接字活动</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(fdSocket.fd_count&lt;FD_SETSIZE)</span><br><span class="line">                    &#123;</span><br><span class="line">                        AcceptSocket=<span class="built_in">accept</span>(s,(sockaddr*)&amp;addrClient,&amp;addrClientlen);</span><br><span class="line">                        <span class="keyword">if</span>(AcceptSocket==INVALID_SOCKET)</span><br><span class="line">                        &#123;</span><br><span class="line"></span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="built_in">FD_SET</span>(AcceptSocket,&amp;fd_Socket); </span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span><span class="comment">//数据到达</span></span><br><span class="line">                &#123;</span><br><span class="line">                    iResult=<span class="built_in">recv</span>(s,buf,buflen,<span class="number">0</span>);</span><br><span class="line">                    <span class="keyword">if</span>(iResult&gt;<span class="number">0</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span>(iResult==<span class="number">0</span>)<span class="comment">//连接关闭</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        cout&lt;&lt;....</span><br><span class="line">                        <span class="built_in">closesocket</span>(fdSocket.fd_array[i]);</span><br><span class="line">                        <span class="built_in">FD_CLR</span>(fdSocket.fd_array[i],&amp;fdSocket);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span><span class="comment">//接收失败</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        cout&lt;&lt;....</span><br><span class="line">                        <span class="built_in">closesocket</span>(fdSocket.fd_array[i]);</span><br><span class="line">                        <span class="built_in">FD_CLR</span>(fdSocket.fd_array[i],&amp;fdSocket);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;select error&quot;</span>&lt;&lt;...</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2、WSAAsyncSelect-模型"><a href="#2、WSAAsyncSelect-模型" class="headerlink" title="2、WSAAsyncSelect 模型"></a>2、WSAAsyncSelect 模型</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(uMsg==WM_SOCKET)</span><br><span class="line">&#123;</span><br><span class="line">    s=wParam;<span class="comment">//套接字获取</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">WSAGETSELECTERROR</span>(lParam))</span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;错误号:&quot;</span>&lt;&lt;<span class="built_in">WSAGETSELECTERROR</span>(lParam);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">switch</span>(<span class="built_in">WSAGETSELECTEVENT</span>(lParam))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> FD_ACCEPT:</span><br><span class="line">                AcceptSocket=<span class="built_in">accept</span>(s,(sockaddr*)&amp;addrClient,&amp;addrClientlen);</span><br><span class="line">                <span class="built_in">WSAAsyncSelect</span>(AcceptSocket,hwnd,WM_SOCKET,FD_READ|FD_WRITE|FD_CLOSE);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> FD_READ:</span><br><span class="line">                ......</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> FD_WRITE:</span><br><span class="line">                ......</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> FD_CLOSE:</span><br><span class="line">                .....</span><br><span class="line">                <span class="built_in">closesocket</span>(s);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">。。。。。。。</span><br><span class="line"></span><br><span class="line"><span class="built_in">WSAAsyncSelect</span>(SeverSocket,hwnd,WM_SOCKET,FD_ACCEPT);</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">GetMessage</span>(&amp;Msg,<span class="literal">NULL</span>,<span class="number">0</span>,<span class="number">0</span>))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">TranslateMessage</span>(&amp;Msg);</span><br><span class="line">    <span class="built_in">DispatchMessage</span>(&amp;Msg);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="3、WSAEventSelect模型"><a href="#3、WSAEventSelect模型" class="headerlink" title="3、WSAEventSelect模型"></a>3、WSAEventSelect模型</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">WSAEVENT Event=<span class="built_in">WSACreateEvent</span>();</span><br><span class="line"><span class="type">int</span> iIndex=<span class="number">0</span>,i;</span><br><span class="line"><span class="type">int</span> iEventTotal;</span><br><span class="line"></span><br><span class="line">WSAEVENT eventArray[WSA_MAXIMUM_WAIT_EVENTS];</span><br><span class="line">SOCKET sockArray[WSA_MAXIMUM_WAIT_EVENTS];</span><br><span class="line"></span><br><span class="line"><span class="built_in">WSAEventSelect</span>(ServerSocket,Event,FD_ACCEPT);</span><br><span class="line">eventArray[iEventTotal]=Event;</span><br><span class="line">sockArray[iEventTotal]=ServerSokcet;</span><br><span class="line">iEventTotal++;</span><br><span class="line"></span><br><span class="line">sockaddr_in addrClient;</span><br><span class="line"><span class="type">int</span> addrClientlen=<span class="built_in">sizeof</span>(sockaddr_in);</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line">    iIndex=<span class="built_in">WSAWiatForMultipleEvents</span>(iEventTotal,eventArray,FALSE,WSA_INFINITE,FALSE);</span><br><span class="line">    iIndex=iIndex-WSA_WAIT_EVENT_0;</span><br><span class="line">    <span class="keyword">for</span>(i=iIndex;i&lt;iEventTotal;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        WSANETWORKEVENTS newevent;</span><br><span class="line">        <span class="built_in">WSAEnumNetworkEvents</span>(sockArray[i],evetnArray[i],&amp;newevent);</span><br><span class="line">        <span class="keyword">if</span>(newevent.lNetworkEvents&amp;FD_ACCEPT)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(newevent.iErrorCode[FD_ACCEPT_BIF]==<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Socket AcceptSocket=<span class="built_in">accept</span>(ServerSocket,(sockaddr*)&amp;addrClient,&amp;addrClientlen);</span><br><span class="line">                WSAEVENT newevent1=<span class="built_in">WSACreateEvent</span>();</span><br><span class="line">                <span class="built_in">WSASelectEvent</span>(AcceptSocket,newevent1,FD_READ|FD_WRITE|FD_CLOSE);</span><br><span class="line">                eventArray[iEventTotal]=newevent1;</span><br><span class="line">                sockArray[iEventTotal]=AcceptSocket;</span><br><span class="line">                iEventTotal++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(newevent.lNetworkEvents&amp;FD_READ)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(newevent.iErrorCode[FD_READ_BIT]==<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(newevent.lNetworkEvents&amp;FD_WRITE)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(newevent.iEventCode[FD_WRITE_BIT]==<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(newevent.lNetworkEvent&amp;FD_CLOSE)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(newevent.iErrorCode[FD_CLOSE_BIT]==<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">closesocket</span>(sockArray[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="4、初始化部分"><a href="#4、初始化部分" class="headerlink" title="4、初始化部分"></a>4、初始化部分</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">WSADATA wsaData;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">WSAStartup</span>(<span class="built_in">MAKEWORD</span>(<span class="number">2</span>, <span class="number">2</span>), &amp;wsaData) != <span class="number">0</span>) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Error!&quot;</span> &lt;&lt; <span class="built_in">WSAGetLastError</span>() &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//创建监听套接字</span></span><br><span class="line">    SOCKET ServerSocket = INVALID_SOCKET;</span><br><span class="line">    ServerSocket = <span class="built_in">socket</span>(AF_INET, SOCK_STREAM, IPPROTO_TCP);</span><br><span class="line">    <span class="keyword">if</span> (ServerSocket == INVALID_SOCKET) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Error!&quot;</span> &lt;&lt; <span class="built_in">WSAGetLastError</span>() &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//地址解析</span></span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">sockaddr_in</span> server;</span><br><span class="line">    server.sin_family = AF_INET;</span><br><span class="line">    server.sin_port = <span class="built_in">htons</span>(DEFAULT_PORT);</span><br><span class="line">    <span class="built_in">inet_pton</span>(AF_INET, argv[<span class="number">1</span>], &amp;server.sin_addr);</span><br><span class="line">    <span class="comment">//绑定地址和端口号</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">bind</span>(ServerSocket, (<span class="type">const</span> sockaddr*)&amp;server, <span class="built_in">sizeof</span>(sockaddr_in)) == SOCKET_ERROR) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Error!&quot;</span> &lt;&lt; <span class="built_in">WSAGetLastError</span>() &lt;&lt; endl;</span><br><span class="line">        <span class="built_in">closesocket</span>(ServerSocket);</span><br><span class="line">        <span class="built_in">WSACleanup</span>();</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//监听套接字</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">listen</span>(ServerSocket, SOMAXCONN) == SOCKET_ERROR) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;Error!&quot;</span> &lt;&lt; <span class="built_in">WSAGetLastError</span>() &lt;&lt; endl;</span><br><span class="line">        <span class="built_in">closesocket</span>(ServerSocket);</span><br><span class="line">        <span class="built_in">WSACleanup</span>();</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;TCP服务器启动!&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">sockaddr_in</span> client;</span><br><span class="line">    <span class="type">socklen_t</span> clientlen = <span class="built_in">sizeof</span>(client);</span><br><span class="line">    SOCKET ClientSocket = <span class="built_in">accept</span>(ServerSocket, (sockaddr*)&amp;client, &amp;clientlen);</span><br><span class="line"></span><br><span class="line"><span class="comment">//connect</span></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">connect</span>(ConnectSocket, (sockaddr*)&amp;client_addr, <span class="built_in">sizeof</span>(sockaddr_in)) == SOCKET_ERROR)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;连接失败!\n&quot;</span> &lt;&lt; <span class="built_in">WSAGetLastError</span>() &lt;&lt; endl;</span><br><span class="line">        <span class="built_in">closesocket</span>(ConnectSocket);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>赖总笔记</category>
      </categories>
      <tags>
        <tag>赖总笔记</tag>
        <tag>网络编程</tag>
      </tags>
  </entry>
  <entry>
    <title>路由交换技术</title>
    <url>/xuanyao/a9bc7a91.html</url>
    <content><![CDATA[<h2 id="简答（20）"><a href="#简答（20）" class="headerlink" title="简答（20）"></a>简答（20）</h2><h3 id="一、交换机、路由器"><a href="#一、交换机、路由器" class="headerlink" title="一、交换机、路由器"></a>一、交换机、路由器</h3><h4 id="交换机"><a href="#交换机" class="headerlink" title="交换机"></a>交换机</h4><ol>
<li><strong>概念：</strong> 一种用于电信号转发的网络设备 </li>
<li><strong>作用：</strong> 负责连接网络设备和终端设备。</li>
<li><strong>功能：</strong> 核心功能是完成MAC帧输入端口至输出端口的交换过程。连接终端设备，是实现与其它交换机、无线接入点、路由器、网络防火墙等网络设备的互联，从而构建局域网络，实现所有设备之间的通信。</li>
<li><strong>工作原理：</strong> 某端口接到数据包，获取源MAC地址，源MAC地址和端口对应添加到地址表中；</li>
</ol>
<p>​                            再获取目标MAC地址，查表，找到对应端口，将数据包复制到对应端口上转发；</p>
<p>​                            未找到端口，则向除源端口外的所有端口广播该帧，与目标MAC地址相同的终端会接收该帧；</p>
<p>​                            将接收该帧的端口与目标MAC地址对应起来，存入地址表</p>
<ol start="5">
<li><strong>转发方式</strong></li>
</ol>
<ul>
<li><p><strong>直通转发方式：</strong>交换机无需接收完整的MAC帧，在接收到该帧的目标MAC地址后就开始转发过程</p>
<ul>
<li><strong>缺陷：</strong>有可能转发长度小于64B的MAC帧和已经发生传输错误的MAC帧</li>
</ul>
</li>
<li><p><strong>碎片避免转发方式：</strong>交换机在接收到64B后，在开始MAC帧输入端口至输出端口的交换操作。通过输出端口转发MAC帧，避免了碎片的转发。</p>
</li>
<li><p><strong>存储转发方式：</strong> 交换机接收完完整的MAC帧，再计算CRC码，将CRC码与FCS字段比较，相等，则传输未发生错误，转发；不相等，丢弃该MAC帧。</p>
<ol start="6">
<li><strong>交换机端到端传输过程功能：</strong></li>
</ol>
</li>
<li><p>检测MAC帧经过每一段物理链路传输后是否出错，并丢弃出错的MAC帧；</p>
</li>
<li><p>选择通往目的终端的传输路径。</p>
</li>
</ul>
<h4 id="路由器"><a href="#路由器" class="headerlink" title="路由器"></a>路由器</h4><h5 id="1、路由器功能"><a href="#1、路由器功能" class="headerlink" title="1、路由器功能"></a>1、路由器功能</h5><ul>
<li><strong>网络互联：</strong> 用于互联局域网和广域网，实现不同网络互相通信</li>
<li><strong>数据处理：</strong> 提供包括：分组过滤、分组转发、优先级、复用、加密、防火墙等功能</li>
<li><strong>网络管理：</strong> 提供包括：配置管理、性能管理、容错管理、流量控制等功能</li>
</ul>
<h5 id="2、路由项"><a href="#2、路由项" class="headerlink" title="2、路由项"></a>2、路由项</h5><ul>
<li><p>直连路由项：IP和子网掩码配置过程中自动生成</p>
</li>
<li><p><strong>静态路由项：</strong> 人工配置，指明没有直接和路由器连接的网络传输路径</p>
<ol>
<li><p><strong>特点：</strong></p>
<ul>
<li>不进行路由交换，减少网络流量</li>
<li>具有更高的安全性</li>
<li>是单向的</li>
<li>配置简单</li>
<li>允许对路由的行为进行精确控制</li>
</ul>
</li>
<li><p><strong>缺陷：</strong> </p>
<ul>
<li><p>难以为大型网络中各路由器配置一致的静态路由</p>
</li>
<li><p>不能动态适应不断变化地互联网络拓扑结构</p>
</li>
<li><p>容错难以实现</p>
</li>
<li><p>为大型网络所有路由器配置静态路由项工作量巨大</p>
</li>
</ul>
</li>
</ol>
</li>
<li><p><strong>动态路由项：</strong> 路由器运行路由协议生成的与互联网络拓扑结构一致的、用于指明网络传输路径 </p>
<ol>
<li>特点：<ul>
<li>无需管理员手工维护，减轻了管理员工作负担</li>
<li>进行路由交换，占用了网络宽带</li>
<li>运行路由协议，自动根据网络拓扑结构变化调整路由条目</li>
</ul>
</li>
<li>缺陷：<ul>
<li>路由广播更新信息占据大量地网络宽带</li>
</ul>
</li>
</ol>
</li>
</ul>
<h3 id="二、广播域和冲突域"><a href="#二、广播域和冲突域" class="headerlink" title="二、广播域和冲突域"></a>二、广播域和冲突域</h3><h4 id="1、冲突域"><a href="#1、冲突域" class="headerlink" title="1、冲突域"></a>1、冲突域</h4><p>​        <strong>冲突域：</strong> 总线上的终端中只能有一个终端发送数据，一旦两个或两个以上发送，就产生冲突，因此，具有这种特性的网络所覆盖的地理范围叫冲突域。</p>
<h4 id="2、广播域"><a href="#2、广播域" class="headerlink" title="2、广播域"></a>2、广播域</h4><ol>
<li><p><strong>定义：</strong> 目的MAC地址为广播地址的MAC帧在网络中的传播范围。</p>
</li>
<li><p><strong>广播域和冲突域的区别：</strong> 任何终端发送的MAC帧均覆盖整个冲突域，而只有以广播方式传输的MAC帧才能覆盖整个广播域。</p>
<p>支持广播型传输方式的网络被称为广播型网络。整个交换式以太网就是一个广播域。</p>
</li>
<li><p>对于以太网，广播操作不可避免：一是通过不断广播才能建立完整的转发表；二是TCP&#x2F;IP协议栈中很多协议（ARP、DHCP等）都是面向广播的协议。</p>
<p><strong>频繁广播导致：</strong> 网络带宽利用率及终端负荷加大，且由于广播将MAC帧传输个广播域中每一个终端，从而引发了MAC中数据安全问题。 </p>
</li>
<li><p><strong>解决问题的方法条件：</strong> </p>
<ul>
<li>不改变大型以太网物理连接的前提下，任意划分子网</li>
<li>每个子网的终端具备物理位置无关性</li>
<li>子网划分和子网中终端的组成通过改变配置改变，对网络物理连接没新要求。</li>
</ul>
</li>
</ol>
<h3 id="三、VLAN"><a href="#三、VLAN" class="headerlink" title="三、VLAN"></a>三、VLAN</h3><ol>
<li><p><strong>子网划分技术：</strong> 对连接到的第二层交换机端口的网络用户的逻辑分段，不受网络用户的物理位置限制而根据用户需求进行网络分段。</p>
</li>
<li><p><strong>分类：</strong> a. 基于端口划分的VLAN</p>
<p>​                b. 基于MAC地址划分的VLAN</p>
<p>​                c. 基于协议划分的VLAN</p>
<p>​                d. 基于网络划分的VLAN</p>
<p><strong>数据vlan、默认vlan、黑洞vlan、本征vlan、管理vlan、语音vlan</strong></p>
</li>
<li><p><strong>故障排除</strong></p>
<ul>
<li>本征VLAN不匹配</li>
<li>vlan和IP子网</li>
<li>中继模式不匹配</li>
<li>中继上允许的vlan</li>
</ul>
</li>
</ol>
<h3 id="四、RIP、OSPF"><a href="#四、RIP、OSPF" class="headerlink" title="四、RIP、OSPF"></a>四、RIP、OSPF</h3><h4 id="RIP"><a href="#RIP" class="headerlink" title="RIP"></a>RIP</h4><h5 id="1、工作原理"><a href="#1、工作原理" class="headerlink" title="1、工作原理"></a>1、工作原理</h5><ul>
<li>更新周期到来时，向邻居发送整个路由表</li>
<li>以跳数为度量值，根据跳数多少选择最佳路由</li>
<li>每经过一个路由器跳数加一，最大15，16为不可达</li>
<li>默认情况下，每30秒广播一次更新信息</li>
</ul>
<h5 id="2、缺陷"><a href="#2、缺陷" class="headerlink" title="2、缺陷"></a>2、缺陷</h5><ul>
<li>以跳数为距离的最短路由并非最佳路由</li>
<li>只适用于小规模的互联网络</li>
<li>好消息传的快，坏消息传的慢</li>
<li>发送全部路由项浪费带宽和时间</li>
<li>无法避免计数到无穷大情况</li>
</ul>
<h4 id="OSPF"><a href="#OSPF" class="headerlink" title="OSPF"></a>OSPF</h4><h5 id="1、工作原理-1"><a href="#1、工作原理-1" class="headerlink" title="1、工作原理"></a>1、工作原理</h5><ul>
<li>向相邻路由器发送Hello报文，确定每一条链路状态</li>
<li>构建链路状态公告</li>
<li>通过泛洪机制交换链路状态信息</li>
<li>建立链路状态数据库</li>
</ul>
<h5 id="2、优点"><a href="#2、优点" class="headerlink" title="2、优点"></a>2、优点</h5><ul>
<li>适用大范围网络</li>
<li>组播触发式更新</li>
<li>收敛速度快</li>
<li>开销作为度量值</li>
<li>避免路由环路产生</li>
<li>应用广泛</li>
</ul>
<h5 id="3、缺点"><a href="#3、缺点" class="headerlink" title="3、缺点"></a>3、缺点</h5><ul>
<li>配置复杂，技术水平比较高</li>
<li>路由自身负载分担能力低</li>
</ul>
<h4 id="RIP和OSPF区别"><a href="#RIP和OSPF区别" class="headerlink" title="RIP和OSPF区别"></a>RIP和OSPF区别</h4><ul>
<li>适用范围不同，RIP适用于中小型网络，OSPF适用于大型网络</li>
<li>RIP周期性更新所有路由项，OSPF实时更新部分链路状态</li>
<li>RIP以跳数为度量值，OSPF以链路状态为度量值</li>
<li>RIP向相邻路由器发送整个路由表，OSPF向互联网中所有路由器发送状态信息</li>
</ul>
<h2 id="计算（30）"><a href="#计算（30）" class="headerlink" title="计算（30）"></a>计算（30）</h2><h3 id="一、STP生成树"><a href="#一、STP生成树" class="headerlink" title="一、STP生成树"></a>一、STP生成树</h3><h4 id="1、定义"><a href="#1、定义" class="headerlink" title="1、定义"></a>1、定义</h4><p><strong>根网桥：</strong> 网桥标识符（<strong>BID</strong>）最小的网桥 （优先级采用相同的默认值时，最小MAC地址为根网桥)</p>
<p><strong>根路径：</strong> 通往<strong>根网桥</strong>的路径</p>
<p><strong>根路径开销：</strong> 根路径通过的所有端口路径开销之和</p>
<p><strong>根端口（Root）：</strong> 该网桥的一条根路径通过的端口；该网桥所有根路径中，经过该端口的根路径开销最小</p>
<p><strong>指定端口（Desg）：</strong> 向网段转发来自根网桥的MAC帧的端口（连接终端的指定端口为指定端口）</p>
<p><strong>网桥协议数据单元：</strong> <strong>BPDU</strong>，只在两个网桥之间传输，不能转发</p>
<h4 id="2、计算"><a href="#2、计算" class="headerlink" title="2、计算"></a>2、计算</h4><ul>
<li><p><strong>确定根网桥：</strong> <strong>网桥标识符（BID）</strong> 最小</p>
</li>
<li><p><strong>确定根端口（非根网桥）：</strong> </p>
<p>​        a.   比较该网桥所有端口接受的BPDU中<strong>根网桥的BID</strong>，BID最小为Root</p>
<p>​        b.   最小存在多个时，<strong>比较根路径开销</strong>，最小为Root</p>
<p>​        <strong>c.</strong>   满足以上条件的端口存在多个时，比较与端口<strong>相连的网桥的BID</strong>，最小的为Root</p>
<p>​        <strong>d.</strong>   满足以上条件的端口存在多个时，<strong>比较BPDU中</strong>发送端口标识符，最小为Root</p>
</li>
<li><p><strong>确定指定端口：</strong>非根端口接收到BPDU后</p>
<p>​        a.   BPDU的根网桥标识符大于该端口的根网桥标识符</p>
<p>​        b.   BID相等时，BPDU中路径开销大于该端口路径开销的为指定端口</p>
<p>​        <strong>c.</strong>    满足以上条件的端口存在多个时，比较与端口<strong>相连的网桥的BID</strong> 与<strong>端口所在网桥BID</strong> ，前者大，则为                     指定端口</p>
<p>​        <strong>d.</strong>  满足以上条件的端口存在多个时，比较<strong>BPDU中发送端口标识符</strong>和<strong>自身标识符</strong> ，前者大，则为指                定端口</p>
<p><strong>注：</strong> 根网桥所有端口为指定端口；</p>
<p>​            每一个网段都有一个指定端口，其余为根或非指定；</p>
<p>​            每个网桥都有一个根端口</p>
<h3 id="3、端口状态"><a href="#3、端口状态" class="headerlink" title="3、端口状态"></a>3、端口状态</h3><ol>
<li><strong>关闭状态：</strong> 物理上与网络分离</li>
<li><strong>阻塞状态：</strong> 只允许接收、处理BPDU</li>
<li><strong>侦听状态：</strong> 不允许输入输出数据帧，可以输入输出BPDU</li>
<li><strong>学习状态：</strong> 允许输入输出数据帧、BPDU、建立MAC地址转发表，但不能转发</li>
<li><strong>转发状态：</strong> 允许输入输出数据帧、BPDU，以及正常接收、转发数据帧</li>
</ol>
</li>
</ul>
<h3 id="二、子网划分"><a href="#二、子网划分" class="headerlink" title="二、子网划分"></a>二、子网划分</h3><h2 id="综合（50）"><a href="#综合（50）" class="headerlink" title="综合（50）"></a>综合（50）</h2><h3 id="一、VLAN划分"><a href="#一、VLAN划分" class="headerlink" title="一、VLAN划分"></a>一、VLAN划分</h3><p><strong>1、基于端口划分：</strong>  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1、创建vlan</span><br><span class="line">Switch&gt;enable</span><br><span class="line">Switch#conf t    //进入特权模式</span><br><span class="line">Switch(config)#vlan 2</span><br><span class="line">Switch(config-vlan)#name A  //vlan名称</span><br><span class="line">Switch(config-vlan)#exit</span><br><span class="line"></span><br><span class="line">2、分配接入端口  //用于和终端连接的端口</span><br><span class="line">Switch(config)#int fa0/1</span><br><span class="line">Switch(config-if)#switchport mode access//指定为接入端口</span><br><span class="line">Switch(config-if)#switchport access vlan 2</span><br><span class="line">Switch(config-if)#no shut  </span><br><span class="line">Switch(config-if)#exit</span><br><span class="line"></span><br><span class="line">3、分配共享端口 （中继）  //用于将多个接收多个vlan数据，一般在与其他VLAN相连的端口配置</span><br><span class="line">S1(config)#int fa0/2</span><br><span class="line">S1(config-if)#sw mo tr</span><br><span class="line">S1(config-if)#sw tr allowed vlan 2,3</span><br><span class="line">Switch(config-if)#no shut  </span><br><span class="line">S1(config-if)#exit</span><br><span class="line"></span><br><span class="line">4、同时操作多个端口</span><br><span class="line">S1(config)#int range fa0/1-4</span><br><span class="line">S1(config-if-range)#sw mo ac</span><br><span class="line">S1(config-if-range)#sw ac vlan 3</span><br><span class="line">Switch(config-if)#no shut  </span><br><span class="line">S1(config-if-range)#exit</span><br><span class="line"></span><br><span class="line">5、本征vlan配置</span><br><span class="line">S1(config)#interface fa0/1</span><br><span class="line">S1(config-if)#switchport mode trunk//配置为中继端口</span><br><span class="line">S1(config-if)#switchport trunk native vlan 99//为fa0/2配置本征vlan99</span><br><span class="line">Switch(config-if)#no shut  </span><br><span class="line">S1(config-if)#exit</span><br><span class="line"></span><br><span class="line">6、查看命令</span><br><span class="line">S1#show vlan brief //显示VLAN名称和端口状态</span><br><span class="line">S1#show interfaces trunk//能够给出哪些接口是中继以及允许（allowed）哪些vlan等</span><br><span class="line">S1#show interfaces fa0/1 switchport//显示端口是access/trunk,如果是access,显示属于哪个vlan以及属于哪个本征vlan</span><br></pre></td></tr></table></figure>

<p><strong>跨交换机VLAN配置：</strong> 与交换机相接的端口要配置共享端口<strong>trunk</strong> </p>
<h3 id="二、密码配置"><a href="#二、密码配置" class="headerlink" title="二、密码配置"></a>二、密码配置</h3><h4 id="1、交换机"><a href="#1、交换机" class="headerlink" title="1、交换机"></a>1、交换机</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Switch#  //特权模式</span><br><span class="line">Switch(config)#  //全局静态模式</span><br><span class="line"></span><br><span class="line">Switch(config)#username admin password 123//进入CIL用户密码设置</span><br><span class="line">Switch(config)#line console 0    / li co 0</span><br><span class="line">Switch(config-line)#password cisco</span><br><span class="line">Switch(config-line)#login local</span><br><span class="line">Switch(config-line)#exit</span><br><span class="line">Switch(config)#line vty 0 4   //设置远程连接数</span><br><span class="line">Switch(config-line)#password cisco   //设置远程登陆密码</span><br><span class="line">Switch(config-line)#login local  //设置远程登陆用户名、密码检测</span><br><span class="line">Switch(config-line)#exit</span><br><span class="line">//Switch(config-line)#login     //设置远程登陆密码检测</span><br><span class="line"></span><br><span class="line">(Switch(config)#enable password class)</span><br><span class="line">Switch(config)#enable secret class//特权模式密码配置</span><br></pre></td></tr></table></figure>



<h3 id="三、动静态协议配置"><a href="#三、动静态协议配置" class="headerlink" title="三、动静态协议配置"></a>三、动静态协议配置</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//静态路由配置</span><br><span class="line">Router(config)#ip route 目的地址  子网掩码  下一跳</span><br><span class="line"></span><br><span class="line">//RIP配置</span><br><span class="line">Router(config)#router rip</span><br><span class="line">Router(config-router)#version 2</span><br><span class="line">Router(config-router)#no auto-summary</span><br><span class="line">Router(config-router)#network 192.1.3.0  //(邻近网络号)</span><br><span class="line">Router(config-router)#network 192.1.2.0</span><br><span class="line">......</span><br><span class="line">Router(config-router)#exit</span><br><span class="line">Router(config)#ip route 目的地址  子网掩码  下一跳</span><br><span class="line">....</span><br><span class="line">Router#show ip route //查看路由表</span><br><span class="line">Router#show ip protocols //查看网络路由协议配置</span><br><span class="line"></span><br><span class="line">//OSPF配置</span><br><span class="line">Router(config)#router ospf 1</span><br><span class="line">//Router(config-router)#router-id 192.168.1.1</span><br><span class="line">Router(config-router)#network 192.1.1.0 0.0.0.255 area 1 //单区域配置(0.0.0.xxx 通配符)</span><br><span class="line">Router(config-router)#exit</span><br><span class="line">...</span><br><span class="line">Router#show ip ospf nei  //查看邻居关系</span><br></pre></td></tr></table></figure>

<h3 id="四、单臂路由配置"><a href="#四、单臂路由配置" class="headerlink" title="四、单臂路由配置"></a>四、单臂路由配置</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//单臂路由配置</span><br><span class="line">Router(config)#int fa0/0</span><br><span class="line">Router(config-if)#no shut</span><br><span class="line">Router(config-if)#exit</span><br><span class="line"></span><br><span class="line">Router(config)#int fa0/0.1   //fa0/0 .  vlan-id</span><br><span class="line">Router(config-subif)#encap dot 1   //vlan-id</span><br><span class="line">Router(config-subif)#ip address ......</span><br><span class="line">Router(config-subif)#exit</span><br></pre></td></tr></table></figure>

<h3 id="五、基础配置命令"><a href="#五、基础配置命令" class="headerlink" title="五、基础配置命令"></a>五、基础配置命令</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Router#show con se0/0/1   //查看 DCE 还是 DTE</span><br><span class="line">Router#Undebug ip routing  //禁止所有路由更新项</span><br><span class="line">Router#Undebug all//禁用所有调试，关闭Debug </span><br><span class="line"></span><br><span class="line">//路由器基础配置</span><br><span class="line">Router(config)#hostname Router1</span><br><span class="line">Router1(config)#int fa0/1   //端口配置</span><br><span class="line">Router1(config-if)#no shut</span><br><span class="line">Router1(config-if)#ip address 192.1.1.1 255.255.255.0</span><br><span class="line">Router1(config-if)#exit</span><br><span class="line"></span><br><span class="line">S1#show running-config//显示交换机运行配置</span><br><span class="line">S1#copy run start//保存运行配置</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>赖总笔记</category>
      </categories>
      <tags>
        <tag>赖总笔记</tag>
        <tag>路由交换</tag>
      </tags>
  </entry>
</search>
